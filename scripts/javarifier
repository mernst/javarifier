#!/bin/sh
# javarifier: command-line interface for Javarifier

# usage: javarifier [options] classes

# See javarifier.html for more information.

# If the very first argument is "-d", debug this script.
DEBUG=0
if [ "$1" = "-d" ]; then
  DEBUG=1
  shift 1
fi

JRE_HOME=${JRE_HOME:-$(java -cp $(dirname $0) PrintJreHome)}
JDK_NAME=$(java -cp $(dirname $0) PrintJdkName)

JDK_JARS=\
${JRE_HOME}/lib/charsets.jar:\
${JRE_HOME}/lib/jce.jar:\
${JRE_HOME}/lib/jsse.jar:\
${JRE_HOME}/lib/management-agent.jar:\
${JRE_HOME}/lib/resources.jar:\
${JRE_HOME}/lib/rt.jar:\
${JRE_HOME}/../lib/tools.jar

# Classpath for finding user program.  If user provides -programCPEntries,
# their arguments will be passed in through the "$@" argument, and will
# override the default.
SOOT_PROGRAMS=${SOOT_PROGRAMS:-${CLASSPATH}}

BINDIR=$(dirname $0)
JRDIR=${BINDIR}/..
CHECKERS=${CHECKERS:-${BINDIR}/../../checker-framework/checkers}
CHECKERS_JAR=${CHECKERS}/binary/checkers.jar
JAVAC_JAR=${CHECKERS}/binary/javac.jar
JAVARIFIER_JDK=${JAVARIFIER_JDK:-${CHECKERS}/jdk/javari/build/}
JAVARIFIER_JDK_JAR=${JAVARIFIER_JDK_JAR:-${CHECKERS}/jdk/${JDK_NAME}}
AFU_BIN=${BINDIR}/../../annotation-tools/annotation-file-utilities/bin
AFU_JAR=${BINDIR}/../../annotation-tools/annotation-file-utilities/annotation-file-utilities.jar
JAVARIFIER_LIB=${JRDIR}/lib
JAVARIFIER_BIN=${JRDIR}/bin
PLUME_JAR=${JAVARIFIER_LIB}/plume.jar

if [ "$DEBUG" = "1" ]; then
  echo JRE_HOME=${JRE_HOME}
  echo JDK_NAME=${JDK_NAME}
  echo JDK_JARS=${JDK_JARS}
  echo SOOT_PROGRAMS=${SOOT_PROGRAMS}
  echo BINDIR=${BINDIR}
  echo JRDIR=${JRDIR}
  echo CHECKERS=${CHECKERS}
  echo CHECKERS_JAR=${CHECKERS_JAR}
  echo JAVARIFIER_JDK=${JAVARIFIER_JDK}
  echo JAVARIFIER_JDK_JAR=${JAVARIFIER_JDK_JAR}
  echo AFU_BIN=${AFU_BIN}
  echo AFU_JAR=${AFU_JAR}
  echo JAVARIFIER_LIB=${JAVARIFIER_LIB}
  echo JAVARIFIER_BIN=${JAVARIFIER_BIN}
  echo PLUME_JAR=${PLUME_JAR}
fi

# JAVARIFIER_BIN and AFU_JAR are on classpath because they may be more
# recent than javarifier.jar, if, in a checkout, developer does "ant bin"
# instead of "ant jarfile".
# Including CHECKERS_JAR in defaultStubCPEntries
# permits use of Javari keywords like @Assignable.
if [ "$DEBUG" = "1" ]; then
  # Keep this line in sync with the actual executed command, immediately below.
  echo java -ea -Xmx1024m -Xbootclasspath/p:${JAVARIFIER_JDK_JAR}:${JAVAC_JAR}:${CHECKERS_JAR} -cp ${JAVARIFIER_BIN}:${PLUME_JAR}:${AFU_BIN}:${AFU_JAR}:${JRDIR}/javarifier.jar:${JDK_JARS} \
	 javarifier.Main \
	 --defaultStubCPEntries ${JAVARIFIER_JDK_JAR}:${CHECKERS_JAR} \
	 --defaultWorldCPEntries ${JDK_JARS}:${CHECKERS_JAR} \
	 --programCPEntries "${SOOT_PROGRAMS}" \
	 "$@"
fi
java -ea -Xmx1024m -Xbootclasspath/p:${JAVARIFIER_JDK_JAR}:${JAVAC_JAR}:${CHECKERS_JAR} -cp ${JAVARIFIER_BIN}:${PLUME_JAR}:${AFU_BIN}:${AFU_JAR}:${JRDIR}/javarifier.jar:${JDK_JARS} \
	 javarifier.Main \
	 --defaultStubCPEntries ${JAVARIFIER_JDK_JAR}:${CHECKERS_JAR} \
	 --defaultWorldCPEntries ${JDK_JARS}:${CHECKERS_JAR} \
	 --programCPEntries "${SOOT_PROGRAMS}" \
	 "$@"

# Remove temporary soot output directory.
rm -rf ${BINDIR}/sootOutput
