import checkers.javari.quals.Mutable;
import checkers.javari.quals.ReadOnly;
import checkers.javari.quals.QReadOnly;
public class Arrays {

    public static class Day {
        public int day;
        public Day() @ReadOnly { }
        public Day(int d) @ReadOnly { this.day = d; }
        public int getDay() /*readonly*/ @ReadOnly { return day; }
        public void setDay(int d) /*mutable*/ @Mutable { this.day = d; }
    }

    public void foo() /*readonly*/ @ReadOnly {
        /*readonly*/ @ReadOnly Day @Mutable [/*mutable*/] ma = new Day[1];
        /*readonly*/ @ReadOnly Day d = new Day();
        ma[0] = d;
        /*readonly*/ @ReadOnly Day x = ma[0];
        int y = x.getDay();
    }

    public void bar() /*readonly*/ @ReadOnly {
        /*mutable*/ @Mutable Day @Mutable [/*mutable*/] ma = new Day[1];
        /*mutable*/ @Mutable Day d = new Day();
        ma[0] = d;
        /*mutable*/ @Mutable Day x = ma[0];
        int y = x.getDay();
        x.setDay(y);
    }

    public void baz() /*readonly*/ @ReadOnly {
        /*mutable*/ @Mutable Day @Mutable [/*mutable*/] ma = new Day[1];
        ma[0] = new Day();
        ma[0].setDay(2);

        /*? readonly*/ @QReadOnly Day @ReadOnly [/*readonly*/] ra = ma;
        /*readonly*/ @ReadOnly Day x = ra[0];
        int y = x.getDay();

     }


    public void quax() /*readonly*/ @ReadOnly {
        /*mutable*/ @Mutable Day @Mutable [/*mutable*/] ma = new Day[1];
        /*mutable*/ @Mutable Day d = new Day();
        ma[0] = d;

        /*mutable*/ @Mutable Day @ReadOnly [/*readonly*/] ra = ma;
        /*mutable*/ @Mutable Day x = ra[0];
        int y = x.getDay();
        x.setDay(y);
    }
}
