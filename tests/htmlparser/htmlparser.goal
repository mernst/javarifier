package checkers.javari.quals:
annotation visible @ReadOnly:

package checkers.javari.quals:
annotation visible @Mutable:

package checkers.javari.quals:
annotation visible @PolyRead:

package checkers.javari.quals:
annotation visible @ThisMutable:

package checkers.javari.quals:
annotation visible @QReadOnly:

package org.htmlparser:
class Attribute:

    field mName: @checkers.javari.quals.ThisMutable

    field mAssignment: @checkers.javari.quals.ThisMutable

    field mValue: @checkers.javari.quals.ThisMutable

    field mQuote:

    method <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.Mutable
        parameter #3:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+39: @checkers.javari.quals.Mutable
        local 1 #0+39: @checkers.javari.quals.Mutable
        local 2 #0+39: @checkers.javari.quals.Mutable
        local 3 #0+39: @checkers.javari.quals.Mutable
        local 4 #0+39:

    method <init>(Ljava/lang/String;Ljava/lang/String;C)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+19: @checkers.javari.quals.ReadOnly
        local 1 #0+19: @checkers.javari.quals.Mutable
        local 2 #0+19: @checkers.javari.quals.Mutable
        local 3 #0+19:

    method <init>(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+45: @checkers.javari.quals.Mutable
        local 1 #0+45: @checkers.javari.quals.Mutable

    method <init>(Ljava/lang/String;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+19: @checkers.javari.quals.ReadOnly
        local 1 #0+19: @checkers.javari.quals.Mutable
        local 2 #0+19: @checkers.javari.quals.Mutable

    method <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly
        local 1 #0+9: @checkers.javari.quals.Mutable
        local 2 #0+9: @checkers.javari.quals.Mutable
        local 3 #0+9: @checkers.javari.quals.Mutable

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly

    method getName()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getName(Ljava/lang/StringBuffer;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+17: @checkers.javari.quals.Mutable
        local 1 #0+17: @checkers.javari.quals.Mutable

    method setName(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method getAssignment()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getAssignment(Ljava/lang/StringBuffer;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+17: @checkers.javari.quals.Mutable
        local 1 #0+17: @checkers.javari.quals.Mutable

    method setAssignment(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method getValue()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getValue(Ljava/lang/StringBuffer;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+17: @checkers.javari.quals.Mutable
        local 1 #0+17: @checkers.javari.quals.Mutable

    method setValue(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method getQuote()C:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getQuote(Ljava/lang/StringBuffer;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+17: @checkers.javari.quals.ReadOnly
        local 1 #0+17: @checkers.javari.quals.Mutable

    method setQuote(C)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method getRawValue()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+61: @checkers.javari.quals.Mutable
        local 1 #12+45:
        local 2 #24+25: @checkers.javari.quals.Mutable
        local 3 #46+3: @checkers.javari.quals.ReadOnly
        local 3 #54+3: @checkers.javari.quals.ReadOnly
        local 3 #59+2: @checkers.javari.quals.ReadOnly

    method getRawValue(Ljava/lang/StringBuffer;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+16: @checkers.javari.quals.Mutable
        local 1 #0+16: @checkers.javari.quals.Mutable

    method setRawValue(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+325: @checkers.javari.quals.Mutable
        local 1 #0+325: @checkers.javari.quals.Mutable
        local 8 #3+322:
        local 3 #109+204:
        local 4 #112+201:
        local 5 #115+198:
        local 9 #118+83:
        local 2 #128+64:
        local 6 #237+76: @checkers.javari.quals.Mutable
        local 7 #258+55: @checkers.javari.quals.Mutable
        local 9 #261+46:
        local 2 #271+27:

    method isWhitespace()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable

    method isStandAlone()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+18: @checkers.javari.quals.Mutable

    method isEmpty()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+18: @checkers.javari.quals.Mutable

    method isValued()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable

    method getLength()I:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+74: @checkers.javari.quals.Mutable
        local 5 #3+71:
        local 1 #8+66: @checkers.javari.quals.Mutable
        local 2 #26+48: @checkers.javari.quals.Mutable
        local 3 #44+30: @checkers.javari.quals.Mutable
        local 4 #63+11:

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+24: @checkers.javari.quals.Mutable
        local 1 #5+19:
        local 2 #14+10: @checkers.javari.quals.Mutable

    method toString(Ljava/lang/StringBuffer;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+16: @checkers.javari.quals.Mutable
        local 1 #0+16: @checkers.javari.quals.Mutable

package org.htmlparser:
class Node:

    method toPlainTextString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method toHtml()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method collectInto(Lorg/htmlparser/util/NodeList;Lorg/htmlparser/NodeFilter;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method getStartPosition()I:
        receiver: @checkers.javari.quals.ReadOnly

    method setStartPosition(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable

    method getEndPosition()I:
        receiver: @checkers.javari.quals.ReadOnly

    method setEndPosition(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable

    method getPage()Lorg/htmlparser/lexer/Page;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.PolyRead

    method setPage(Lorg/htmlparser/lexer/Page;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method accept(Lorg/htmlparser/visitors/NodeVisitor;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable

    method getParent()Lorg/htmlparser/Node;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead

    method setParent(Lorg/htmlparser/Node;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method getChildren()Lorg/htmlparser/util/NodeList;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead

    method setChildren(Lorg/htmlparser/util/NodeList;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method getFirstChild()Lorg/htmlparser/Node;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

    method getLastChild()Lorg/htmlparser/Node;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

    method getPreviousSibling()Lorg/htmlparser/Node;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

    method getNextSibling()Lorg/htmlparser/Node;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

    method getText()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable

    method setText(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method doSemanticAction()V:
        receiver: @checkers.javari.quals.Mutable

    method clone()Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable

package org.htmlparser:
class NodeFactory:

    method createStringNode(Lorg/htmlparser/lexer/Page;II)Lorg/htmlparser/Text;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.Mutable

    method createRemarkNode(Lorg/htmlparser/lexer/Page;II)Lorg/htmlparser/Remark;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.Mutable

    method createTagNode(Lorg/htmlparser/lexer/Page;IILjava/util/Vector;)Lorg/htmlparser/Tag;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        parameter #3: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

package org.htmlparser:
class NodeFilter:

    method accept(Lorg/htmlparser/Node;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

package org.htmlparser:
class Parser:

    field VERSION_NUMBER:

    field VERSION_TYPE: @checkers.javari.quals.ReadOnly

    field VERSION_DATE: @checkers.javari.quals.ReadOnly

    field VERSION_STRING: @checkers.javari.quals.ReadOnly

    field mFeedback: @checkers.javari.quals.ReadOnly

    field mLexer: @checkers.javari.quals.ThisMutable

    field DEVNULL: @checkers.javari.quals.ReadOnly

    field STDOUT: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method getVersion()Ljava/lang/String;: @checkers.javari.quals.ReadOnly

    method getVersionNumber()D:

    method getConnectionManager()Lorg/htmlparser/http/ConnectionManager;: @checkers.javari.quals.Mutable

    method setConnectionManager(Lorg/htmlparser/http/ConnectionManager;)V:
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+5: @checkers.javari.quals.Mutable

    method createParser(Ljava/lang/String;Ljava/lang/String;)Lorg/htmlparser/Parser;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+40: @checkers.javari.quals.Mutable
        local 1 #0+40: @checkers.javari.quals.Mutable
        local 2 #38+2: @checkers.javari.quals.ReadOnly

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+24: @checkers.javari.quals.ReadOnly

    method <init>(Lorg/htmlparser/lexer/Lexer;Lorg/htmlparser/util/ParserFeedback;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+40: @checkers.javari.quals.Mutable
        local 1 #0+40: @checkers.javari.quals.Mutable
        local 2 #0+40: @checkers.javari.quals.ReadOnly

    method <init>(Ljava/net/URLConnection;Lorg/htmlparser/util/ParserFeedback;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+14: @checkers.javari.quals.ReadOnly
        local 1 #0+14: @checkers.javari.quals.Mutable
        local 2 #0+14: @checkers.javari.quals.ReadOnly

    method <init>(Ljava/lang/String;Lorg/htmlparser/util/ParserFeedback;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+13: @checkers.javari.quals.ReadOnly
        local 1 #0+13: @checkers.javari.quals.Mutable
        local 2 #0+13: @checkers.javari.quals.ReadOnly

    method <init>(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly
        local 1 #0+9: @checkers.javari.quals.Mutable

    method <init>(Lorg/htmlparser/lexer/Lexer;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly
        local 1 #0+9: @checkers.javari.quals.Mutable

    method <init>(Ljava/net/URLConnection;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly
        local 1 #0+9: @checkers.javari.quals.Mutable

    method setConnection(Ljava/net/URLConnection;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+27: @checkers.javari.quals.Mutable
        local 1 #0+27: @checkers.javari.quals.Mutable

    method getConnection()Ljava/net/URLConnection;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly

    method setURL(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+25: @checkers.javari.quals.Mutable
        local 1 #0+25: @checkers.javari.quals.Mutable

    method getURL()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly

    method setEncoding(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+12: @checkers.javari.quals.Mutable
        local 1 #0+12: @checkers.javari.quals.Mutable

    method getEncoding()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly

    method setLexer(Lorg/htmlparser/lexer/Lexer;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+99: @checkers.javari.quals.Mutable
        local 1 #0+99: @checkers.javari.quals.Mutable
        local 2 #6+92: @checkers.javari.quals.Mutable
        local 3 #46+52: @checkers.javari.quals.Mutable

    method getLexer()Lorg/htmlparser/lexer/Lexer;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getNodeFactory()Lorg/htmlparser/NodeFactory;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

    method setNodeFactory(Lorg/htmlparser/NodeFactory;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+23: @checkers.javari.quals.Mutable
        local 1 #0+23: @checkers.javari.quals.Mutable

    method setFeedback(Lorg/htmlparser/util/ParserFeedback;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+20: @checkers.javari.quals.Mutable
        local 1 #0+20: @checkers.javari.quals.ReadOnly

    method getFeedback()Lorg/htmlparser/util/ParserFeedback;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method reset()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable

    method elements()Lorg/htmlparser/util/NodeIterator;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+16: @checkers.javari.quals.Mutable

    method parse(Lorg/htmlparser/NodeFilter;)Lorg/htmlparser/util/NodeList;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+58: @checkers.javari.quals.Mutable
        local 1 #0+58: @checkers.javari.quals.Mutable
        local 4 #9+49: @checkers.javari.quals.Mutable
        local 2 #14+44: @checkers.javari.quals.Mutable
        local 3 #24+22: @checkers.javari.quals.Mutable

    method visitAllNodesWith(Lorg/htmlparser/visitors/NodeVisitor;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+40: @checkers.javari.quals.Mutable
        local 1 #0+40: @checkers.javari.quals.ReadOnly
        local 3 #9+26: @checkers.javari.quals.Mutable
        local 2 #19+7: @checkers.javari.quals.Mutable

    method setInputHTML(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+43: @checkers.javari.quals.Mutable
        local 1 #0+43: @checkers.javari.quals.Mutable

    method extractAllNodesThatMatch(Lorg/htmlparser/NodeFilter;)Lorg/htmlparser/util/NodeList;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+40: @checkers.javari.quals.Mutable
        local 1 #0+40: @checkers.javari.quals.Mutable
        local 3 #8+32: @checkers.javari.quals.Mutable
        local 2 #13+27: @checkers.javari.quals.Mutable

    method extractAllNodesThatAre(Ljava/lang/Class;)[Lorg/htmlparser/Node;: @checkers.javari.quals.QReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+18: @checkers.javari.quals.Mutable
        local 1 #0+18: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #13+5: @checkers.javari.quals.Mutable

    method preConnect(Ljava/net/HttpURLConnection;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+14: @checkers.javari.quals.ReadOnly
        local 1 #0+14: @checkers.javari.quals.Mutable

    method postConnect(Ljava/net/HttpURLConnection;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+14: @checkers.javari.quals.ReadOnly
        local 1 #0+14: @checkers.javari.quals.Mutable

    method main([Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+182: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #119+57: @checkers.javari.quals.Mutable
        local 2 #136+3: @checkers.javari.quals.ReadOnly
        local 2 #141+35: @checkers.javari.quals.Mutable
        local 3 #177+4: @checkers.javari.quals.Mutable

package org.htmlparser:
class PrototypicalNodeFactory:

    field mText: @checkers.javari.quals.ThisMutable

    field mRemark: @checkers.javari.quals.ThisMutable

    field mTag: @checkers.javari.quals.ThisMutable

    field mBlastocyst: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        inner-type 1: @checkers.javari.quals.ThisMutable

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method <init>(Z)V:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+61: @checkers.javari.quals.Mutable
        local 1 #0+61:

    method <init>(Lorg/htmlparser/Tag;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11: @checkers.javari.quals.ReadOnly

    method <init>([Lorg/htmlparser/Tag;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+27: @checkers.javari.quals.Mutable
        local 1 #0+27: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #7+19:

    method put(Ljava/lang/String;Lorg/htmlparser/Tag;)Lorg/htmlparser/Tag;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+15: @checkers.javari.quals.Mutable
        local 1 #0+15: @checkers.javari.quals.ReadOnly
        local 2 #0+15: @checkers.javari.quals.ReadOnly

    method get(Ljava/lang/String;)Lorg/htmlparser/Tag;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+14: @checkers.javari.quals.Mutable
        local 1 #0+14: @checkers.javari.quals.Mutable

    method remove(Ljava/lang/String;)Lorg/htmlparser/Tag;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+14: @checkers.javari.quals.Mutable
        local 1 #0+14: @checkers.javari.quals.Mutable

    method clear()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+12: @checkers.javari.quals.Mutable

    method getTagNames()Ljava/util/Set;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable

    method registerTag(Lorg/htmlparser/Tag;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+37: @checkers.javari.quals.Mutable
        local 1 #0+37: @checkers.javari.quals.ReadOnly
        local 2 #7+30: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 3 #9+27:

    method unregisterTag(Lorg/htmlparser/Tag;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+36: @checkers.javari.quals.Mutable
        local 1 #0+36: @checkers.javari.quals.ReadOnly
        local 2 #7+29: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 3 #9+26:

    method registerTags()Lorg/htmlparser/PrototypicalNodeFactory;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+376: @checkers.javari.quals.Mutable

    method getTextPrototype()Lorg/htmlparser/Text;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setTextPrototype(Lorg/htmlparser/Text;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+27: @checkers.javari.quals.Mutable
        local 1 #0+27: @checkers.javari.quals.Mutable

    method getRemarkPrototype()Lorg/htmlparser/Remark;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setRemarkPrototype(Lorg/htmlparser/Remark;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+27: @checkers.javari.quals.Mutable
        local 1 #0+27: @checkers.javari.quals.Mutable

    method getTagPrototype()Lorg/htmlparser/Tag;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setTagPrototype(Lorg/htmlparser/Tag;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+28: @checkers.javari.quals.Mutable
        local 1 #0+28: @checkers.javari.quals.Mutable

    method createStringNode(Lorg/htmlparser/lexer/Page;II)Lorg/htmlparser/Text;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+58: @checkers.javari.quals.Mutable
        local 1 #0+58: @checkers.javari.quals.Mutable
        local 2 #0+58:
        local 3 #0+58:
        local 4 #14+27: @checkers.javari.quals.Mutable
        local 5 #43+12: @checkers.javari.quals.ReadOnly
        local 4 #55+3: @checkers.javari.quals.ReadOnly

    method createRemarkNode(Lorg/htmlparser/lexer/Page;II)Lorg/htmlparser/Remark;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+58: @checkers.javari.quals.Mutable
        local 1 #0+58: @checkers.javari.quals.Mutable
        local 2 #0+58:
        local 3 #0+58:
        local 4 #14+27: @checkers.javari.quals.Mutable
        local 5 #43+12: @checkers.javari.quals.ReadOnly
        local 4 #55+3: @checkers.javari.quals.ReadOnly

    method createTagNode(Lorg/htmlparser/lexer/Page;IILjava/util/Vector;)Lorg/htmlparser/Tag;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        parameter #3: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+226: @checkers.javari.quals.Mutable
        local 1 #0+226: @checkers.javari.quals.Mutable
        local 2 #0+226:
        local 3 #0+226:
        local 4 #0+226: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 8 #3+223: @checkers.javari.quals.Mutable
        local 5 #22+130: @checkers.javari.quals.Mutable
        local 6 #29+123: @checkers.javari.quals.Mutable
        local 7 #97+50: @checkers.javari.quals.Mutable
        local 9 #209+14: @checkers.javari.quals.ReadOnly

package org.htmlparser:
class Remark:

    method getText()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable

    method setText(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

package org.htmlparser:
class Tag:

    method getAttribute(Lorg/htmlparser/Tag;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

    method setAttribute(Ljava/lang/String;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method setAttribute(Ljava/lang/String;Ljava/lang/String;C)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2:
        receiver: @checkers.javari.quals.Mutable

    method removeAttribute(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method getAttributeEx(Ljava/lang/String;)Lorg/htmlparser/Attribute;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method setAttributeEx(Lorg/htmlparser/Attribute;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method getAttributesEx()Ljava/util/Vector;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.PolyRead

    method setAttributesEx(Ljava/util/Vector;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method getAttributes()Ljava/util/Hashtable;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        inner-type 1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable

    method setAttributes(Ljava/util/Hashtable;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
            inner-type 1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method getTagName()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method setTagName(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method getRawTagName()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method breaksFlow()Z:
        receiver: @checkers.javari.quals.Mutable

    method isEndTag()Z:
        receiver: @checkers.javari.quals.Mutable

    method isEmptyXmlTag()Z:
        receiver: @checkers.javari.quals.Mutable

    method setEmptyXmlTag(Z)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

    method getEnders()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.QReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

    method getEndTag()Lorg/htmlparser/Tag;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead

    method setEndTag(Lorg/htmlparser/Tag;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method getThisScanner()Lorg/htmlparser/scanners/Scanner;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

    method setThisScanner(Lorg/htmlparser/scanners/Scanner;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable

    method getStartingLineNumber()I:
        receiver: @checkers.javari.quals.ReadOnly

    method getEndingLineNumber()I:
        receiver: @checkers.javari.quals.ReadOnly

package org.htmlparser:
class Text:

    method getText()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method setText(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

package org.htmlparser.filters:
class AndFilter:

    field mPredicates: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable

    method <init>(Lorg/htmlparser/NodeFilter;Lorg/htmlparser/NodeFilter;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+23: @checkers.javari.quals.Mutable
        local 1 #0+23: @checkers.javari.quals.Mutable
        local 2 #0+23: @checkers.javari.quals.Mutable
        local 3 #9+14: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable

    method getPredicates()[Lorg/htmlparser/NodeFilter;: @checkers.javari.quals.QReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setPredicates([Lorg/htmlparser/NodeFilter;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+15: @checkers.javari.quals.Mutable
        local 1 #0+15: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method accept(Lorg/htmlparser/Node;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+42: @checkers.javari.quals.Mutable
        local 1 #0+42: @checkers.javari.quals.Mutable
        local 2 #2+40:
        local 3 #4+36:

package org.htmlparser.filters:
class HasParentFilter:

    field mParentFilter: @checkers.javari.quals.ThisMutable

    field mRecursive:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method <init>(Lorg/htmlparser/NodeFilter;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly
        local 1 #0+7: @checkers.javari.quals.Mutable

    method <init>(Lorg/htmlparser/NodeFilter;Z)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+15: @checkers.javari.quals.Mutable
        local 1 #0+15: @checkers.javari.quals.Mutable
        local 2 #0+15:

    method getParentFilter()Lorg/htmlparser/NodeFilter;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setParentFilter(Lorg/htmlparser/NodeFilter;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method getRecursive()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setRecursive(Z)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method accept(Lorg/htmlparser/Node;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+69: @checkers.javari.quals.Mutable
        local 1 #0+69: @checkers.javari.quals.Mutable
        local 3 #2+67:
        local 2 #28+39: @checkers.javari.quals.Mutable

package org.htmlparser.filters:
class IsEqualFilter:

    field mNode: @checkers.javari.quals.ReadOnly

    method <init>(Lorg/htmlparser/Node;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.ReadOnly

    method accept(Lorg/htmlparser/Node;)Z:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+12: @checkers.javari.quals.ReadOnly
        local 1 #0+12: @checkers.javari.quals.ReadOnly

package org.htmlparser.filters:
class NodeClassFilter:

    field mClass: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly

    method <init>(Ljava/lang/Class;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method getMatchClass()Ljava/lang/Class;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setMatchClass(Ljava/lang/Class;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method accept(Lorg/htmlparser/Node;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+25: @checkers.javari.quals.Mutable
        local 1 #0+25: @checkers.javari.quals.Mutable

package org.htmlparser.filters:
class NotFilter:

    field mPredicate: @checkers.javari.quals.ThisMutable

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable

    method <init>(Lorg/htmlparser/NodeFilter;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method getPredicate()Lorg/htmlparser/NodeFilter;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setPredicate(Lorg/htmlparser/NodeFilter;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method accept(Lorg/htmlparser/Node;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+24: @checkers.javari.quals.Mutable
        local 1 #0+24: @checkers.javari.quals.Mutable

package org.htmlparser.filters:
class OrFilter:

    field mPredicates: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable

    method <init>(Lorg/htmlparser/NodeFilter;Lorg/htmlparser/NodeFilter;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+23: @checkers.javari.quals.Mutable
        local 1 #0+23: @checkers.javari.quals.Mutable
        local 2 #0+23: @checkers.javari.quals.Mutable
        local 3 #9+14: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable

    method getPredicates()[Lorg/htmlparser/NodeFilter;: @checkers.javari.quals.QReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setPredicates([Lorg/htmlparser/NodeFilter;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+15: @checkers.javari.quals.Mutable
        local 1 #0+15: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method accept(Lorg/htmlparser/Node;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+42: @checkers.javari.quals.Mutable
        local 1 #0+42: @checkers.javari.quals.Mutable
        local 2 #2+40:
        local 3 #4+36:

package org.htmlparser.filters:
class TagNameFilter:

    field mName: @checkers.javari.quals.ThisMutable

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly

    method <init>(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+16: @checkers.javari.quals.Mutable
        local 1 #0+16: @checkers.javari.quals.Mutable

    method getName()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setName(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method accept(Lorg/htmlparser/Node;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+42: @checkers.javari.quals.Mutable
        local 1 #0+42: @checkers.javari.quals.Mutable

package org.htmlparser.http:
class ConnectionManager:

    field mDefaultRequestProperties: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        inner-type 1: @checkers.javari.quals.Mutable

    field FOUR_OH_FOUR: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field BASE64_CHAR_TABLE:
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mRequestProperties: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable
        inner-type 1: @checkers.javari.quals.ThisMutable

    field mProxyHost: @checkers.javari.quals.ReadOnly

    field mProxyPort:

    field mProxyUser: @checkers.javari.quals.ThisMutable

    field mProxyPassword: @checkers.javari.quals.ThisMutable

    field mUser: @checkers.javari.quals.ThisMutable

    field mPassword: @checkers.javari.quals.ThisMutable

    field mCookieJar: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        inner-type 1: @checkers.javari.quals.ThisMutable

    field mMonitor: @checkers.javari.quals.ReadOnly

    field mFormat: @checkers.javari.quals.Mutable

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

    method <init>(Ljava/util/Hashtable;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
            inner-type 1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+50: @checkers.javari.quals.Mutable
        local 1 #0+50: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
            inner-type 1: @checkers.javari.quals.Mutable

    method getDefaultRequestProperties()Ljava/util/Hashtable;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        inner-type 1: @checkers.javari.quals.Mutable

    method setDefaultRequestProperties(Ljava/util/Hashtable;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
            inner-type 1: @checkers.javari.quals.Mutable
        local 0 #0+5: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
            inner-type 1: @checkers.javari.quals.Mutable

    method getRequestProperties()Ljava/util/Hashtable;: @checkers.javari.quals.PolyRead
        inner-type 0: @checkers.javari.quals.PolyRead
        inner-type 1: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setRequestProperties(Ljava/util/Hashtable;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
            inner-type 1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
            inner-type 1: @checkers.javari.quals.Mutable

    method getProxyHost()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setProxyHost(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.ReadOnly

    method getProxyPort()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setProxyPort(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method getProxyUser()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setProxyUser(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method getProxyPassword()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setProxyPassword(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method getUser()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setUser(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method getPassword()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setPassword(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method getCookieProcessingEnabled()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly

    method setCookieProcessingEnabled(Z)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+38: @checkers.javari.quals.Mutable
        local 1 #0+38:

    method setCookie(Lorg/htmlparser/http/Cookie;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+195: @checkers.javari.quals.Mutable
        local 1 #0+195: @checkers.javari.quals.Mutable
        local 2 #0+195: @checkers.javari.quals.Mutable
        local 3 #17+178: @checkers.javari.quals.Mutable
        local 4 #48+147: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 6 #56+112:
        local 7 #59+95:
        local 5 #74+70: @checkers.javari.quals.Mutable

    method getMonitor()Lorg/htmlparser/http/ConnectionMonitor;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setMonitor(Lorg/htmlparser/http/ConnectionMonitor;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.ReadOnly

    method openConnection(Ljava/net/URL;)Ljava/net/URLConnection;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+800: @checkers.javari.quals.Mutable
        local 1 #0+800: @checkers.javari.quals.Mutable
        local 7 #3+797: @checkers.javari.quals.ReadOnly
        local 8 #6+794: @checkers.javari.quals.ReadOnly
        local 9 #9+791: @checkers.javari.quals.ReadOnly
        local 10 #12+788: @checkers.javari.quals.ReadOnly
        local 11 #15+785: @checkers.javari.quals.ReadOnly
        local 2 #33+83: @checkers.javari.quals.Mutable
        local 15 #122+343: @checkers.javari.quals.Mutable
        local 12 #137+241: @checkers.javari.quals.Mutable
        local 3 #142+236: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
            inner-type 1: @checkers.javari.quals.Mutable
        local 4 #152+45: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #167+20: @checkers.javari.quals.Mutable
        local 6 #178+9: @checkers.javari.quals.Mutable
        local 13 #243+23: @checkers.javari.quals.Mutable
        local 14 #256+10: @checkers.javari.quals.Mutable
        local 13 #312+39: @checkers.javari.quals.Mutable
        local 14 #325+26: @checkers.javari.quals.Mutable
        local 12 #381+84: @checkers.javari.quals.Mutable
        local 16 #420+28: @checkers.javari.quals.Mutable
        local 17 #432+16:
        local 16 #450+15: @checkers.javari.quals.Mutable
        local 2 #485+124: @checkers.javari.quals.Mutable
        local 2 #630+124: @checkers.javari.quals.Mutable
        local 16 #759+38: @checkers.javari.quals.Mutable
        local 17 #781+16: @checkers.javari.quals.Mutable
        local 18 #794+3: @checkers.javari.quals.ReadOnly
        local 15 #797+3: @checkers.javari.quals.ReadOnly

    method encode([B)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0:
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+289:
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #14+267:
        local 2 #22+259:
        local 3 #29+252:
        local 4 #34+247:
        local 5 #40+241:
            inner-type 0: @checkers.javari.quals.Mutable
        local 11 #43+238:
        local 13 #48+219:
        local 6 #57+204:
        local 7 #71+190:
        local 8 #74+187:
        local 9 #78+183:
        local 14 #81+49:
        local 10 #93+30:
        local 12 #278+3: @checkers.javari.quals.ReadOnly
        local 12 #286+3: @checkers.javari.quals.PolyRead

    method fixSpaces(Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+99: @checkers.javari.quals.ReadOnly
        local 1 #0+99: @checkers.javari.quals.Mutable
        local 2 #7+92:
        local 3 #17+80:
        local 5 #29+68: @checkers.javari.quals.Mutable
        local 6 #44+47:
        local 4 #55+30:

    method openConnection(Ljava/lang/String;)Ljava/net/URLConnection;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+208: @checkers.javari.quals.Mutable
        local 1 #0+208: @checkers.javari.quals.Mutable
        local 2 #4+204: @checkers.javari.quals.ReadOnly
        local 4 #18+11: @checkers.javari.quals.Mutable
        local 6 #26+3: @checkers.javari.quals.ReadOnly
        local 7 #31+174: @checkers.javari.quals.ReadOnly
        local 8 #41+90: @checkers.javari.quals.Mutable
        local 3 #47+84: @checkers.javari.quals.Mutable
        local 5 #67+64: @checkers.javari.quals.Mutable
        local 4 #120+11: @checkers.javari.quals.Mutable
        local 6 #128+3: @checkers.javari.quals.ReadOnly
        local 8 #133+35: @checkers.javari.quals.Mutable
        local 9 #152+16: @checkers.javari.quals.Mutable
        local 10 #165+3: @checkers.javari.quals.ReadOnly
        local 8 #170+35: @checkers.javari.quals.Mutable
        local 9 #189+16: @checkers.javari.quals.Mutable
        local 10 #202+3: @checkers.javari.quals.ReadOnly
        local 6 #205+3: @checkers.javari.quals.PolyRead

    method addCookies(Ljava/net/URLConnection;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+153: @checkers.javari.quals.Mutable
        local 1 #0+153: @checkers.javari.quals.Mutable
        local 2 #9+143: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #14+138: @checkers.javari.quals.Mutable
        local 4 #20+132: @checkers.javari.quals.Mutable
        local 5 #26+126: @checkers.javari.quals.Mutable
        local 6 #72+64: @checkers.javari.quals.Mutable

    method addCookies(Ljava/util/Vector;Ljava/lang/String;Ljava/util/Vector;)Ljava/util/Vector;: @checkers.javari.quals.PolyRead
        inner-type 0: @checkers.javari.quals.PolyRead
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+109: @checkers.javari.quals.ReadOnly
        local 1 #0+109: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #0+109: @checkers.javari.quals.Mutable
        local 3 #0+109: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
        local 6 #13+94: @checkers.javari.quals.Mutable
        local 7 #16+91:
        local 4 #30+68: @checkers.javari.quals.Mutable
        local 5 #37+61: @checkers.javari.quals.Mutable

    method getDomain(Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+110: @checkers.javari.quals.ReadOnly
        local 1 #0+110: @checkers.javari.quals.Mutable
        local 8 #3+107: @checkers.javari.quals.PolyRead
        local 2 #15+95: @checkers.javari.quals.Mutable
        local 3 #20+90:
        local 5 #31+76:
        local 6 #34+73:
        local 9 #37+44:
        local 7 #48+21:
        local 4 #92+15: @checkers.javari.quals.Mutable

    method generateCookieProperty(Ljava/util/Vector;)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+290: @checkers.javari.quals.ReadOnly
        local 1 #0+290: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #3+287: @checkers.javari.quals.PolyRead
        local 4 #12+278: @checkers.javari.quals.Mutable
        local 2 #14+276:
        local 6 #17+32:
        local 6 #81+191:
        local 3 #94+169: @checkers.javari.quals.Mutable

    method parseCookies(Ljava/net/URLConnection;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+466: @checkers.javari.quals.Mutable
        local 1 #0+466: @checkers.javari.quals.Mutable
        local 2 #8+458: @checkers.javari.quals.Mutable
        local 3 #20+445: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 4 #34+431: @checkers.javari.quals.Mutable
        local 10 #37+428: @checkers.javari.quals.Mutable
        local 5 #50+394: @checkers.javari.quals.Mutable
        local 6 #90+354:
        local 7 #100+29: @checkers.javari.quals.Mutable
        local 9 #103+26: @checkers.javari.quals.ReadOnly
        local 8 #126+3: @checkers.javari.quals.ReadOnly
        local 7 #139+305: @checkers.javari.quals.Mutable
        local 9 #150+294: @checkers.javari.quals.Mutable
        local 8 #157+287: @checkers.javari.quals.Mutable
        local 11 #202+61: @checkers.javari.quals.Mutable
        local 12 #209+54: @checkers.javari.quals.Mutable
        local 13 #242+10: @checkers.javari.quals.Mutable
        local 13 #254+6: @checkers.javari.quals.ReadOnly
        local 11 #390+35: @checkers.javari.quals.Mutable
        local 12 #408+17:

    method saveCookies(Ljava/util/Vector;Ljava/net/URLConnection;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+56: @checkers.javari.quals.Mutable
        local 1 #0+56: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #0+56: @checkers.javari.quals.Mutable
        local 5 #3+52:
        local 3 #16+30: @checkers.javari.quals.Mutable
        local 4 #22+24: @checkers.javari.quals.Mutable

package org.htmlparser.http:
class ConnectionMonitor:

    method preConnect(Ljava/net/HttpURLConnection;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly

    method postConnect(Ljava/net/HttpURLConnection;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly

package org.htmlparser.http:
class Cookie:

    field SPECIALS: @checkers.javari.quals.ReadOnly

    field mName: @checkers.javari.quals.ThisMutable

    field mValue: @checkers.javari.quals.ThisMutable

    field mComment: @checkers.javari.quals.ThisMutable

    field mDomain: @checkers.javari.quals.ThisMutable

    field mExpiry: @checkers.javari.quals.ThisMutable

    field mPath: @checkers.javari.quals.ThisMutable

    field mSecure:

    field mVersion:

    method <init>(Ljava/lang/String;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+150: @checkers.javari.quals.Mutable
        local 1 #0+150: @checkers.javari.quals.Mutable
        local 2 #0+150: @checkers.javari.quals.Mutable

    method setComment(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method getComment()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setDomain(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+9: @checkers.javari.quals.Mutable
        local 1 #0+9: @checkers.javari.quals.Mutable

    method getDomain()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setExpiryDate(Ljava/util/Date;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method getExpiryDate()Ljava/util/Date;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setPath(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method getPath()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setSecure(Z)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method getSecure()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getName()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setValue(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method getValue()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getVersion()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setVersion(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method isToken(Ljava/lang/String;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+63: @checkers.javari.quals.ReadOnly
        local 1 #0+63: @checkers.javari.quals.Mutable
        local 4 #3+60:
        local 2 #8+55:
        local 5 #11+49:
        local 3 #21+28:

    method clone()Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+18: @checkers.javari.quals.Mutable
        local 1 #6+12: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+230: @checkers.javari.quals.Mutable
        local 1 #10+220: @checkers.javari.quals.Mutable

package org.htmlparser.http:
class HttpHeader:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getRequestHeader(Ljava/net/HttpURLConnection;)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+169: @checkers.javari.quals.Mutable
        local 1 #11+158: @checkers.javari.quals.Mutable
        local 2 #48+121: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
            inner-type 1: @checkers.javari.quals.Mutable
        local 5 #61+103: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #75+79: @checkers.javari.quals.Mutable
        local 4 #87+67: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 6 #103+44:

    method getResponseHeader(Ljava/net/HttpURLConnection;)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+141: @checkers.javari.quals.Mutable
        local 1 #11+130: @checkers.javari.quals.Mutable
        local 2 #16+108:
        local 3 #26+95: @checkers.javari.quals.Mutable
        local 6 #62+59:
        local 4 #73+36: @checkers.javari.quals.Mutable
        local 5 #65+44: @checkers.javari.quals.Mutable
        local 5 #118+3: @checkers.javari.quals.ReadOnly
        local 6 #126+10: @checkers.javari.quals.Mutable

package org.htmlparser.lexer:
class Cursor:

    field mPosition:

    field mPage: @checkers.javari.quals.ReadOnly

    method <init>(Lorg/htmlparser/lexer/Page;I)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+15: @checkers.javari.quals.Mutable
        local 1 #0+15: @checkers.javari.quals.ReadOnly
        local 2 #0+15:

    method getPage()Lorg/htmlparser/lexer/Page;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getPosition()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setPosition(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method advance()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable

    method retreat()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+23: @checkers.javari.quals.Mutable

    method dup()Lorg/htmlparser/lexer/Cursor;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+25: @checkers.javari.quals.Mutable
        local 1 #9+16: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+105: @checkers.javari.quals.ReadOnly
        local 1 #10+95: @checkers.javari.quals.Mutable

    method compare(Ljava/lang/Object;)I:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+15: @checkers.javari.quals.ReadOnly
        local 1 #0+15: @checkers.javari.quals.ReadOnly
        local 2 #5+10: @checkers.javari.quals.ReadOnly

package org.htmlparser.lexer:
class InputStreamSource:

    field BUFFER_SIZE:

    field mStream: @checkers.javari.quals.ThisMutable

    field mEncoding: @checkers.javari.quals.ThisMutable

    field mReader: @checkers.javari.quals.ThisMutable

    field mBuffer:
        inner-type 0: @checkers.javari.quals.ThisMutable

    field mLevel:

    field mOffset:

    field mMark:

    method <clinit>()V:

    method <init>(Ljava/io/InputStream;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly
        local 1 #0+10: @checkers.javari.quals.Mutable

    method <init>(Ljava/io/InputStream;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly
        local 1 #0+10: @checkers.javari.quals.Mutable
        local 2 #0+10: @checkers.javari.quals.Mutable

    method <init>(Ljava/io/InputStream;Ljava/lang/String;I)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+112: @checkers.javari.quals.Mutable
        local 1 #0+112: @checkers.javari.quals.Mutable
        local 2 #0+112: @checkers.javari.quals.Mutable
        local 3 #0+112:

    method writeObject(Ljava/io/ObjectOutputStream;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+37: @checkers.javari.quals.Mutable
        local 1 #0+37: @checkers.javari.quals.Mutable
        local 2 #12+20:
        local 3 #18+14:
            inner-type 0: @checkers.javari.quals.Mutable

    method readObject(Ljava/io/ObjectInputStream;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+26: @checkers.javari.quals.Mutable
        local 1 #0+26: @checkers.javari.quals.Mutable

    method getStream()Ljava/io/InputStream;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getEncoding()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setEncoding(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+302: @checkers.javari.quals.Mutable
        local 1 #0+302: @checkers.javari.quals.Mutable
        local 2 #5+297: @checkers.javari.quals.Mutable
        local 3 #18+283: @checkers.javari.quals.Mutable
        local 4 #24+240:
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 5 #30+234:
        local 6 #89+155:
            inner-type 0: @checkers.javari.quals.Mutable
        local 7 #113+131:
        local 7 #249+15: @checkers.javari.quals.Mutable
        local 7 #266+35: @checkers.javari.quals.Mutable

    method fill(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+147: @checkers.javari.quals.Mutable
        local 1 #0+147:
        local 3 #18+128:
        local 4 #39+26:
        local 2 #62+3:
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #70+76:
            inner-type 0: @checkers.javari.quals.Mutable
        local 4 #87+59:

    method close()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly

    method read()I:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+90: @checkers.javari.quals.Mutable
        local 1 #48+3:
        local 1 #68+3:
        local 1 #88+2:

    method read([CII)I:
        parameter #0:
            inner-type 0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+175: @checkers.javari.quals.Mutable
        local 1 #0+175:
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #0+175:
        local 3 #0+175:
        local 4 #128+3:
        local 4 #146+29:

    method read([C)I:
        parameter #0:
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+9: @checkers.javari.quals.Mutable
        local 1 #0+9:
            inner-type 0: @checkers.javari.quals.Mutable

    method reset()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+42: @checkers.javari.quals.Mutable

    method markSupported()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method mark(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+26: @checkers.javari.quals.Mutable
        local 1 #0+26:

    method ready()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+32: @checkers.javari.quals.ReadOnly

    method skip(J)J:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+112: @checkers.javari.quals.Mutable
        local 1 #0+112:
        local 3 #80+3:
        local 3 #98+14:

    method unread()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+48: @checkers.javari.quals.Mutable

    method getCharacter(I)C:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+45: @checkers.javari.quals.ReadOnly
        local 1 #0+45:
        local 2 #43+2:

    method getCharacters([CIII)V:
        parameter #0:
            inner-type 0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        parameter #3:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+32: @checkers.javari.quals.Mutable
        local 1 #0+32:
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #0+32:
        local 3 #0+32:
        local 4 #0+32:

    method getString(II)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+54: @checkers.javari.quals.Mutable
        local 1 #0+54:
        local 2 #0+54:
        local 3 #52+2: @checkers.javari.quals.ReadOnly

    method getCharacters(Ljava/lang/StringBuffer;II)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+29: @checkers.javari.quals.Mutable
        local 1 #0+29: @checkers.javari.quals.Mutable
        local 2 #0+29:
        local 3 #0+29:

    method destroy()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+45: @checkers.javari.quals.Mutable

    method offset()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+19: @checkers.javari.quals.ReadOnly
        local 1 #9+3:
        local 1 #17+2:

    method available()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+24: @checkers.javari.quals.ReadOnly
        local 1 #9+3:
        local 1 #22+2:

package org.htmlparser.lexer:
class Lexer:

    field mPage: @checkers.javari.quals.ThisMutable

    field mCursor: @checkers.javari.quals.ThisMutable

    field mFactory: @checkers.javari.quals.ThisMutable

    field mDebugLineTrigger:

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+14: @checkers.javari.quals.ReadOnly

    method <init>(Lorg/htmlparser/lexer/Page;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+28: @checkers.javari.quals.Mutable
        local 1 #0+28: @checkers.javari.quals.Mutable

    method <init>(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+13: @checkers.javari.quals.ReadOnly
        local 1 #0+13: @checkers.javari.quals.Mutable

    method <init>(Ljava/net/URLConnection;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+13: @checkers.javari.quals.ReadOnly
        local 1 #0+13: @checkers.javari.quals.Mutable

    method reset()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+24: @checkers.javari.quals.Mutable

    method getPage()Lorg/htmlparser/lexer/Page;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setPage(Lorg/htmlparser/lexer/Page;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+20: @checkers.javari.quals.Mutable
        local 1 #0+20: @checkers.javari.quals.Mutable

    method getCursor()Lorg/htmlparser/lexer/Cursor;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setCursor(Lorg/htmlparser/lexer/Cursor;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+20: @checkers.javari.quals.Mutable
        local 1 #0+20: @checkers.javari.quals.Mutable

    method getNodeFactory()Lorg/htmlparser/NodeFactory;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setNodeFactory(Lorg/htmlparser/NodeFactory;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+20: @checkers.javari.quals.Mutable
        local 1 #0+20: @checkers.javari.quals.Mutable

    method getPosition()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

    method setPosition(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+9: @checkers.javari.quals.Mutable
        local 1 #0+9:

    method getCurrentLineNumber()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+12: @checkers.javari.quals.ReadOnly

    method getCurrentLine()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+12: @checkers.javari.quals.Mutable

    method nextNode()Lorg/htmlparser/Node;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable

    method nextNode(Z)Lorg/htmlparser/Node;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+322: @checkers.javari.quals.Mutable
        local 1 #0+322:
        local 5 #13+26: @checkers.javari.quals.ReadOnly
        local 6 #24+15:
        local 2 #47+275:
        local 3 #59+263:
        local 4 #91+3: @checkers.javari.quals.ReadOnly
        local 4 #126+3: @checkers.javari.quals.ReadOnly
        local 4 #149+3: @checkers.javari.quals.ReadOnly
        local 4 #185+3: @checkers.javari.quals.ReadOnly
        local 4 #226+3: @checkers.javari.quals.ReadOnly
        local 4 #249+3: @checkers.javari.quals.ReadOnly
        local 4 #273+3: @checkers.javari.quals.ReadOnly
        local 4 #290+3: @checkers.javari.quals.ReadOnly
        local 4 #301+3: @checkers.javari.quals.ReadOnly
        local 4 #319+3: @checkers.javari.quals.PolyRead

    method scanJIS(Lorg/htmlparser/lexer/Cursor;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+133: @checkers.javari.quals.Mutable
        local 1 #0+133: @checkers.javari.quals.Mutable
        local 2 #2+131:
        local 4 #5+128:
        local 3 #17+111:

    method parseString(IZ)Lorg/htmlparser/Node;: @checkers.javari.quals.Mutable
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+524: @checkers.javari.quals.Mutable
        local 1 #0+524:
        local 2 #0+524:
        local 3 #2+522:
        local 5 #5+519:
        local 4 #21+486:

    method makeString(II)Lorg/htmlparser/Node;: @checkers.javari.quals.Mutable
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+34: @checkers.javari.quals.Mutable
        local 1 #0+34:
        local 2 #0+34:
        local 3 #4+30:
        local 4 #25+3: @checkers.javari.quals.ReadOnly
        local 4 #31+3: @checkers.javari.quals.PolyRead

    method whitespace(Ljava/util/Vector;[I)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1:
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+34: @checkers.javari.quals.Mutable
        local 1 #0+34: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #0+34:
            inner-type 0: @checkers.javari.quals.ReadOnly

    method standalone(Ljava/util/Vector;[I)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1:
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+25: @checkers.javari.quals.Mutable
        local 1 #0+25: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #0+25:
            inner-type 0: @checkers.javari.quals.ReadOnly

    method empty(Ljava/util/Vector;[I)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1:
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+29: @checkers.javari.quals.Mutable
        local 1 #0+29: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #0+29:
            inner-type 0: @checkers.javari.quals.ReadOnly

    method naked(Ljava/util/Vector;[I)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1:
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+29: @checkers.javari.quals.Mutable
        local 1 #0+29: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #0+29:
            inner-type 0: @checkers.javari.quals.ReadOnly

    method single_quote(Ljava/util/Vector;[I)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1:
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+32: @checkers.javari.quals.Mutable
        local 1 #0+32: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #0+32:
            inner-type 0: @checkers.javari.quals.ReadOnly

    method double_quote(Ljava/util/Vector;[I)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1:
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+33: @checkers.javari.quals.Mutable
        local 1 #0+33: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #0+33:
            inner-type 0: @checkers.javari.quals.ReadOnly

    method parseTag(I)Lorg/htmlparser/Node;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+654: @checkers.javari.quals.Mutable
        local 1 #0+654:
        local 2 #2+652:
        local 6 #11+643: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 4 #14+640:
        local 5 #20+634:
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #60+575:

    method makeTag(IILjava/util/Vector;)Lorg/htmlparser/Node;: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1:
        parameter #2: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+50: @checkers.javari.quals.Mutable
        local 1 #0+50:
        local 2 #0+50:
        local 3 #0+50: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 4 #5+45:
        local 5 #41+3: @checkers.javari.quals.ReadOnly
        local 5 #47+3: @checkers.javari.quals.ReadOnly

    method parseRemark(IZ)Lorg/htmlparser/Node;: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+289: @checkers.javari.quals.Mutable
        local 1 #0+289:
        local 2 #0+289:
        local 3 #2+287:
        local 5 #5+284:
        local 4 #21+251:

    method makeRemark(II)Lorg/htmlparser/Node;: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+46: @checkers.javari.quals.Mutable
        local 1 #0+46:
        local 2 #0+46:
        local 3 #4+42:
        local 4 #37+3: @checkers.javari.quals.ReadOnly
        local 4 #43+3: @checkers.javari.quals.ReadOnly

    method parseJsp(I)Lorg/htmlparser/Node;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+588: @checkers.javari.quals.Mutable
        local 1 #0+588:
        local 2 #2+586:
        local 4 #5+583:
        local 6 #8+580:
        local 5 #17+571: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #32+447:

    method parseCDATA()Lorg/htmlparser/Node;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable

    method parseCDATA(Z)Lorg/htmlparser/Node;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+761: @checkers.javari.quals.Mutable
        local 1 #0+761:
        local 2 #8+753:
        local 3 #10+751:
        local 4 #13+748:
        local 5 #16+745:
        local 8 #19+742:
        local 6 #35+704:
        local 7 #753+8:

    method createStringNode(Lorg/htmlparser/lexer/Page;II)Lorg/htmlparser/Text;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.Mutable
        local 2 #0+11:
        local 3 #0+11:

    method createRemarkNode(Lorg/htmlparser/lexer/Page;II)Lorg/htmlparser/Remark;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.Mutable
        local 2 #0+11:
        local 3 #0+11:

    method createTagNode(Lorg/htmlparser/lexer/Page;IILjava/util/Vector;)Lorg/htmlparser/Tag;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        parameter #3: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+13: @checkers.javari.quals.ReadOnly
        local 1 #0+13: @checkers.javari.quals.Mutable
        local 2 #0+13:
        local 3 #0+13:
        local 4 #0+13: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable

    method main([Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+96: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 3 #21+43: @checkers.javari.quals.Mutable
        local 1 #36+28: @checkers.javari.quals.Mutable
        local 2 #39+12: @checkers.javari.quals.Mutable
        local 2 #58+6: @checkers.javari.quals.ReadOnly
        local 3 #65+30: @checkers.javari.quals.Mutable

package org.htmlparser.lexer:
class Page:

    field DEFAULT_CHARSET: @checkers.javari.quals.ReadOnly

    field DEFAULT_CONTENT_TYPE: @checkers.javari.quals.ReadOnly

    field EOF:

    field mUrl: @checkers.javari.quals.ThisMutable

    field mBaseUrl: @checkers.javari.quals.ThisMutable

    field mSource: @checkers.javari.quals.ThisMutable

    field mIndex: @checkers.javari.quals.ThisMutable

    field mConnection: @checkers.javari.quals.ThisMutable

    field mConnectionManager: @checkers.javari.quals.Mutable

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly

    method <init>(Ljava/net/URLConnection;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+29: @checkers.javari.quals.Mutable
        local 1 #0+29: @checkers.javari.quals.Mutable

    method <init>(Ljava/io/InputStream;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+66: @checkers.javari.quals.Mutable
        local 1 #0+66: @checkers.javari.quals.Mutable
        local 2 #0+66: @checkers.javari.quals.Mutable

    method <init>(Ljava/lang/String;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+66: @checkers.javari.quals.Mutable
        local 1 #0+66: @checkers.javari.quals.Mutable
        local 2 #0+66: @checkers.javari.quals.Mutable

    method <init>(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly
        local 1 #0+7: @checkers.javari.quals.Mutable

    method <init>(Lorg/htmlparser/lexer/Source;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+51: @checkers.javari.quals.Mutable
        local 1 #0+51: @checkers.javari.quals.Mutable

    method getConnectionManager()Lorg/htmlparser/http/ConnectionManager;: @checkers.javari.quals.Mutable

    method setConnectionManager(Lorg/htmlparser/http/ConnectionManager;)V:
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+5: @checkers.javari.quals.Mutable

    method getCharset(Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+181: @checkers.javari.quals.Mutable
        local 1 #0+181: @checkers.javari.quals.Mutable
        local 2 #3+178: @checkers.javari.quals.ReadOnly
        local 4 #14+3: @checkers.javari.quals.ReadOnly
        local 4 #26+155: @checkers.javari.quals.Mutable
        local 3 #37+141:

    method findCharset(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+127: @checkers.javari.quals.Mutable
        local 1 #0+127: @checkers.javari.quals.Mutable
        local 3 #6+67: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 4 #23+50: @checkers.javari.quals.Mutable
        local 5 #39+34: @checkers.javari.quals.Mutable
        local 2 #70+3: @checkers.javari.quals.ReadOnly
        local 3 #74+2: @checkers.javari.quals.ReadOnly
        local 2 #76+3: @checkers.javari.quals.ReadOnly
        local 3 #80+2: @checkers.javari.quals.ReadOnly
        local 2 #82+3: @checkers.javari.quals.ReadOnly
        local 3 #86+2: @checkers.javari.quals.ReadOnly
        local 2 #88+3: @checkers.javari.quals.ReadOnly
        local 3 #92+33: @checkers.javari.quals.ReadOnly
        local 2 #94+33: @checkers.javari.quals.PolyRead

    method writeObject(Ljava/io/ObjectOutputStream;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+116: @checkers.javari.quals.Mutable
        local 1 #0+116: @checkers.javari.quals.Mutable
        local 2 #28+58: @checkers.javari.quals.Mutable
        local 3 #52+34: @checkers.javari.quals.Mutable
        local 4 #63+23: @checkers.javari.quals.Mutable
        local 2 #96+20: @checkers.javari.quals.Mutable

    method readObject(Ljava/io/ObjectInputStream;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+154: @checkers.javari.quals.Mutable
        local 1 #0+154: @checkers.javari.quals.Mutable
        local 2 #5+149:
        local 3 #14+120:
        local 4 #23+111: @checkers.javari.quals.Mutable
        local 5 #47+27: @checkers.javari.quals.Mutable
        local 7 #61+13: @checkers.javari.quals.Mutable
        local 6 #85+49: @checkers.javari.quals.Mutable
        local 7 #88+37:
        local 8 #103+13: @checkers.javari.quals.Mutable
        local 4 #143+11: @checkers.javari.quals.Mutable

    method reset()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+20: @checkers.javari.quals.Mutable

    method close()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+15: @checkers.javari.quals.Mutable

    method finalize()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+5: @checkers.javari.quals.Mutable

    method getConnection()Ljava/net/URLConnection;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setConnection(Ljava/net/URLConnection;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+356: @checkers.javari.quals.Mutable
        local 1 #0+356: @checkers.javari.quals.Mutable
        local 6 #17+42: @checkers.javari.quals.Mutable
        local 6 #61+56: @checkers.javari.quals.Mutable
        local 3 #122+234: @checkers.javari.quals.Mutable
        local 4 #129+227: @checkers.javari.quals.Mutable
        local 5 #135+139: @checkers.javari.quals.Mutable
        local 2 #174+3: @checkers.javari.quals.ReadOnly
        local 2 #216+3: @checkers.javari.quals.ReadOnly
        local 2 #234+40: @checkers.javari.quals.Mutable
        local 6 #253+18: @checkers.javari.quals.ReadOnly
        local 6 #276+56: @checkers.javari.quals.Mutable

    method getUrl()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setUrl(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method getBaseUrl()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setBaseUrl(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method getSource()Lorg/htmlparser/lexer/Source;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getContentType()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+25: @checkers.javari.quals.Mutable
        local 3 #3+22: @checkers.javari.quals.PolyRead
        local 1 #8+17: @checkers.javari.quals.Mutable
        local 2 #17+6: @checkers.javari.quals.PolyRead

    method getCharacter(Lorg/htmlparser/lexer/Cursor;)C:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+376: @checkers.javari.quals.Mutable
        local 1 #0+376: @checkers.javari.quals.Mutable
        local 2 #5+371:
        local 3 #13+363:
        local 4 #35+3:
        local 4 #42+7:
        local 5 #51+30: @checkers.javari.quals.Mutable
        local 4 #96+3:
        local 5 #101+27: @checkers.javari.quals.Mutable
        local 4 #176+200:
        local 5 #240+30: @checkers.javari.quals.Mutable
        local 5 #272+30: @checkers.javari.quals.Mutable
        local 5 #327+30: @checkers.javari.quals.Mutable

    method getEncoding()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

    method setEncoding(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+9: @checkers.javari.quals.Mutable
        local 1 #0+9: @checkers.javari.quals.Mutable

    method constructUrl(Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+179: @checkers.javari.quals.ReadOnly
        local 1 #0+179: @checkers.javari.quals.Mutable
        local 2 #0+179: @checkers.javari.quals.Mutable
        local 7 #18+161: @checkers.javari.quals.Mutable
        local 3 #24+155: @checkers.javari.quals.Mutable
        local 4 #27+152:
        local 5 #36+143:
        local 6 #108+37:
        local 6 #156+23:

    method getAbsoluteURL(Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+68: @checkers.javari.quals.Mutable
        local 1 #0+68: @checkers.javari.quals.Mutable
        local 4 #17+3: @checkers.javari.quals.ReadOnly
        local 2 #25+35: @checkers.javari.quals.Mutable
        local 4 #41+3: @checkers.javari.quals.ReadOnly
        local 3 #51+6: @checkers.javari.quals.Mutable
        local 4 #57+3: @checkers.javari.quals.ReadOnly
        local 5 #62+3: @checkers.javari.quals.ReadOnly
        local 4 #65+3: @checkers.javari.quals.PolyRead

    method row(Lorg/htmlparser/lexer/Cursor;)I:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly
        local 1 #0+9: @checkers.javari.quals.ReadOnly

    method row(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly
        local 1 #0+9:

    method column(Lorg/htmlparser/lexer/Cursor;)I:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly
        local 1 #0+9: @checkers.javari.quals.ReadOnly

    method column(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly
        local 1 #0+9:

    method getText(II)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+70: @checkers.javari.quals.Mutable
        local 1 #0+70:
        local 2 #0+70:
        local 3 #12+3: @checkers.javari.quals.ReadOnly
        local 4 #17+51: @checkers.javari.quals.Mutable
        local 3 #68+2: @checkers.javari.quals.PolyRead

    method getText(Ljava/lang/StringBuffer;II)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+159: @checkers.javari.quals.Mutable
        local 1 #0+159: @checkers.javari.quals.Mutable
        local 2 #0+159:
        local 3 #0+159:
        local 4 #81+5:
        local 4 #91+68:
        local 5 #107+51: @checkers.javari.quals.Mutable

    method getText()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+13: @checkers.javari.quals.Mutable

    method getText(Ljava/lang/StringBuffer;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+14: @checkers.javari.quals.Mutable
        local 1 #0+14: @checkers.javari.quals.Mutable

    method getText([CIII)V:
        parameter #0:
            inner-type 0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        parameter #3:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+126: @checkers.javari.quals.Mutable
        local 1 #0+126:
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #0+126:
        local 3 #0+126:
        local 4 #0+126:
        local 5 #44+6:
        local 5 #56+70:
        local 6 #73+52: @checkers.javari.quals.Mutable

    method getLine(Lorg/htmlparser/lexer/Cursor;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+92: @checkers.javari.quals.Mutable
        local 1 #0+92: @checkers.javari.quals.ReadOnly
        local 2 #6+86:
        local 3 #14+78:
        local 4 #29+33:
        local 5 #47+3:
        local 5 #59+3:
        local 4 #74+18:
        local 5 #83+9:

    method getLine(I)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+14: @checkers.javari.quals.Mutable
        local 1 #0+14:

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+76: @checkers.javari.quals.Mutable
        local 1 #20+49: @checkers.javari.quals.Mutable
        local 2 #31+38:
        local 3 #66+3: @checkers.javari.quals.ReadOnly
        local 3 #74+2: @checkers.javari.quals.ReadOnly

package org.htmlparser.lexer:
class PageAttribute:

    field mPage: @checkers.javari.quals.ThisMutable

    field mNameStart:

    field mNameEnd:

    field mValueStart:

    field mValueEnd:

    method <init>(Lorg/htmlparser/lexer/Page;IIIIC)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        parameter #3:
        parameter #4:
        parameter #5:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+53: @checkers.javari.quals.Mutable
        local 1 #0+53: @checkers.javari.quals.Mutable
        local 2 #0+53:
        local 3 #0+53:
        local 4 #0+53:
        local 5 #0+53:
        local 6 #0+53:

    method init()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+26: @checkers.javari.quals.Mutable

    method <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.Mutable
        parameter #3:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+14: @checkers.javari.quals.Mutable
        local 1 #0+14: @checkers.javari.quals.Mutable
        local 2 #0+14: @checkers.javari.quals.Mutable
        local 3 #0+14: @checkers.javari.quals.Mutable
        local 4 #0+14:

    method <init>(Ljava/lang/String;Ljava/lang/String;C)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+12: @checkers.javari.quals.Mutable
        local 1 #0+12: @checkers.javari.quals.Mutable
        local 2 #0+12: @checkers.javari.quals.Mutable
        local 3 #0+12:

    method <init>(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method <init>(Ljava/lang/String;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11: @checkers.javari.quals.Mutable
        local 2 #0+11: @checkers.javari.quals.Mutable

    method <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+12: @checkers.javari.quals.Mutable
        local 1 #0+12: @checkers.javari.quals.Mutable
        local 2 #0+12: @checkers.javari.quals.Mutable
        local 3 #0+12: @checkers.javari.quals.Mutable

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.Mutable

    method getName()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+46: @checkers.javari.quals.Mutable
        local 1 #5+41: @checkers.javari.quals.Mutable

    method getName(Ljava/lang/StringBuffer;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+49: @checkers.javari.quals.Mutable
        local 1 #0+49: @checkers.javari.quals.Mutable
        local 2 #5+44: @checkers.javari.quals.Mutable

    method getAssignment()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+83: @checkers.javari.quals.Mutable
        local 1 #5+78: @checkers.javari.quals.Mutable

    method getAssignment(Ljava/lang/StringBuffer;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+89: @checkers.javari.quals.Mutable
        local 1 #0+89: @checkers.javari.quals.Mutable
        local 4 #6+83: @checkers.javari.quals.Mutable
        local 2 #55+26:
        local 3 #61+20:

    method getValue()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+46: @checkers.javari.quals.Mutable
        local 1 #5+41: @checkers.javari.quals.Mutable

    method getValue(Ljava/lang/StringBuffer;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+49: @checkers.javari.quals.Mutable
        local 1 #0+49: @checkers.javari.quals.Mutable
        local 2 #5+44: @checkers.javari.quals.Mutable

    method getRawValue()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+57: @checkers.javari.quals.Mutable
        local 3 #5+52: @checkers.javari.quals.Mutable
        local 1 #15+40:
        local 2 #32+23: @checkers.javari.quals.Mutable

    method getRawValue(Ljava/lang/StringBuffer;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+104: @checkers.javari.quals.Mutable
        local 1 #0+104: @checkers.javari.quals.Mutable
        local 2 #20+49:
        local 2 #75+28:

    method getPage()Lorg/htmlparser/lexer/Page;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setPage(Lorg/htmlparser/lexer/Page;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method getNameStartPosition()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setNameStartPosition(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11:

    method getNameEndPosition()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setNameEndPosition(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+16: @checkers.javari.quals.Mutable
        local 1 #0+16:

    method getValueStartPosition()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setValueStartPosition(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+16: @checkers.javari.quals.Mutable
        local 1 #0+16:

    method getValueEndPosition()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setValueEndPosition(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11:

    method isWhitespace()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+32: @checkers.javari.quals.Mutable

    method isStandAlone()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+53: @checkers.javari.quals.Mutable

    method isEmpty()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+46: @checkers.javari.quals.Mutable

    method isValued()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+43: @checkers.javari.quals.Mutable

    method getLength()I:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+188: @checkers.javari.quals.Mutable
        local 5 #3+185:
        local 1 #8+180: @checkers.javari.quals.Mutable
        local 2 #64+124: @checkers.javari.quals.Mutable
        local 3 #120+68: @checkers.javari.quals.Mutable
        local 4 #177+11:

package org.htmlparser.lexer:
class PageIndex:

    field mStartIncrement:

    field mIncrement:

    field mCount:

    field mIndices:
        inner-type 0: @checkers.javari.quals.ThisMutable

    field mPage: @checkers.javari.quals.ReadOnly

    method <init>(Lorg/htmlparser/lexer/Page;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+32: @checkers.javari.quals.Mutable
        local 1 #0+32: @checkers.javari.quals.ReadOnly

    method <init>(Lorg/htmlparser/lexer/Page;I)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+18: @checkers.javari.quals.Mutable
        local 1 #0+18: @checkers.javari.quals.ReadOnly
        local 2 #0+18:

    method <init>(Lorg/htmlparser/lexer/Page;[I)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1:
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+21: @checkers.javari.quals.Mutable
        local 1 #0+21: @checkers.javari.quals.ReadOnly
        local 2 #0+21:
            inner-type 0: @checkers.javari.quals.Mutable

    method getPage()Lorg/htmlparser/lexer/Page;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method size()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method capacity()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method add(Lorg/htmlparser/lexer/Cursor;)I:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+111: @checkers.javari.quals.Mutable
        local 1 #0+111: @checkers.javari.quals.ReadOnly
        local 2 #5+106:
        local 4 #15+10:
        local 3 #37+71:
        local 4 #50+3:
        local 4 #64+10:
        local 4 #81+30:

    method add(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+17: @checkers.javari.quals.Mutable
        local 1 #0+17:

    method remove(Lorg/htmlparser/lexer/Cursor;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+33: @checkers.javari.quals.Mutable
        local 1 #0+33: @checkers.javari.quals.ReadOnly
        local 2 #6+27:

    method remove(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+17: @checkers.javari.quals.Mutable
        local 1 #0+17:

    method elementAt(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+44: @checkers.javari.quals.ReadOnly
        local 1 #0+44:

    method row(Lorg/htmlparser/lexer/Cursor;)I:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+32: @checkers.javari.quals.ReadOnly
        local 1 #0+32: @checkers.javari.quals.ReadOnly
        local 2 #6+26:

    method row(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+17: @checkers.javari.quals.ReadOnly
        local 1 #0+17:

    method column(Lorg/htmlparser/lexer/Cursor;)I:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+30: @checkers.javari.quals.ReadOnly
        local 1 #0+30: @checkers.javari.quals.ReadOnly
        local 2 #6+24:
        local 3 #18+3:
        local 3 #23+7:

    method column(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+17: @checkers.javari.quals.ReadOnly
        local 1 #0+17:

    method get()[I:
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+23: @checkers.javari.quals.Mutable
        local 1 #7+16:
            inner-type 0: @checkers.javari.quals.Mutable

    method bsearch(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+17: @checkers.javari.quals.ReadOnly
        local 1 #0+17:

    method bsearch(III)I:
        parameter #0:
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+19: @checkers.javari.quals.ReadOnly
        local 1 #0+19:
        local 2 #0+19:
        local 3 #0+19:

    method insertElementAt(II)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+158: @checkers.javari.quals.Mutable
        local 1 #0+158:
        local 2 #0+158:
        local 3 #37+72:
            inner-type 0: @checkers.javari.quals.Mutable

    method removeElementAt(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+46: @checkers.javari.quals.Mutable
        local 1 #0+46:

    method first()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method last()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly

    method fetch(ILorg/htmlparser/util/sort/Ordered;)Lorg/htmlparser/util/sort/Ordered;: @checkers.javari.quals.Mutable
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+50: @checkers.javari.quals.ReadOnly
        local 1 #0+50:
        local 2 #0+50: @checkers.javari.quals.Mutable
        local 3 #9+21: @checkers.javari.quals.Mutable
        local 3 #48+2: @checkers.javari.quals.PolyRead

    method swap(II)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+27: @checkers.javari.quals.Mutable
        local 1 #0+27:
        local 2 #0+27:
        local 3 #7+20:

package org.htmlparser.lexer:
class Source:

    field EOF:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getEncoding()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead

    method setEncoding(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method close()V:
        receiver: @checkers.javari.quals.ReadOnly

    method read()I:
        receiver: @checkers.javari.quals.Mutable

    method read([CII)I:
        parameter #0:
            inner-type 0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.Mutable

    method read([C)I:
        parameter #0:
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method ready()Z:
        receiver: @checkers.javari.quals.Mutable

    method reset()V:
        receiver: @checkers.javari.quals.Mutable

    method markSupported()Z:
        receiver: @checkers.javari.quals.ReadOnly

    method mark(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable

    method skip(J)J:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable

    method unread()V:
        receiver: @checkers.javari.quals.Mutable

    method getCharacter(I)C:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable

    method getCharacters([CIII)V:
        parameter #0:
            inner-type 0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        parameter #3:
        receiver: @checkers.javari.quals.Mutable

    method getString(II)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable

    method getCharacters(Ljava/lang/StringBuffer;II)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.Mutable

    method destroy()V:
        receiver: @checkers.javari.quals.Mutable

    method offset()I:
        receiver: @checkers.javari.quals.ReadOnly

    method available()I:
        receiver: @checkers.javari.quals.Mutable

package org.htmlparser.lexer:
class Stream:

    field fills:

    field reallocations:

    field synchronous:

    field BUFFER_SIZE:

    field EOF:

    field mIn: @checkers.javari.quals.ThisMutable

    field mBuffer:
        inner-type 0: @checkers.javari.quals.ThisMutable

    field mLevel:

    field mOffset:

    field mContentLength:

    field mMark:

    method <init>(Ljava/io/InputStream;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly
        local 1 #0+7: @checkers.javari.quals.Mutable

    method <init>(Ljava/io/InputStream;I)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+58: @checkers.javari.quals.Mutable
        local 1 #0+58: @checkers.javari.quals.Mutable
        local 2 #0+58:

    method fill(Z)Z:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+294: @checkers.javari.quals.Mutable
        local 1 #0+294:
        local 5 #3+291:
        local 3 #71+3:
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 3 #116+3:
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 3 #124+11:
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #132+3:
        local 2 #145+146:
        local 3 #164+127:
            inner-type 0: @checkers.javari.quals.Mutable
        local 4 #179+112:

    method run()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+21: @checkers.javari.quals.Mutable
        local 1 #6+3:
        local 2 #10+6: @checkers.javari.quals.Mutable
        local 1 #16+5:

    method read()I:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+58: @checkers.javari.quals.Mutable
        local 1 #51+3:
        local 1 #56+2:

    method available()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly

    method close()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+45: @checkers.javari.quals.Mutable

    method reset()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+25: @checkers.javari.quals.Mutable

    method markSupported()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method mark(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+9: @checkers.javari.quals.Mutable
        local 1 #0+9:

package org.htmlparser.lexer:
class StringSource:

    field mString: @checkers.javari.quals.ThisMutable

    field mOffset:

    field mEncoding: @checkers.javari.quals.ThisMutable

    field mMark:

    method <init>(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly
        local 1 #0+8: @checkers.javari.quals.Mutable

    method <init>(Ljava/lang/String;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+34: @checkers.javari.quals.Mutable
        local 1 #0+34: @checkers.javari.quals.Mutable
        local 2 #0+34: @checkers.javari.quals.Mutable

    method getEncoding()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setEncoding(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method close()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly

    method read()I:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+60: @checkers.javari.quals.Mutable
        local 1 #33+3:
        local 1 #48+12:

    method read([CII)I:
        parameter #0:
            inner-type 0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+95: @checkers.javari.quals.Mutable
        local 1 #0+95:
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #0+95:
        local 3 #0+95:
        local 4 #26+69:
        local 5 #38+3:
        local 5 #92+3:

    method read([C)I:
        parameter #0:
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+9: @checkers.javari.quals.Mutable
        local 1 #0+9:
            inner-type 0: @checkers.javari.quals.Mutable

    method ready()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+35: @checkers.javari.quals.Mutable

    method reset()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+42: @checkers.javari.quals.Mutable

    method markSupported()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method mark(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+26: @checkers.javari.quals.Mutable
        local 1 #0+26:

    method skip(J)J:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+92: @checkers.javari.quals.Mutable
        local 1 #0+92:
        local 3 #41+51:
        local 4 #89+3:

    method unread()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+45: @checkers.javari.quals.Mutable

    method getCharacter(I)C:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+46: @checkers.javari.quals.Mutable
        local 1 #0+46:
        local 2 #44+2:

    method getCharacters([CIII)V:
        parameter #0:
            inner-type 0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        parameter #3:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+49: @checkers.javari.quals.Mutable
        local 1 #0+49:
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #0+49:
        local 3 #0+49:
        local 4 #0+49:

    method getString(II)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+51: @checkers.javari.quals.Mutable
        local 1 #0+51:
        local 2 #0+51:
        local 3 #49+2: @checkers.javari.quals.ReadOnly

    method getCharacters(Ljava/lang/StringBuffer;II)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+54: @checkers.javari.quals.Mutable
        local 1 #0+54: @checkers.javari.quals.Mutable
        local 2 #0+54:
        local 3 #0+54:

    method destroy()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable

    method offset()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+19: @checkers.javari.quals.ReadOnly
        local 1 #9+3:
        local 1 #17+2:

    method available()I:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+27: @checkers.javari.quals.Mutable
        local 1 #9+3:
        local 1 #25+2:

package org.htmlparser.nodes:
class AbstractNode:

    field mPage: @checkers.javari.quals.ThisMutable

    field nodeBegin:

    field nodeEnd:

    field parent: @checkers.javari.quals.ThisMutable

    field children: @checkers.javari.quals.ThisMutable

    method <init>(Lorg/htmlparser/lexer/Page;II)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+30: @checkers.javari.quals.Mutable
        local 1 #0+30: @checkers.javari.quals.Mutable
        local 2 #0+30:
        local 3 #0+30:

    method clone()Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+5: @checkers.javari.quals.Mutable

    method toPlainTextString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable

    method toHtml()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable

    method collectInto(Lorg/htmlparser/util/NodeList;Lorg/htmlparser/NodeFilter;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+16: @checkers.javari.quals.Mutable
        local 1 #0+16: @checkers.javari.quals.Mutable
        local 2 #0+16: @checkers.javari.quals.Mutable

    method getPage()Lorg/htmlparser/lexer/Page;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setPage(Lorg/htmlparser/lexer/Page;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method getStartPosition()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setStartPosition(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method getEndPosition()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setEndPosition(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method accept(Lorg/htmlparser/visitors/NodeVisitor;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable

    method getParent()Lorg/htmlparser/Node;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setParent(Lorg/htmlparser/Node;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method getChildren()Lorg/htmlparser/util/NodeList;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setChildren(Lorg/htmlparser/util/NodeList;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method getFirstChild()Lorg/htmlparser/Node;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+30: @checkers.javari.quals.ReadOnly

    method getLastChild()Lorg/htmlparser/Node;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+34: @checkers.javari.quals.ReadOnly
        local 1 #17+17:

    method getPreviousSibling()Lorg/htmlparser/Node;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+88: @checkers.javari.quals.ReadOnly
        local 1 #5+83: @checkers.javari.quals.ReadOnly
        local 2 #18+70: @checkers.javari.quals.ReadOnly
        local 3 #29+59:
        local 4 #39+49:
        local 5 #42+29:

    method getNextSibling()Lorg/htmlparser/Node;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+98: @checkers.javari.quals.ReadOnly
        local 1 #5+93: @checkers.javari.quals.ReadOnly
        local 2 #18+80: @checkers.javari.quals.ReadOnly
        local 3 #29+69:
        local 4 #39+59:
        local 5 #42+29:

    method getText()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method setText(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+1: @checkers.javari.quals.ReadOnly
        local 1 #0+1: @checkers.javari.quals.ReadOnly

    method doSemanticAction()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+1: @checkers.javari.quals.ReadOnly

package org.htmlparser.nodes:
class RemarkNode:

    field mText: @checkers.javari.quals.ThisMutable

    method <init>(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+13: @checkers.javari.quals.Mutable
        local 1 #0+13: @checkers.javari.quals.Mutable

    method <init>(Lorg/htmlparser/lexer/Page;II)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+13: @checkers.javari.quals.Mutable
        local 1 #0+13: @checkers.javari.quals.Mutable
        local 2 #0+13:
        local 3 #0+13:

    method getText()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+52: @checkers.javari.quals.Mutable
        local 1 #14+31:
        local 2 #21+24:
        local 3 #29+3: @checkers.javari.quals.ReadOnly
        local 3 #42+3: @checkers.javari.quals.ReadOnly
        local 3 #50+2: @checkers.javari.quals.PolyRead

    method setText(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+55: @checkers.javari.quals.Mutable
        local 1 #0+55: @checkers.javari.quals.Mutable

    method toPlainTextString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+5: @checkers.javari.quals.Mutable

    method toHtml()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+74: @checkers.javari.quals.Mutable
        local 2 #23+3: @checkers.javari.quals.ReadOnly
        local 1 #44+28: @checkers.javari.quals.Mutable
        local 2 #72+2: @checkers.javari.quals.PolyRead

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+407: @checkers.javari.quals.Mutable
        local 1 #5+402:
        local 2 #10+397:
        local 6 #25+382: @checkers.javari.quals.Mutable
        local 3 #45+189: @checkers.javari.quals.Mutable
        local 4 #59+175: @checkers.javari.quals.Mutable
        local 5 #121+79:
        local 7 #275+126:
        local 5 #289+100:

    method accept(Lorg/htmlparser/visitors/NodeVisitor;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly
        local 1 #0+6: @checkers.javari.quals.ReadOnly

package org.htmlparser.nodes:
class TagNode:

    field NONE: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mScanner: @checkers.javari.quals.ReadOnly

    field mDefaultScanner: @checkers.javari.quals.ReadOnly

    field mAttributes: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field breakTags: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        inner-type 1: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+15: @checkers.javari.quals.ReadOnly

    method <init>(Lorg/htmlparser/lexer/Page;IILjava/util/Vector;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        parameter #3: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+72: @checkers.javari.quals.Mutable
        local 1 #0+72: @checkers.javari.quals.Mutable
        local 2 #0+72:
        local 3 #0+72:
        local 4 #0+72: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #43+28: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method <init>(Lorg/htmlparser/nodes/TagNode;Lorg/htmlparser/scanners/TagScanner;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+26: @checkers.javari.quals.Mutable
        local 1 #0+26: @checkers.javari.quals.Mutable
        local 2 #0+26: @checkers.javari.quals.ReadOnly

    method getAttribute(Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+46: @checkers.javari.quals.Mutable
        local 1 #0+46: @checkers.javari.quals.Mutable
        local 3 #2+44: @checkers.javari.quals.PolyRead
        local 2 #35+9: @checkers.javari.quals.Mutable

    method setAttribute(Ljava/lang/String;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+227: @checkers.javari.quals.Mutable
        local 1 #0+227: @checkers.javari.quals.Mutable
        local 2 #0+227: @checkers.javari.quals.Mutable
        local 4 #3+224:
        local 5 #6+221:
        local 6 #9+218:
        local 11 #16+56:
        local 3 #26+37:
        local 9 #86+3:
        local 9 #98+3:
        local 9 #105+77:
        local 7 #109+73: @checkers.javari.quals.Mutable
        local 8 #124+58: @checkers.javari.quals.Mutable
        local 11 #127+46:
        local 3 #137+27:
        local 9 #185+42:
        local 10 #192+35: @checkers.javari.quals.Mutable

    method removeAttribute(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+20: @checkers.javari.quals.Mutable
        local 1 #0+20: @checkers.javari.quals.Mutable
        local 2 #6+14: @checkers.javari.quals.Mutable

    method setAttribute(Ljava/lang/String;Ljava/lang/String;C)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+15: @checkers.javari.quals.Mutable
        local 1 #0+15: @checkers.javari.quals.Mutable
        local 2 #0+15: @checkers.javari.quals.Mutable
        local 3 #0+15:

    method getAttributeEx(Ljava/lang/String;)Lorg/htmlparser/Attribute;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+74: @checkers.javari.quals.Mutable
        local 1 #0+74: @checkers.javari.quals.Mutable
        local 6 #3+71: @checkers.javari.quals.PolyRead
        local 2 #8+66: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #17+54:
        local 7 #20+51:
        local 4 #34+31: @checkers.javari.quals.Mutable
        local 5 #41+24: @checkers.javari.quals.Mutable

    method setAttributeEx(Lorg/htmlparser/Attribute;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method setAttribute(Lorg/htmlparser/Attribute;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+130: @checkers.javari.quals.Mutable
        local 1 #0+130: @checkers.javari.quals.Mutable
        local 2 #2+128:
        local 3 #7+123: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 4 #13+117:
        local 5 #24+60: @checkers.javari.quals.Mutable
        local 8 #27+57:
        local 6 #41+34: @checkers.javari.quals.Mutable
        local 7 #48+27: @checkers.javari.quals.Mutable

    method getAttributesEx()Ljava/util/Vector;: @checkers.javari.quals.PolyRead
        inner-type 0: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getAttributes()Ljava/util/Hashtable;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        inner-type 1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+140: @checkers.javari.quals.Mutable
        local 4 #9+131: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
            inner-type 1: @checkers.javari.quals.ReadOnly
        local 1 #14+126: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #30+97: @checkers.javari.quals.Mutable
        local 5 #51+73:
        local 3 #76+36: @checkers.javari.quals.ReadOnly

    method getTagName()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+57: @checkers.javari.quals.Mutable
        local 1 #5+52: @checkers.javari.quals.Mutable

    method getRawTagName()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+28: @checkers.javari.quals.Mutable
        local 2 #2+26: @checkers.javari.quals.PolyRead
        local 1 #7+21: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable

    method setTagName(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+90: @checkers.javari.quals.Mutable
        local 1 #0+90: @checkers.javari.quals.Mutable
        local 2 #11+79: @checkers.javari.quals.Mutable
        local 3 #16+74: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 4 #58+31: @checkers.javari.quals.Mutable

    method getText()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+19: @checkers.javari.quals.Mutable
        local 1 #5+14: @checkers.javari.quals.Mutable

    method setAttributes(Ljava/util/Hashtable;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
            inner-type 1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+234: @checkers.javari.quals.Mutable
        local 1 #0+234: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
            inner-type 1: @checkers.javari.quals.Mutable
        local 2 #8+226: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 7 #14+214: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #28+190: @checkers.javari.quals.Mutable
        local 4 #38+180: @checkers.javari.quals.Mutable
        local 5 #73+18:
        local 5 #126+18:
        local 5 #147+71:
        local 6 #170+10: @checkers.javari.quals.Mutable
        local 6 #192+26: @checkers.javari.quals.Mutable

    method setAttributesEx(Ljava/util/Vector;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable

    method setTagBegin(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method getTagBegin()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setTagEnd(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method getTagEnd()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setText(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+68: @checkers.javari.quals.Mutable
        local 1 #0+68: @checkers.javari.quals.Mutable
        local 2 #9+59: @checkers.javari.quals.Mutable
        local 3 #17+35: @checkers.javari.quals.Mutable
        local 4 #54+13: @checkers.javari.quals.Mutable

    method toPlainTextString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+3: @checkers.javari.quals.ReadOnly

    method toHtml()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+113: @checkers.javari.quals.Mutable
        local 1 #2+111:
        local 3 #7+106: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #12+101:
        local 6 #15+31:
        local 4 #29+11: @checkers.javari.quals.Mutable
        local 5 #56+57: @checkers.javari.quals.Mutable
        local 6 #68+30:
        local 4 #82+10: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+182: @checkers.javari.quals.Mutable
        local 1 #5+177: @checkers.javari.quals.Mutable
        local 5 #21+161: @checkers.javari.quals.Mutable
        local 2 #32+3: @checkers.javari.quals.ReadOnly
        local 2 #39+143: @checkers.javari.quals.Mutable
        local 3 #55+127: @checkers.javari.quals.Mutable
        local 4 #72+110: @checkers.javari.quals.Mutable

    method breaksFlow()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable

    method getParsed()Ljava/util/Hashtable;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        inner-type 1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+5: @checkers.javari.quals.Mutable

    method accept(Lorg/htmlparser/visitors/NodeVisitor;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+21: @checkers.javari.quals.Mutable
        local 1 #0+21: @checkers.javari.quals.ReadOnly

    method isEmptyXmlTag()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+70: @checkers.javari.quals.Mutable
        local 6 #3+67:
        local 1 #8+62: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #13+57:
        local 3 #28+39: @checkers.javari.quals.Mutable
        local 4 #34+33: @checkers.javari.quals.Mutable
        local 5 #46+21:

    method setEmptyXmlTag(Z)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+269: @checkers.javari.quals.Mutable
        local 1 #0+269:
        local 2 #5+264: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #10+259:
        local 4 #26+219: @checkers.javari.quals.Mutable
        local 5 #33+212: @checkers.javari.quals.Mutable
        local 7 #45+174:
        local 6 #52+167: @checkers.javari.quals.ReadOnly
        local 4 #262+6: @checkers.javari.quals.Mutable

    method isEndTag()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+36: @checkers.javari.quals.Mutable
        local 1 #5+31: @checkers.javari.quals.Mutable

    method getStartingLineNumber()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+12: @checkers.javari.quals.ReadOnly

    method getEndingLineNumber()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+12: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEnders()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.QReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getThisScanner()Lorg/htmlparser/scanners/Scanner;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setThisScanner(Lorg/htmlparser/scanners/Scanner;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.ReadOnly

    method getEndTag()Lorg/htmlparser/Tag;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method setEndTag(Lorg/htmlparser/Tag;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+1: @checkers.javari.quals.ReadOnly
        local 1 #0+1: @checkers.javari.quals.ReadOnly

    method getAttribute(Lorg/htmlparser/Tag;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

package org.htmlparser.nodes:
class TextNode:

    field mText: @checkers.javari.quals.ThisMutable

    method <init>(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+13: @checkers.javari.quals.Mutable
        local 1 #0+13: @checkers.javari.quals.Mutable

    method <init>(Lorg/htmlparser/lexer/Page;II)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+13: @checkers.javari.quals.Mutable
        local 1 #0+13: @checkers.javari.quals.Mutable
        local 2 #0+13:
        local 3 #0+13:

    method getText()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+5: @checkers.javari.quals.Mutable

    method setText(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+22: @checkers.javari.quals.Mutable
        local 1 #0+22: @checkers.javari.quals.Mutable

    method toPlainTextString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+5: @checkers.javari.quals.Mutable

    method toHtml()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+27: @checkers.javari.quals.Mutable
        local 1 #5+22: @checkers.javari.quals.PolyRead

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+399: @checkers.javari.quals.Mutable
        local 1 #5+394:
        local 2 #10+389:
        local 6 #25+374: @checkers.javari.quals.Mutable
        local 3 #45+181: @checkers.javari.quals.Mutable
        local 4 #59+167: @checkers.javari.quals.Mutable
        local 5 #111+81:
        local 7 #267+126:
        local 5 #281+100:

    method isWhiteSpace()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+26: @checkers.javari.quals.Mutable

    method accept(Lorg/htmlparser/visitors/NodeVisitor;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly
        local 1 #0+6: @checkers.javari.quals.ReadOnly

package org.htmlparser.scanners:
class CompositeTagScanner:

    field mUseJVMStack:

    field mLeaveEnds:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method scan(Lorg/htmlparser/Tag;Lorg/htmlparser/lexer/Lexer;Lorg/htmlparser/util/NodeList;)Lorg/htmlparser/Tag;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+648: @checkers.javari.quals.ReadOnly
        local 1 #0+648: @checkers.javari.quals.Mutable
        local 2 #0+648: @checkers.javari.quals.Mutable
        local 3 #0+648: @checkers.javari.quals.Mutable
        local 8 #3+645: @checkers.javari.quals.Mutable
        local 4 #32+606: @checkers.javari.quals.Mutable
        local 5 #52+470: @checkers.javari.quals.Mutable
        local 6 #61+461: @checkers.javari.quals.Mutable
        local 7 #148+96: @checkers.javari.quals.ReadOnly
        local 9 #253+266: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 10 #299+220: @checkers.javari.quals.ReadOnly
        local 7 #308+214: @checkers.javari.quals.ReadOnly
        local 11 #322+189:
        local 12 #330+65:
        local 13 #344+37: @checkers.javari.quals.Mutable
        local 12 #435+48:
        local 13 #449+24: @checkers.javari.quals.Mutable
        local 9 #548+85:
        local 10 #578+52: @checkers.javari.quals.Mutable
        local 7 #587+43: @checkers.javari.quals.ReadOnly

    method addChild(Lorg/htmlparser/Tag;Lorg/htmlparser/Node;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+40: @checkers.javari.quals.ReadOnly
        local 1 #0+40: @checkers.javari.quals.Mutable
        local 2 #0+40: @checkers.javari.quals.Mutable

    method finishTag(Lorg/htmlparser/Tag;Lorg/htmlparser/lexer/Lexer;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+51: @checkers.javari.quals.ReadOnly
        local 1 #0+51: @checkers.javari.quals.Mutable
        local 2 #0+51: @checkers.javari.quals.Mutable

    method createVirtualEndTag(Lorg/htmlparser/Tag;Lorg/htmlparser/lexer/Lexer;Lorg/htmlparser/lexer/Page;I)Lorg/htmlparser/Tag;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.Mutable
        parameter #3:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+68: @checkers.javari.quals.ReadOnly
        local 1 #0+68: @checkers.javari.quals.Mutable
        local 2 #0+68: @checkers.javari.quals.Mutable
        local 3 #0+68: @checkers.javari.quals.Mutable
        local 4 #0+68:
        local 6 #23+45: @checkers.javari.quals.Mutable
        local 7 #32+36: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #65+3: @checkers.javari.quals.PolyRead

    method isTagToBeEndedFor(Lorg/htmlparser/Tag;Lorg/htmlparser/Tag;)Z:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+76: @checkers.javari.quals.ReadOnly
        local 1 #0+76: @checkers.javari.quals.ReadOnly
        local 2 #0+76: @checkers.javari.quals.Mutable
        local 5 #3+73:
        local 3 #10+66: @checkers.javari.quals.Mutable
        local 4 #27+3: @checkers.javari.quals.QReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 4 #38+38: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 6 #41+32:

package org.htmlparser.scanners:
class Scanner:

    method scan(Lorg/htmlparser/Tag;Lorg/htmlparser/lexer/Lexer;Lorg/htmlparser/util/NodeList;)Lorg/htmlparser/Tag;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly

package org.htmlparser.scanners:
class ScriptDecoder:

    field STATE_DONE:

    field STATE_INITIAL:

    field STATE_LENGTH:

    field STATE_PREFIX:

    field STATE_DECODE:

    field STATE_ESCAPE:

    field STATE_CHECKSUM:

    field STATE_FINAL:

    field LAST_STATE:

    field mEncodingIndex:
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mLookupTable:
        inner-type 0: @checkers.javari.quals.ReadOnly
        inner-type 1: @checkers.javari.quals.ReadOnly

    field mDigits:
        inner-type 0: @checkers.javari.quals.Mutable

    field mLeader:
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mPrefix:
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mTrailer:
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEscapes:
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEscaped:
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:
        local 0 #1908+33:
        local 0 #1943+24:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method decodeBase64([C)J:
        parameter #0:
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+125:
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #2+123:

    method Decode(Lorg/htmlparser/lexer/Page;Lorg/htmlparser/lexer/Cursor;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+838: @checkers.javari.quals.Mutable
        local 1 #0+838: @checkers.javari.quals.Mutable
        local 12 #6+832:
            inner-type 0: @checkers.javari.quals.Mutable
        local 17 #18+820: @checkers.javari.quals.Mutable
        local 2 #20+818:
        local 3 #22+816:
        local 4 #25+813:
        local 5 #28+810:
        local 6 #31+807:
        local 7 #34+804:
        local 10 #37+801:
        local 8 #40+798:
        local 13 #43+795:
        local 15 #53+775:
        local 14 #58+770:
        local 18 #183+28:
        local 18 #465+22:
        local 16 #520+128:
        local 18 #523+37:
        local 18 #673+52:

package org.htmlparser.scanners:
class ScriptScanner:

    field STRICT:

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method scan(Lorg/htmlparser/Tag;Lorg/htmlparser/lexer/Lexer;Lorg/htmlparser/util/NodeList;)Lorg/htmlparser/Tag;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+261: @checkers.javari.quals.ReadOnly
        local 1 #0+261: @checkers.javari.quals.Mutable
        local 2 #0+261: @checkers.javari.quals.Mutable
        local 3 #0+261: @checkers.javari.quals.ReadOnly
        local 4 #16+47: @checkers.javari.quals.Mutable
        local 5 #54+9: @checkers.javari.quals.ReadOnly
        local 6 #80+181: @checkers.javari.quals.Mutable
        local 7 #86+175:
        local 8 #93+168: @checkers.javari.quals.Mutable
        local 9 #169+37: @checkers.javari.quals.Mutable
        local 10 #178+28: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable

package org.htmlparser.scanners:
class StyleScanner:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method scan(Lorg/htmlparser/Tag;Lorg/htmlparser/lexer/Lexer;Lorg/htmlparser/util/NodeList;)Lorg/htmlparser/Tag;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+187: @checkers.javari.quals.ReadOnly
        local 1 #0+187: @checkers.javari.quals.Mutable
        local 2 #0+187: @checkers.javari.quals.Mutable
        local 3 #0+187: @checkers.javari.quals.ReadOnly
        local 4 #6+181: @checkers.javari.quals.Mutable
        local 5 #12+175:
        local 6 #19+168: @checkers.javari.quals.Mutable
        local 7 #95+37: @checkers.javari.quals.Mutable
        local 8 #104+28: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable

package org.htmlparser.scanners:
class TagScanner:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method scan(Lorg/htmlparser/Tag;Lorg/htmlparser/lexer/Lexer;Lorg/htmlparser/util/NodeList;)Lorg/htmlparser/Tag;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly
        local 1 #0+8: @checkers.javari.quals.Mutable
        local 2 #0+8: @checkers.javari.quals.ReadOnly
        local 3 #0+8: @checkers.javari.quals.ReadOnly

package org.htmlparser.tags:
class AppletTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method createAppletParamsTable()Ljava/util/Hashtable;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        inner-type 1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly

    method getAppletClass()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable

    method getAppletParams()Ljava/util/Hashtable;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        inner-type 1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getArchive()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable

    method getCodeBase()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable

    method getParameter(Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+12: @checkers.javari.quals.ReadOnly
        local 1 #0+12: @checkers.javari.quals.Mutable

    method getParameterNames()Ljava/util/Enumeration;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

    method setAppletClass(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8: @checkers.javari.quals.Mutable

    method setAppletParams(Ljava/util/Hashtable;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
            inner-type 1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+293: @checkers.javari.quals.Mutable
        local 1 #0+293: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
            inner-type 1: @checkers.javari.quals.Mutable
        local 2 #5+288: @checkers.javari.quals.Mutable
        local 9 #23+114:
        local 3 #33+95: @checkers.javari.quals.Mutable
        local 8 #93+23: @checkers.javari.quals.Mutable
        local 9 #143+144: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 7 #155+122: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #167+110: @checkers.javari.quals.Mutable
        local 6 #178+99: @checkers.javari.quals.Mutable
        local 4 #271+6: @checkers.javari.quals.Mutable

    method setArchive(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8: @checkers.javari.quals.Mutable

    method setCodeBase(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+351: @checkers.javari.quals.Mutable
        local 7 #12+339: @checkers.javari.quals.Mutable
        local 1 #111+240: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
            inner-type 1: @checkers.javari.quals.Mutable
        local 2 #116+235: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 8 #134+82:
        local 3 #147+60: @checkers.javari.quals.Mutable
        local 4 #157+50: @checkers.javari.quals.Mutable
        local 5 #219+132:
        local 8 #225+91: @checkers.javari.quals.Mutable
        local 6 #237+69: @checkers.javari.quals.Mutable

package org.htmlparser.tags:
class BaseHrefTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getBaseUrl()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+36: @checkers.javari.quals.Mutable
        local 1 #7+29: @checkers.javari.quals.Mutable

    method setBaseUrl(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8: @checkers.javari.quals.Mutable

    method doSemanticAction()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+18: @checkers.javari.quals.Mutable
        local 1 #5+13: @checkers.javari.quals.Mutable

package org.htmlparser.tags:
class BodyTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEnders()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getBody()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+20: @checkers.javari.quals.ReadOnly

package org.htmlparser.tags:
class Bullet:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEnders()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

package org.htmlparser.tags:
class BulletList:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

package org.htmlparser.tags:
class CompositeTag:

    field mEndTag: @checkers.javari.quals.ThisMutable

    field mDefaultCompositeScanner: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+12: @checkers.javari.quals.Mutable

    method children()Lorg/htmlparser/util/SimpleNodeIterator;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+31: @checkers.javari.quals.ReadOnly
        local 1 #15+3: @checkers.javari.quals.ReadOnly
        local 1 #29+2: @checkers.javari.quals.PolyRead

    method getChild(I)Lorg/htmlparser/Node;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+20: @checkers.javari.quals.ReadOnly
        local 1 #0+20:

    method getChildrenAsNodeArray()[Lorg/htmlparser/Node;: @checkers.javari.quals.QReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+22: @checkers.javari.quals.Mutable

    method removeChild(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+17: @checkers.javari.quals.Mutable
        local 1 #0+17:

    method elements()Lorg/htmlparser/util/SimpleNodeIterator;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+28: @checkers.javari.quals.ReadOnly

    method toPlainTextString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+46: @checkers.javari.quals.ReadOnly
        local 1 #8+38: @checkers.javari.quals.Mutable
        local 2 #13+28: @checkers.javari.quals.Mutable

    method putChildrenInto(Ljava/lang/StringBuffer;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+36: @checkers.javari.quals.ReadOnly
        local 1 #0+36: @checkers.javari.quals.Mutable
        local 3 #5+30: @checkers.javari.quals.Mutable
        local 2 #15+11: @checkers.javari.quals.Mutable

    method putEndTagInto(Ljava/lang/StringBuffer;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+15: @checkers.javari.quals.Mutable
        local 1 #0+15: @checkers.javari.quals.Mutable

    method toHtml()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+46: @checkers.javari.quals.Mutable
        local 1 #8+38: @checkers.javari.quals.Mutable

    method searchByName(Ljava/lang/String;)Lorg/htmlparser/Tag;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly
        local 1 #0+10: @checkers.javari.quals.ReadOnly

    method searchFor(Ljava/lang/String;)Lorg/htmlparser/util/NodeList;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly
        local 1 #0+7: @checkers.javari.quals.Mutable

    method searchFor(Ljava/lang/String;Z)Lorg/htmlparser/util/NodeList;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly
        local 1 #0+10: @checkers.javari.quals.Mutable
        local 2 #0+10:

    method searchFor(Ljava/lang/String;ZLjava/util/Locale;)Lorg/htmlparser/util/NodeList;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+88: @checkers.javari.quals.ReadOnly
        local 1 #0+88: @checkers.javari.quals.Mutable
        local 2 #0+88:
        local 3 #0+88: @checkers.javari.quals.Mutable
        local 6 #9+79: @checkers.javari.quals.Mutable
        local 7 #25+60: @checkers.javari.quals.Mutable
        local 4 #37+38: @checkers.javari.quals.Mutable
        local 5 #46+29: @checkers.javari.quals.Mutable

    method searchFor(Ljava/lang/Class;Z)Lorg/htmlparser/util/NodeList;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+39: @checkers.javari.quals.Mutable
        local 1 #0+39: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #0+39:
        local 3 #5+34: @checkers.javari.quals.Mutable
        local 4 #18+3: @checkers.javari.quals.ReadOnly
        local 4 #36+3: @checkers.javari.quals.PolyRead

    method findPositionOf(Ljava/lang/String;)I:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly
        local 1 #0+9: @checkers.javari.quals.Mutable

    method findPositionOf(Ljava/lang/String;Ljava/util/Locale;)I:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+62: @checkers.javari.quals.ReadOnly
        local 1 #0+62: @checkers.javari.quals.Mutable
        local 2 #0+62: @checkers.javari.quals.Mutable
        local 4 #3+59:
        local 5 #15+45: @checkers.javari.quals.Mutable
        local 3 #26+24: @checkers.javari.quals.Mutable

    method findPositionOf(Lorg/htmlparser/Node;)I:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+41: @checkers.javari.quals.ReadOnly
        local 1 #0+41: @checkers.javari.quals.ReadOnly
        local 3 #2+39:
        local 4 #8+31: @checkers.javari.quals.Mutable
        local 2 #19+10: @checkers.javari.quals.ReadOnly

    method childAt(I)Lorg/htmlparser/Node;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+20: @checkers.javari.quals.ReadOnly
        local 1 #0+20:

    method collectInto(Lorg/htmlparser/util/NodeList;Lorg/htmlparser/NodeFilter;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+63: @checkers.javari.quals.Mutable
        local 1 #0+63: @checkers.javari.quals.Mutable
        local 2 #0+63: @checkers.javari.quals.Mutable
        local 3 #11+25: @checkers.javari.quals.Mutable

    method getChildrenHTML()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+49: @checkers.javari.quals.ReadOnly
        local 1 #8+41: @checkers.javari.quals.Mutable
        local 2 #13+31: @checkers.javari.quals.Mutable
        local 3 #26+9: @checkers.javari.quals.Mutable

    method accept(Lorg/htmlparser/visitors/NodeVisitor;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+83: @checkers.javari.quals.Mutable
        local 1 #0+83: @checkers.javari.quals.ReadOnly
        local 2 #31+26: @checkers.javari.quals.Mutable
        local 3 #41+7: @checkers.javari.quals.Mutable

    method getChildCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+18: @checkers.javari.quals.ReadOnly
        local 1 #5+13: @checkers.javari.quals.ReadOnly

    method getEndTag()Lorg/htmlparser/Tag;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setEndTag(Lorg/htmlparser/Tag;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method digupStringNode(Ljava/lang/String;)[Lorg/htmlparser/Text;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+149: @checkers.javari.quals.ReadOnly
        local 1 #0+149: @checkers.javari.quals.Mutable
        local 2 #6+143: @checkers.javari.quals.Mutable
        local 3 #14+135: @checkers.javari.quals.Mutable
        local 4 #17+89:
        local 5 #28+66: @checkers.javari.quals.Mutable
        local 6 #60+34: @checkers.javari.quals.ReadOnly
        local 7 #68+26: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 8 #71+23:
        local 4 #115+34: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #118+28:

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+22: @checkers.javari.quals.Mutable
        local 1 #11+11: @checkers.javari.quals.Mutable

    method getText()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+19: @checkers.javari.quals.Mutable
        local 1 #5+14: @checkers.javari.quals.Mutable

    method getStringText()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+27: @checkers.javari.quals.Mutable
        local 2 #5+22:
        local 3 #15+12:
        local 1 #25+2: @checkers.javari.quals.ReadOnly

    method toString(ILjava/lang/StringBuffer;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+195: @checkers.javari.quals.Mutable
        local 1 #0+195:
        local 2 #0+195: @checkers.javari.quals.Mutable
        local 4 #3+20:
        local 4 #49+82: @checkers.javari.quals.Mutable
        local 3 #60+61: @checkers.javari.quals.Mutable
        local 5 #84+20:
        local 4 #149+20:

package org.htmlparser.tags:
class DefinitionList:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

package org.htmlparser.tags:
class DefinitionListBullet:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEnders()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

package org.htmlparser.tags:
class Div:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

package org.htmlparser.tags:
class DoctypeTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+58: @checkers.javari.quals.Mutable
        local 1 #5+53: @checkers.javari.quals.Mutable

package org.htmlparser.tags:
class FormTag:

    field POST: @checkers.javari.quals.ReadOnly

    field GET: @checkers.javari.quals.ReadOnly

    field mFormLocation: @checkers.javari.quals.ThisMutable

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEnders()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getFormInputs()Lorg/htmlparser/util/NodeList;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable

    method getFormTextareas()Lorg/htmlparser/util/NodeList;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable

    method getFormLocation()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+20: @checkers.javari.quals.Mutable

    method setFormLocation(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+13: @checkers.javari.quals.Mutable
        local 1 #0+13: @checkers.javari.quals.Mutable

    method getFormMethod()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+16: @checkers.javari.quals.Mutable
        local 1 #7+9: @checkers.javari.quals.ReadOnly

    method getInputTag(Ljava/lang/String;)Lorg/htmlparser/tags/InputTag;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+73: @checkers.javari.quals.Mutable
        local 1 #0+73: @checkers.javari.quals.Mutable
        local 2 #2+71: @checkers.javari.quals.Mutable
        local 3 #4+69:
        local 5 #13+52: @checkers.javari.quals.Mutable
        local 4 #35+16: @checkers.javari.quals.Mutable

    method getFormName()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable

    method getTextAreaTag(Ljava/lang/String;)Lorg/htmlparser/tags/TextareaTag;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+73: @checkers.javari.quals.Mutable
        local 1 #0+73: @checkers.javari.quals.Mutable
        local 2 #2+71: @checkers.javari.quals.Mutable
        local 3 #4+69:
        local 4 #13+52: @checkers.javari.quals.Mutable
        local 5 #35+16: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+44: @checkers.javari.quals.Mutable

    method extractFormLocn()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+35: @checkers.javari.quals.Mutable
        local 1 #7+28: @checkers.javari.quals.Mutable

package org.htmlparser.tags:
class FrameSetTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+32: @checkers.javari.quals.ReadOnly

    method getFrames()Lorg/htmlparser/util/NodeList;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getFrame(Ljava/lang/String;)Lorg/htmlparser/tags/FrameTag;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly
        local 1 #0+9: @checkers.javari.quals.Mutable

    method getFrame(Ljava/lang/String;Ljava/util/Locale;)Lorg/htmlparser/tags/FrameTag;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+79: @checkers.javari.quals.ReadOnly
        local 1 #0+79: @checkers.javari.quals.Mutable
        local 2 #0+79: @checkers.javari.quals.Mutable
        local 4 #3+76: @checkers.javari.quals.Mutable
        local 5 #18+58: @checkers.javari.quals.Mutable
        local 3 #29+32: @checkers.javari.quals.Mutable

    method setFrames(Lorg/htmlparser/util/NodeList;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

package org.htmlparser.tags:
class FrameTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getFrameLocation()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+35: @checkers.javari.quals.Mutable
        local 1 #7+28: @checkers.javari.quals.Mutable

    method setFrameLocation(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8: @checkers.javari.quals.Mutable

    method getFrameName()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+56: @checkers.javari.quals.Mutable

package org.htmlparser.tags:
class HeadTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEnders: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEnders()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+20: @checkers.javari.quals.Mutable

package org.htmlparser.tags:
class HeadingTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEnders: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEnders()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

package org.htmlparser.tags:
class Html:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

package org.htmlparser.tags:
class ImageTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field imageURL: @checkers.javari.quals.ThisMutable

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method extractImageLocn()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+388: @checkers.javari.quals.Mutable
        local 8 #4+384: @checkers.javari.quals.Mutable
        local 6 #7+381:
        local 1 #12+376: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #17+371:
        local 9 #20+347:
        local 3 #33+322: @checkers.javari.quals.Mutable
        local 4 #39+316: @checkers.javari.quals.Mutable
        local 5 #45+310: @checkers.javari.quals.Mutable
        local 7 #87+157: @checkers.javari.quals.Mutable

    method getImageURL()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+34: @checkers.javari.quals.Mutable

    method setImageURL(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+16: @checkers.javari.quals.Mutable
        local 1 #0+16: @checkers.javari.quals.Mutable

package org.htmlparser.tags:
class InputTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

package org.htmlparser.tags:
class JspTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+58: @checkers.javari.quals.Mutable
        local 1 #5+53: @checkers.javari.quals.Mutable

package org.htmlparser.tags:
class LabelTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEnders()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getLabel()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+20: @checkers.javari.quals.ReadOnly

package org.htmlparser.tags:
class LinkTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEnders: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mLink: @checkers.javari.quals.ThisMutable

    field mailLink:

    field javascriptLink:

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEnders()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getAccessKey()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable

    method getLink()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+105: @checkers.javari.quals.Mutable
        local 1 #35+65:
        local 2 #78+22:

    method getLinkText()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+23: @checkers.javari.quals.Mutable
        local 1 #15+3: @checkers.javari.quals.ReadOnly
        local 1 #21+2: @checkers.javari.quals.PolyRead

    method isMailLink()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable

    method isJavascriptLink()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable

    method isFTPLink()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+16: @checkers.javari.quals.Mutable

    method isIRCLink()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+16: @checkers.javari.quals.Mutable

    method isHTTPLink()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+39: @checkers.javari.quals.Mutable

    method isHTTPSLink()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+16: @checkers.javari.quals.Mutable

    method isHTTPLikeLink()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+18: @checkers.javari.quals.Mutable

    method setMailLink(Z)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method setJavascriptLink(Z)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+237: @checkers.javari.quals.Mutable
        local 1 #8+229: @checkers.javari.quals.Mutable
        local 3 #140+85:
        local 4 #146+79: @checkers.javari.quals.Mutable
        local 2 #157+58: @checkers.javari.quals.Mutable

    method setLink(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+13: @checkers.javari.quals.Mutable
        local 1 #0+13: @checkers.javari.quals.Mutable

    method linkData()Lorg/htmlparser/util/SimpleNodeIterator;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method extractLink()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+43: @checkers.javari.quals.Mutable
        local 1 #7+36: @checkers.javari.quals.Mutable

package org.htmlparser.tags:
class MetaTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getHttpEquiv()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable

    method getMetaContent()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable

    method getMetaTagName()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable

    method setHttpEquiv(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+38: @checkers.javari.quals.Mutable
        local 1 #0+38: @checkers.javari.quals.Mutable
        local 2 #7+31: @checkers.javari.quals.Mutable

    method setMetaTagContents(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+38: @checkers.javari.quals.Mutable
        local 1 #0+38: @checkers.javari.quals.Mutable
        local 2 #7+31: @checkers.javari.quals.Mutable

    method setMetaTagName(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+38: @checkers.javari.quals.Mutable
        local 1 #0+38: @checkers.javari.quals.Mutable
        local 2 #7+31: @checkers.javari.quals.Mutable

    method doSemanticAction()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+37: @checkers.javari.quals.Mutable
        local 1 #5+32: @checkers.javari.quals.Mutable
        local 2 #28+8: @checkers.javari.quals.Mutable

package org.htmlparser.tags:
class ObjectTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method createObjectParamsTable()Ljava/util/Hashtable;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        inner-type 1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly

    method getObjectClassId()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable

    method getObjectCodeBase()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable

    method getObjectCodeType()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable

    method getObjectData()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable

    method getObjectHeight()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable

    method getObjectStandby()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable

    method getObjectType()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable

    method getObjectWidth()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable

    method getObjectParams()Ljava/util/Hashtable;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        inner-type 1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getParameter(Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+15: @checkers.javari.quals.ReadOnly
        local 1 #0+15: @checkers.javari.quals.Mutable

    method getParameterNames()Ljava/util/Enumeration;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

    method setObjectClassId(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8: @checkers.javari.quals.Mutable

    method setObjectCodeBase(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8: @checkers.javari.quals.Mutable

    method setObjectCodeType(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8: @checkers.javari.quals.Mutable

    method setObjectData(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8: @checkers.javari.quals.Mutable

    method setObjectHeight(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8: @checkers.javari.quals.Mutable

    method setObjectStandby(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8: @checkers.javari.quals.Mutable

    method setObjectType(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8: @checkers.javari.quals.Mutable

    method setObjectWidth(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8: @checkers.javari.quals.Mutable

    method setObjectParams(Ljava/util/Hashtable;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
            inner-type 1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+294: @checkers.javari.quals.Mutable
        local 1 #0+294: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
            inner-type 1: @checkers.javari.quals.Mutable
        local 2 #5+289: @checkers.javari.quals.Mutable
        local 9 #23+112:
        local 3 #33+93: @checkers.javari.quals.Mutable
        local 8 #93+21: @checkers.javari.quals.Mutable
        local 9 #141+147: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 7 #153+125: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #165+113: @checkers.javari.quals.Mutable
        local 6 #176+102: @checkers.javari.quals.Mutable
        local 4 #272+6: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+489: @checkers.javari.quals.Mutable
        local 7 #12+477: @checkers.javari.quals.Mutable
        local 1 #243+246: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
            inner-type 1: @checkers.javari.quals.Mutable
        local 2 #248+241: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 8 #267+84:
        local 3 #280+62: @checkers.javari.quals.Mutable
        local 4 #290+52: @checkers.javari.quals.Mutable
        local 5 #354+135:
        local 8 #360+92: @checkers.javari.quals.Mutable
        local 6 #372+70: @checkers.javari.quals.Mutable

package org.htmlparser.tags:
class OptionTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEnders: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEnders()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getValue()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable

    method setValue(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8: @checkers.javari.quals.Mutable

    method getOptionText()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+39: @checkers.javari.quals.Mutable
        local 1 #37+2: @checkers.javari.quals.PolyRead

package org.htmlparser.tags:
class ParagraphTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEnders: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEnders()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

package org.htmlparser.tags:
class ScriptTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mCode: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+16: @checkers.javari.quals.Mutable

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getLanguage()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable

    method getScriptCode()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+22: @checkers.javari.quals.ReadOnly
        local 1 #12+3: @checkers.javari.quals.ReadOnly
        local 1 #20+2: @checkers.javari.quals.PolyRead

    method setScriptCode(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.ReadOnly

    method getType()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable

    method setLanguage(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8: @checkers.javari.quals.Mutable

    method setType(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8: @checkers.javari.quals.Mutable

    method putChildrenInto(Ljava/lang/StringBuffer;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+55: @checkers.javari.quals.ReadOnly
        local 1 #0+55: @checkers.javari.quals.Mutable
        local 3 #24+30: @checkers.javari.quals.Mutable
        local 2 #34+11: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+181: @checkers.javari.quals.Mutable
        local 1 #8+173: @checkers.javari.quals.Mutable

package org.htmlparser.tags:
class SelectTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEnders: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEnders()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getOptionTags()[Lorg/htmlparser/tags/OptionTag;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+23: @checkers.javari.quals.Mutable
        local 1 #8+15: @checkers.javari.quals.Mutable
        local 2 #16+7: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.Mutable

package org.htmlparser.tags:
class Span:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

package org.htmlparser.tags:
class StyleTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+16: @checkers.javari.quals.Mutable

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getStyleCode()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+50: @checkers.javari.quals.Mutable
        local 2 #8+42: @checkers.javari.quals.Mutable
        local 1 #13+37: @checkers.javari.quals.Mutable

package org.htmlparser.tags:
class TableColumn:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEnders: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEnders()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

package org.htmlparser.tags:
class TableHeader:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEnders: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEnders()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

package org.htmlparser.tags:
class TableRow:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEnders: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEnders()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getColumns()[Lorg/htmlparser/tags/TableColumn;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+126: @checkers.javari.quals.Mutable
        local 1 #5+121: @checkers.javari.quals.Mutable
        local 2 #19+98: @checkers.javari.quals.Mutable
        local 3 #28+89: @checkers.javari.quals.Mutable
        local 4 #69+48: @checkers.javari.quals.Mutable
        local 5 #108+9: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #123+3: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly

    method getColumnCount()I:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable

    method getHeaders()[Lorg/htmlparser/tags/TableHeader;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+126: @checkers.javari.quals.Mutable
        local 1 #5+121: @checkers.javari.quals.Mutable
        local 2 #19+98: @checkers.javari.quals.Mutable
        local 3 #28+89: @checkers.javari.quals.Mutable
        local 4 #69+48: @checkers.javari.quals.Mutable
        local 5 #108+9: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #123+3: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly

    method getHeaderCount()I:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable

    method hasHeader()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable

package org.htmlparser.tags:
class TableTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getRows()[Lorg/htmlparser/tags/TableRow;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+126: @checkers.javari.quals.Mutable
        local 1 #5+121: @checkers.javari.quals.Mutable
        local 2 #19+98: @checkers.javari.quals.Mutable
        local 3 #28+89: @checkers.javari.quals.Mutable
        local 4 #69+48: @checkers.javari.quals.Mutable
        local 5 #108+9: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #123+3: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly

    method getRowCount()I:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable

    method getRow(I)Lorg/htmlparser/tags/TableRow;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+22: @checkers.javari.quals.Mutable
        local 1 #0+22:
        local 2 #5+17: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 3 #15+3: @checkers.javari.quals.ReadOnly
        local 3 #20+2: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+20: @checkers.javari.quals.Mutable

package org.htmlparser.tags:
class TextareaTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEnders: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEnders()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getValue()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

package org.htmlparser.tags:
class TitleTag:

    field mIds: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEnders: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field mEndTagEnders: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getIds()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEnders()[Ljava/lang/String;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getEndTagEnders()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getTitle()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+20: @checkers.javari.quals.ReadOnly

package org.htmlparser.util:
class ChainedException:

    field throwable: @checkers.javari.quals.ThisMutable

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method <init>(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly
        local 1 #0+6: @checkers.javari.quals.Mutable

    method <init>(Ljava/lang/Throwable;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method <init>(Ljava/lang/String;Ljava/lang/Throwable;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11: @checkers.javari.quals.Mutable
        local 2 #0+11: @checkers.javari.quals.Mutable

    method getMessageChain()[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+20: @checkers.javari.quals.Mutable
        local 1 #5+15: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #13+7: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.Mutable

    method getMessageList()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+105: @checkers.javari.quals.Mutable
        local 1 #8+97: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #41+36: @checkers.javari.quals.Mutable
        local 3 #46+31: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 4 #49+25:
        local 2 #85+18: @checkers.javari.quals.Mutable

    method getThrowable()Ljava/lang/Throwable;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method printStackTrace()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable

    method printStackTrace(Ljava/io/PrintStream;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+77: @checkers.javari.quals.Mutable
        local 1 #0+77: @checkers.javari.quals.Mutable

    method printStackTrace(Ljava/io/PrintWriter;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+77: @checkers.javari.quals.Mutable
        local 1 #0+77: @checkers.javari.quals.Mutable

package org.htmlparser.util:
class DefaultParserFeedback:

    field QUIET:

    field NORMAL:

    field DEBUG:

    field mMode:

    method <init>(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+48: @checkers.javari.quals.Mutable
        local 1 #0+48:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method info(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+30: @checkers.javari.quals.ReadOnly
        local 1 #0+30: @checkers.javari.quals.Mutable

    method warning(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+30: @checkers.javari.quals.ReadOnly
        local 1 #0+30: @checkers.javari.quals.Mutable

    method error(Ljava/lang/String;Lorg/htmlparser/util/ParserException;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+46: @checkers.javari.quals.ReadOnly
        local 1 #0+46: @checkers.javari.quals.Mutable
        local 2 #0+46: @checkers.javari.quals.Mutable

package org.htmlparser.util:
class EncodingChangeException:

    method <init>(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly
        local 1 #0+6: @checkers.javari.quals.Mutable

package org.htmlparser.util:
class IteratorImpl:

    field mLexer: @checkers.javari.quals.ThisMutable

    field mFeedback: @checkers.javari.quals.ReadOnly

    field mCursor: @checkers.javari.quals.ThisMutable

    method <init>(Lorg/htmlparser/lexer/Lexer;Lorg/htmlparser/util/ParserFeedback;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+34: @checkers.javari.quals.Mutable
        local 1 #0+34: @checkers.javari.quals.Mutable
        local 2 #0+34: @checkers.javari.quals.ReadOnly

    method hasMoreNodes()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+41: @checkers.javari.quals.Mutable
        local 1 #39+2:

    method nextNode()Lorg/htmlparser/Node;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+159: @checkers.javari.quals.Mutable
        local 4 #9+64: @checkers.javari.quals.Mutable
        local 1 #28+42: @checkers.javari.quals.Mutable
        local 2 #44+26: @checkers.javari.quals.ReadOnly
        local 3 #56+14: @checkers.javari.quals.Mutable
        local 5 #75+3: @checkers.javari.quals.ReadOnly
        local 5 #80+76: @checkers.javari.quals.Mutable
        local 6 #89+67: @checkers.javari.quals.Mutable
        local 7 #137+19: @checkers.javari.quals.Mutable
        local 4 #156+3: @checkers.javari.quals.PolyRead

package org.htmlparser.util:
class NodeIterator:

    method hasMoreNodes()Z:
        receiver: @checkers.javari.quals.Mutable

    method nextNode()Lorg/htmlparser/Node;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

package org.htmlparser.util:
class NodeList:

    field INITIAL_CAPACITY:

    field nodeData: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field size:

    field capacity:

    field capacityIncrement:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.Mutable

    method <init>(Lorg/htmlparser/Node;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method add(Lorg/htmlparser/Node;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+33: @checkers.javari.quals.Mutable
        local 1 #0+33: @checkers.javari.quals.Mutable

    method add(Lorg/htmlparser/util/NodeList;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+27: @checkers.javari.quals.Mutable
        local 1 #0+27: @checkers.javari.quals.Mutable
        local 2 #2+24:

    method prepend(Lorg/htmlparser/Node;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+50: @checkers.javari.quals.Mutable
        local 1 #0+50: @checkers.javari.quals.Mutable

    method adjustVectorCapacity()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+55: @checkers.javari.quals.Mutable
        local 1 #28+27: @checkers.javari.quals.QReadOnly
            inner-type 0: @checkers.javari.quals.Mutable

    method newNodeArrayFor(I)[Lorg/htmlparser/Node;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly
        local 1 #0+5:

    method size()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method elementAt(I)Lorg/htmlparser/Node;: @checkers.javari.quals.PolyRead
        parameter #0:
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+7: @checkers.javari.quals.PolyRead
        local 1 #0+7:

    method elements()Lorg/htmlparser/util/SimpleNodeIterator;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly

    method toNodeArray()[Lorg/htmlparser/Node;: @checkers.javari.quals.QReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+25: @checkers.javari.quals.Mutable
        local 1 #9+16: @checkers.javari.quals.QReadOnly
            inner-type 0: @checkers.javari.quals.Mutable

    method copyToNodeArray([Lorg/htmlparser/Node;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+15: @checkers.javari.quals.Mutable
        local 1 #0+15: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.Mutable

    method asString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+45: @checkers.javari.quals.Mutable
        local 1 #8+37: @checkers.javari.quals.Mutable
        local 2 #10+30:

    method toHtml()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+45: @checkers.javari.quals.Mutable
        local 1 #8+37: @checkers.javari.quals.Mutable
        local 2 #10+30:

    method remove(I)Lorg/htmlparser/Node;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+54: @checkers.javari.quals.Mutable
        local 1 #0+54:
        local 2 #7+47: @checkers.javari.quals.PolyRead

    method removeAll()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+34: @checkers.javari.quals.Mutable

    method contains(Lorg/htmlparser/Node;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+13: @checkers.javari.quals.Mutable
        local 1 #0+13: @checkers.javari.quals.Mutable

    method indexOf(Lorg/htmlparser/Node;)I:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+40: @checkers.javari.quals.Mutable
        local 1 #0+40: @checkers.javari.quals.Mutable
        local 2 #2+38:
        local 3 #4+34:

    method remove(Lorg/htmlparser/Node;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+23: @checkers.javari.quals.Mutable
        local 1 #0+23: @checkers.javari.quals.Mutable
        local 3 #2+21:
        local 2 #10+13:

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+40: @checkers.javari.quals.Mutable
        local 1 #8+32: @checkers.javari.quals.Mutable
        local 2 #10+25:

    method extractAllNodesThatMatch(Lorg/htmlparser/NodeFilter;)Lorg/htmlparser/util/NodeList;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable
        local 1 #0+7: @checkers.javari.quals.Mutable

    method extractAllNodesThatMatch(Lorg/htmlparser/NodeFilter;Z)Lorg/htmlparser/util/NodeList;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+83: @checkers.javari.quals.Mutable
        local 1 #0+83: @checkers.javari.quals.Mutable
        local 2 #0+83:
        local 5 #9+74: @checkers.javari.quals.Mutable
        local 6 #12+68:
        local 3 #23+48: @checkers.javari.quals.Mutable
        local 4 #51+17: @checkers.javari.quals.Mutable

    method keepAllNodesThatMatch(Lorg/htmlparser/NodeFilter;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable
        local 1 #0+7: @checkers.javari.quals.Mutable

    method keepAllNodesThatMatch(Lorg/htmlparser/NodeFilter;Z)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+71: @checkers.javari.quals.Mutable
        local 1 #0+71: @checkers.javari.quals.Mutable
        local 2 #0+71:
        local 5 #3+67:
        local 3 #14+47: @checkers.javari.quals.Mutable
        local 4 #46+12: @checkers.javari.quals.Mutable

    method visitAllNodesWith(Lorg/htmlparser/visitors/NodeVisitor;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+37: @checkers.javari.quals.Mutable
        local 1 #0+37: @checkers.javari.quals.ReadOnly
        local 3 #6+26:

    method access$0(Lorg/htmlparser/util/NodeList;)I:
        parameter #0: @checkers.javari.quals.ReadOnly

    method access$1(Lorg/htmlparser/util/NodeList;)[Lorg/htmlparser/Node;: @checkers.javari.quals.PolyRead
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.PolyRead

package org.htmlparser.util:
class NodeList$1:

    field count:

    field this$0: @checkers.javari.quals.ReadOnly

    method <init>(Lorg/htmlparser/util/NodeList;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+15: @checkers.javari.quals.Mutable

    method hasMoreNodes()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+18: @checkers.javari.quals.ReadOnly

    method nextNode()Lorg/htmlparser/Node;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+61: @checkers.javari.quals.Mutable

package org.htmlparser.util:
class ParserException:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method <init>(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly
        local 1 #0+6: @checkers.javari.quals.Mutable

    method <init>(Ljava/lang/Throwable;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly
        local 1 #0+6: @checkers.javari.quals.Mutable

    method <init>(Ljava/lang/String;Ljava/lang/Throwable;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly
        local 1 #0+7: @checkers.javari.quals.Mutable
        local 2 #0+7: @checkers.javari.quals.Mutable

package org.htmlparser.util:
class ParserFeedback:

    method info(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly

    method warning(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly

    method error(Ljava/lang/String;Lorg/htmlparser/util/ParserException;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly

package org.htmlparser.util:
class ParserUtils:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method removeChars(Ljava/lang/String;C)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        local 0 #0+49: @checkers.javari.quals.Mutable
        local 1 #0+49:
        local 2 #8+41: @checkers.javari.quals.Mutable
        local 4 #11+33:
        local 3 #21+14:

    method removeEscapeCharacters(Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+23: @checkers.javari.quals.Mutable

    method removeTrailingBlanks(Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+43: @checkers.javari.quals.Mutable
        local 1 #3+40:

    method findTypeInNode(Lorg/htmlparser/Node;Ljava/lang/Class;)[Lorg/htmlparser/Node;: @checkers.javari.quals.QReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+30: @checkers.javari.quals.Mutable
        local 1 #0+30: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 3 #8+22: @checkers.javari.quals.Mutable
        local 2 #17+13: @checkers.javari.quals.Mutable

    method splitButDigits(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+276: @checkers.javari.quals.Mutable
        local 1 #0+276: @checkers.javari.quals.Mutable
        local 2 #8+268: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 3 #10+266:
        local 4 #19+257: @checkers.javari.quals.Mutable
        local 5 #22+254:
        local 6 #25+251:
        local 7 #28+145:
        local 8 #37+33:
        local 7 #226+50: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 8 #235+41: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.Mutable
        local 9 #238+35:

    method trimButDigits(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+97: @checkers.javari.quals.Mutable
        local 1 #0+97: @checkers.javari.quals.Mutable
        local 2 #8+89: @checkers.javari.quals.Mutable
        local 3 #10+87:
        local 4 #13+79:
        local 5 #21+32:

    method trimButDigitsBeginEnd(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+207: @checkers.javari.quals.Mutable
        local 1 #0+207: @checkers.javari.quals.Mutable
        local 2 #8+199: @checkers.javari.quals.ReadOnly
        local 3 #10+197:
        local 4 #18+189:
        local 5 #21+186:
        local 6 #24+183:
        local 7 #27+82:
        local 8 #36+33:
        local 7 #116+79:
        local 8 #125+33:

    method splitSpaces(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+288: @checkers.javari.quals.Mutable
        local 1 #0+288: @checkers.javari.quals.Mutable
        local 2 #8+280: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 3 #10+278:
        local 4 #19+269: @checkers.javari.quals.Mutable
        local 5 #22+266:
        local 6 #25+263:
        local 7 #28+157:
        local 8 #37+33:
        local 7 #238+50: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 8 #247+41: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.Mutable
        local 9 #250+35:

    method trimSpaces(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+109: @checkers.javari.quals.Mutable
        local 1 #0+109: @checkers.javari.quals.Mutable
        local 2 #8+101: @checkers.javari.quals.Mutable
        local 3 #10+99:
        local 4 #13+91:
        local 5 #21+32:

    method trimSpacesBeginEnd(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+231: @checkers.javari.quals.Mutable
        local 1 #0+231: @checkers.javari.quals.Mutable
        local 2 #8+223: @checkers.javari.quals.ReadOnly
        local 3 #10+221:
        local 4 #18+213:
        local 5 #21+210:
        local 6 #24+207:
        local 7 #27+94:
        local 8 #36+33:
        local 7 #128+91:
        local 8 #137+33:

    method splitButChars(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+264: @checkers.javari.quals.Mutable
        local 1 #0+264: @checkers.javari.quals.Mutable
        local 2 #8+256: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 3 #10+254:
        local 4 #19+245: @checkers.javari.quals.Mutable
        local 5 #22+242:
        local 6 #25+239:
        local 7 #28+133:
        local 8 #37+33:
        local 7 #214+50: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 8 #223+41: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.Mutable
        local 9 #226+35:

    method trimButChars(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+85: @checkers.javari.quals.Mutable
        local 1 #0+85: @checkers.javari.quals.Mutable
        local 2 #8+77: @checkers.javari.quals.Mutable
        local 3 #10+75:
        local 4 #13+67:
        local 5 #21+32:

    method trimButCharsBeginEnd(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+183: @checkers.javari.quals.Mutable
        local 1 #0+183: @checkers.javari.quals.Mutable
        local 2 #8+175: @checkers.javari.quals.ReadOnly
        local 3 #10+173:
        local 4 #18+165:
        local 5 #21+162:
        local 6 #24+159:
        local 7 #27+70:
        local 8 #36+33:
        local 7 #104+67:
        local 8 #113+33:

    method splitChars(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+264: @checkers.javari.quals.Mutable
        local 1 #0+264: @checkers.javari.quals.Mutable
        local 2 #8+256: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 3 #10+254:
        local 4 #19+245: @checkers.javari.quals.Mutable
        local 5 #22+242:
        local 6 #25+239:
        local 7 #28+133:
        local 8 #37+33:
        local 7 #214+50: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 8 #223+41: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.Mutable
        local 9 #226+35:

    method trimChars(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+85: @checkers.javari.quals.Mutable
        local 1 #0+85: @checkers.javari.quals.Mutable
        local 2 #8+77: @checkers.javari.quals.Mutable
        local 3 #10+75:
        local 4 #13+67:
        local 5 #21+32:

    method trimCharsBeginEnd(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+183: @checkers.javari.quals.Mutable
        local 1 #0+183: @checkers.javari.quals.Mutable
        local 2 #8+175: @checkers.javari.quals.ReadOnly
        local 3 #10+173:
        local 4 #18+165:
        local 5 #21+162:
        local 6 #24+159:
        local 7 #27+70:
        local 8 #36+33:
        local 7 #104+67:
        local 8 #113+33:

    method splitTags(Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;: @checkers.javari.quals.QReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method splitTags(Ljava/lang/String;[Ljava/lang/String;ZZ)[Ljava/lang/String;: @checkers.javari.quals.QReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #2:
        parameter #3:
        local 0 #0+484: @checkers.javari.quals.Mutable
        local 1 #0+484: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #0+484:
        local 3 #0+484:
        local 4 #9+475: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 5 #12+472:
        local 6 #21+463: @checkers.javari.quals.ReadOnly
        local 7 #31+453: @checkers.javari.quals.Mutable
        local 8 #37+447: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 9 #48+436: @checkers.javari.quals.Mutable
        local 10 #51+430:
        local 11 #66+405: @checkers.javari.quals.ReadOnly
        local 12 #69+128:
        local 13 #84+100: @checkers.javari.quals.ReadOnly
        local 14 #91+93: @checkers.javari.quals.ReadOnly
        local 15 #98+86:
        local 16 #105+79:
        local 17 #114+70:
        local 18 #123+61:
        local 12 #206+149:
        local 13 #220+119:
        local 12 #364+107: @checkers.javari.quals.Mutable
        local 13 #376+95: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 14 #389+47:

    method splitTags(Ljava/lang/String;Ljava/lang/Class;)[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+15: @checkers.javari.quals.Mutable
        local 1 #0+15: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method splitTags(Ljava/lang/String;Ljava/lang/Class;ZZ)[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #2:
        parameter #3:
        local 0 #0+15: @checkers.javari.quals.Mutable
        local 1 #0+15: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #0+15:
        local 3 #0+15:

    method splitTags(Ljava/lang/String;Lorg/htmlparser/NodeFilter;)[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8: @checkers.javari.quals.Mutable

    method splitTags(Ljava/lang/String;Lorg/htmlparser/NodeFilter;ZZ)[Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2:
        parameter #3:
        local 0 #0+391: @checkers.javari.quals.Mutable
        local 1 #0+391: @checkers.javari.quals.Mutable
        local 2 #0+391:
        local 3 #0+391:
        local 4 #9+382: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 5 #12+379:
        local 6 #21+370: @checkers.javari.quals.ReadOnly
        local 7 #32+359: @checkers.javari.quals.Mutable
        local 8 #40+351: @checkers.javari.quals.ReadOnly
        local 9 #43+128:
        local 10 #58+100: @checkers.javari.quals.ReadOnly
        local 11 #65+93: @checkers.javari.quals.ReadOnly
        local 12 #72+86:
        local 13 #79+79:
        local 14 #88+70:
        local 15 #97+61:
        local 9 #180+147:
        local 10 #194+117:
        local 9 #339+52: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 10 #349+42: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.Mutable
        local 11 #352+36:

    method trimAllTags(Ljava/lang/String;Z)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        local 0 #0+170: @checkers.javari.quals.Mutable
        local 1 #0+170:
        local 2 #8+162: @checkers.javari.quals.Mutable
        local 3 #98+67:
        local 4 #101+64:

    method trimTags(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method trimTags(Ljava/lang/String;[Ljava/lang/String;ZZ)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #2:
        parameter #3:
        local 0 #0+325: @checkers.javari.quals.Mutable
        local 1 #0+325: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #0+325:
        local 3 #0+325:
        local 4 #9+316: @checkers.javari.quals.Mutable
        local 5 #19+306: @checkers.javari.quals.Mutable
        local 6 #30+295: @checkers.javari.quals.Mutable
        local 7 #33+286:
        local 8 #57+252: @checkers.javari.quals.ReadOnly
        local 9 #60+128:
        local 10 #75+100: @checkers.javari.quals.ReadOnly
        local 11 #82+93: @checkers.javari.quals.ReadOnly
        local 12 #89+86:
        local 13 #96+79:
        local 14 #105+70:
        local 15 #114+61:
        local 9 #197+89:
        local 10 #211+59:

    method trimTags(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+15: @checkers.javari.quals.Mutable
        local 1 #0+15: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method trimTags(Ljava/lang/String;Ljava/lang/Class;ZZ)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #2:
        parameter #3:
        local 0 #0+15: @checkers.javari.quals.Mutable
        local 1 #0+15: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #0+15:
        local 3 #0+15:

    method trimTags(Ljava/lang/String;Lorg/htmlparser/NodeFilter;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8: @checkers.javari.quals.Mutable

    method trimTags(Ljava/lang/String;Lorg/htmlparser/NodeFilter;ZZ)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2:
        parameter #3:
        local 0 #0+261: @checkers.javari.quals.Mutable
        local 1 #0+261: @checkers.javari.quals.Mutable
        local 2 #0+261:
        local 3 #0+261:
        local 4 #9+252: @checkers.javari.quals.Mutable
        local 5 #20+241: @checkers.javari.quals.Mutable
        local 6 #28+233: @checkers.javari.quals.ReadOnly
        local 7 #31+128:
        local 8 #46+100: @checkers.javari.quals.ReadOnly
        local 9 #53+93: @checkers.javari.quals.ReadOnly
        local 10 #60+86:
        local 11 #67+79:
        local 12 #76+70:
        local 13 #85+61:
        local 7 #168+87:
        local 8 #182+57:

    method createParserParsingAnInputString(Ljava/lang/String;)Lorg/htmlparser/Parser;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+37: @checkers.javari.quals.Mutable
        local 1 #8+29: @checkers.javari.quals.Mutable
        local 2 #16+21: @checkers.javari.quals.Mutable
        local 3 #25+12: @checkers.javari.quals.Mutable

    method getLinks(Ljava/lang/String;Ljava/lang/String;Z)Lorg/htmlparser/util/NodeList;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2:
        local 0 #0+190: @checkers.javari.quals.Mutable
        local 1 #0+190: @checkers.javari.quals.Mutable
        local 2 #0+190:
        local 3 #8+182: @checkers.javari.quals.Mutable
        local 4 #18+172: @checkers.javari.quals.Mutable
        local 5 #27+163: @checkers.javari.quals.Mutable
        local 6 #47+140:
        local 7 #62+112: @checkers.javari.quals.ReadOnly
        local 8 #69+105: @checkers.javari.quals.ReadOnly
        local 9 #76+98:
        local 10 #85+89:
        local 11 #88+86:
        local 12 #103+58: @checkers.javari.quals.ReadOnly
        local 13 #110+51: @checkers.javari.quals.ReadOnly
        local 14 #117+44:
        local 15 #126+35:

    method getLinks(Ljava/lang/String;Lorg/htmlparser/NodeFilter;Z)Lorg/htmlparser/util/NodeList;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2:
        local 0 #0+179: @checkers.javari.quals.Mutable
        local 1 #0+179: @checkers.javari.quals.Mutable
        local 2 #0+179:
        local 3 #8+171: @checkers.javari.quals.Mutable
        local 4 #17+162: @checkers.javari.quals.Mutable
        local 5 #36+140:
        local 6 #51+112: @checkers.javari.quals.ReadOnly
        local 7 #58+105: @checkers.javari.quals.ReadOnly
        local 8 #65+98:
        local 9 #74+89:
        local 10 #77+86:
        local 11 #92+58: @checkers.javari.quals.ReadOnly
        local 12 #99+51: @checkers.javari.quals.ReadOnly
        local 13 #106+44:
        local 14 #115+35:

    method createDummyString(CI)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0:
        parameter #1:
        local 0 #0+36:
        local 1 #0+36:
        local 2 #8+28: @checkers.javari.quals.Mutable
        local 3 #10+17:

    method modifyDummyString(Ljava/lang/String;II)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        local 0 #0+52: @checkers.javari.quals.Mutable
        local 1 #0+52:
        local 2 #0+52:
        local 3 #9+43: @checkers.javari.quals.Mutable

package org.htmlparser.util:
class SimpleNodeIterator:

    method hasMoreNodes()Z:
        receiver: @checkers.javari.quals.ReadOnly

    method nextNode()Lorg/htmlparser/Node;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

package org.htmlparser.util:
class SpecialHashtable:

    field TAGNAME: @checkers.javari.quals.ReadOnly

    field NULLVALUE: @checkers.javari.quals.ReadOnly

    field NOTHING: @checkers.javari.quals.ReadOnly

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method <init>(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly
        local 1 #0+6:

    method <init>(IF)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly
        local 1 #0+7:
        local 2 #0+7:

    method get(Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+28: @checkers.javari.quals.Mutable
        local 1 #0+28: @checkers.javari.quals.Mutable
        local 2 #6+22: @checkers.javari.quals.ReadOnly

    method getRaw(Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

package org.htmlparser.util.sort:
class Ordered:

    method compare(Ljava/lang/Object;)I:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

package org.htmlparser.util.sort:
class Sort:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method QuickSort(Ljava/util/Vector;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+12: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method QuickSort(Ljava/util/Vector;II)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1:
        parameter #2:
        local 0 #0+134: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #0+134:
        local 2 #0+134:
        local 3 #2+132:
        local 4 #5+129:
        local 5 #24+109: @checkers.javari.quals.ReadOnly

    method swap(Ljava/util/Vector;II)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1:
        parameter #2:
        local 0 #0+23: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #0+23:
        local 2 #0+23:
        local 3 #6+17: @checkers.javari.quals.ReadOnly

    method QuickSort([Lorg/htmlparser/util/sort/Ordered;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable

    method QuickSort([Lorg/htmlparser/util/sort/Ordered;II)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        local 0 #0+119: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 1 #0+119:
        local 2 #0+119:
        local 3 #2+117:
        local 4 #5+114:
        local 5 #19+99: @checkers.javari.quals.ReadOnly

    method swap([Ljava/lang/Object;II)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        local 0 #0+15: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 1 #0+15:
        local 2 #0+15:
        local 3 #4+11: @checkers.javari.quals.Mutable

    method QuickSort([Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable

    method QuickSort([Ljava/lang/String;II)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        local 0 #0+115: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 1 #0+115:
        local 2 #0+115:
        local 3 #2+113:
        local 4 #5+110:
        local 5 #19+95: @checkers.javari.quals.Mutable

    method QuickSort(Lorg/htmlparser/util/sort/Sortable;II)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        local 0 #0+147: @checkers.javari.quals.Mutable
        local 1 #0+147:
        local 2 #0+147:
        local 3 #2+145:
        local 4 #5+142:
        local 5 #24+122: @checkers.javari.quals.ReadOnly
        local 6 #27+119: @checkers.javari.quals.Mutable

    method QuickSort(Lorg/htmlparser/util/sort/Sortable;)V:
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+17: @checkers.javari.quals.Mutable

    method QuickSort(Ljava/util/Hashtable;)[Ljava/lang/Object;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
            inner-type 1: @checkers.javari.quals.ReadOnly
        local 0 #0+80: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
            inner-type 1: @checkers.javari.quals.ReadOnly
        local 3 #8+72: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 1 #13+67: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #15+65:
        local 4 #18+39:

    method bsearch(Lorg/htmlparser/util/sort/Sortable;Lorg/htmlparser/util/sort/Ordered;II)I:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2:
        parameter #3:
        local 0 #0+139: @checkers.javari.quals.ReadOnly
        local 1 #0+139: @checkers.javari.quals.ReadOnly
        local 2 #0+139:
        local 3 #0+139:
        local 9 #3+136:
        local 4 #10+129:
        local 6 #13+126: @checkers.javari.quals.Mutable
        local 7 #22+94:
        local 5 #42+74:
        local 8 #64+52:

    method bsearch(Lorg/htmlparser/util/sort/Sortable;Lorg/htmlparser/util/sort/Ordered;)I:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        local 0 #0+18: @checkers.javari.quals.ReadOnly
        local 1 #0+18: @checkers.javari.quals.ReadOnly

    method bsearch(Ljava/util/Vector;Lorg/htmlparser/util/sort/Ordered;II)I:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2:
        parameter #3:
        local 0 #0+128: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #0+128: @checkers.javari.quals.ReadOnly
        local 2 #0+128:
        local 3 #0+128:
        local 8 #3+125:
        local 4 #10+118:
        local 6 #19+86:
        local 5 #39+66:
        local 7 #53+52:

    method bsearch(Ljava/util/Vector;Lorg/htmlparser/util/sort/Ordered;)I:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        local 0 #0+13: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #0+13: @checkers.javari.quals.ReadOnly

    method bsearch([Lorg/htmlparser/util/sort/Ordered;Lorg/htmlparser/util/sort/Ordered;II)I:
        parameter #0: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2:
        parameter #3:
        local 0 #0+126: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #0+126: @checkers.javari.quals.ReadOnly
        local 2 #0+126:
        local 3 #0+126:
        local 8 #3+123:
        local 4 #10+116:
        local 6 #19+84:
        local 5 #39+64:
        local 7 #51+52:

    method bsearch([Lorg/htmlparser/util/sort/Ordered;Lorg/htmlparser/util/sort/Ordered;)I:
        parameter #0: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly

package org.htmlparser.util.sort:
class Sortable:

    method first()I:
        receiver: @checkers.javari.quals.ReadOnly

    method last()I:
        receiver: @checkers.javari.quals.ReadOnly

    method fetch(ILorg/htmlparser/util/sort/Ordered;)Lorg/htmlparser/util/sort/Ordered;: @checkers.javari.quals.Mutable
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly

    method swap(II)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable

package org.htmlparser.visitors:
class NodeVisitor:

    field mRecurseChildren:

    field mRecurseSelf:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method <init>(Z)V:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly
        local 1 #0+7:

    method <init>(ZZ)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+15: @checkers.javari.quals.Mutable
        local 1 #0+15:
        local 2 #0+15:

    method beginParsing()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly

    method visitTag(Lorg/htmlparser/Tag;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly
        local 1 #0+1: @checkers.javari.quals.ReadOnly

    method visitEndTag(Lorg/htmlparser/Tag;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly
        local 1 #0+1: @checkers.javari.quals.ReadOnly

    method visitStringNode(Lorg/htmlparser/Text;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly
        local 1 #0+1: @checkers.javari.quals.ReadOnly

    method visitRemarkNode(Lorg/htmlparser/Remark;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly
        local 1 #0+1: @checkers.javari.quals.ReadOnly

    method finishedParsing()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly

    method shouldRecurseChildren()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method shouldRecurseSelf()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

