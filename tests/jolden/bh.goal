package checkers.javari.quals:
annotation @ReadOnly:

package checkers.javari.quals:
annotation @Mutable:

package checkers.javari.quals:
annotation @ThisMutable:

package :
class BH:

    field nbody:

    field nsteps:

    field printMsgs:

    field printResults:

    field DTIME:

    field TSTOP:

    method <init>()V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method main([Ljava/lang/String;)V:
        return:
        parameter #0: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+443: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #8+435: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #10+77: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 3 #13+74:
        local 4 #16+71:
        local 5 #28+53: @checkers.javari.quals.ReadOnly
        local 6 #37+44: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 7 #41+40: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 8 #46+35:
        local 9 #49+32:
        local 10 #63+12: @checkers.javari.quals.ReadOnly
        local 2 #147+296:
        local 4 #156+287: @checkers.javari.quals.Mutable
        local 5 #169+274:
        local 7 #188+255:
        local 9 #191+252:
        local 11 #194+249:
        local 12 #245+198:
        local 14 #254+74:
        local 15 #261+67: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 16 #283+42: @checkers.javari.quals.ReadOnly

    method myRand(D)D:
        return:
        parameter #0:
        local 0 #0+25:
        local 2 #8+17:

    method xRand(DDD)D:
        return:
        parameter #0:
        parameter #1:
        parameter #2:
        local 0 #0+17:
        local 2 #0+17:
        local 4 #0+17:
        local 6 #14+3:

    method parseCmdLine([Ljava/lang/String;)V:
        return:
        parameter #0: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+177: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #2+175:
        local 2 #26+141: @checkers.javari.quals.ReadOnly

    method usage()V:
        return:

    method <clinit>()V:
        return:

package :
class Body:

    field vel: @checkers.javari.quals.ThisMutable

    field acc: @checkers.javari.quals.ReadOnly

    field newAcc: @checkers.javari.quals.ReadOnly

    field phi:

    field next: @checkers.javari.quals.ReadOnly

    field procNext: @checkers.javari.quals.ReadOnly

    method <init>()V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+53: @checkers.javari.quals.Mutable

    method setNext(LBody;)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.ReadOnly

    method getNext()LBody;:
        return: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setProcNext(LBody;)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.ReadOnly

    method getProcNext()LBody;:
        return: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method expandBox(LTree;I)V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        local 0 #0+185: @checkers.javari.quals.ReadOnly
        local 1 #0+185: @checkers.javari.quals.Mutable
        local 2 #0+185:
        local 3 #8+177: @checkers.javari.quals.Mutable
        local 4 #15+170:
        local 5 #26+155:
        local 7 #43+56:
        local 8 #79+14:
        local 7 #123+58: @checkers.javari.quals.ReadOnly
        local 8 #147+34:
        local 9 #156+25: @checkers.javari.quals.Mutable

    method icTest(LTree;)Z:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        local 0 #0+139: @checkers.javari.quals.ReadOnly
        local 1 #0+139: @checkers.javari.quals.ReadOnly
        local 2 #9+130:
        local 4 #19+120:
        local 6 #29+110:
        local 8 #32+107:
        local 9 #49+90:

    method loadTree(LBody;LMathVector;ILTree;)LNode;:
        return: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2:
        parameter #3: @checkers.javari.quals.ReadOnly
        local 0 #0+84: @checkers.javari.quals.Mutable
        local 1 #0+84: @checkers.javari.quals.Mutable
        local 2 #0+84: @checkers.javari.quals.ReadOnly
        local 3 #0+84:
        local 4 #0+84: @checkers.javari.quals.ReadOnly
        local 5 #9+75: @checkers.javari.quals.Mutable
        local 6 #18+66:
        local 7 #44+40: @checkers.javari.quals.Mutable

    method hackcofm()D:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method elements()Ljava/util/Enumeration;:
        return: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly

    method elementsRev()Ljava/util/Enumeration;:
        return: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly

    method subindex(LTree;I)I:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1:
        local 0 #0+167: @checkers.javari.quals.ReadOnly
        local 1 #0+167: @checkers.javari.quals.ReadOnly
        local 2 #0+167:
        local 3 #8+159: @checkers.javari.quals.Mutable
        local 4 #32+135:
        local 6 #125+42:
        local 7 #128+36:

    method hackGravity(DLNode;)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
        parameter #1: @checkers.javari.quals.ReadOnly
        local 0 #0+57: @checkers.javari.quals.Mutable
        local 1 #0+57:
        local 3 #0+57: @checkers.javari.quals.ReadOnly
        local 4 #12+45: @checkers.javari.quals.ReadOnly
        local 5 #27+30: @checkers.javari.quals.Mutable

    method walkSubTree(DLNode$HG;)LNode$HG;:
        return: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+16: @checkers.javari.quals.ReadOnly
        local 1 #0+16:
        local 3 #0+16: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;:
        return: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+23: @checkers.javari.quals.ReadOnly

    method access$000(LBody;)LBody;:
        return: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method access$100(LBody;)LBody;:
        return: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

package :
class Body$1Enumerate:

    field current: @checkers.javari.quals.ReadOnly

    field this$0: @checkers.javari.quals.ReadOnly

    method <init>(LBody;)V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        local 0 #0+15: @checkers.javari.quals.Mutable

    method hasMoreElements()Z:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+13: @checkers.javari.quals.ReadOnly

    method nextElement()Ljava/lang/Object;:
        return: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+18: @checkers.javari.quals.Mutable
        local 1 #5+13: @checkers.javari.quals.ReadOnly

package :
class Body$2Enumerate:

    field current: @checkers.javari.quals.ReadOnly

    field this$0: @checkers.javari.quals.ReadOnly

    method <init>(LBody;)V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        local 0 #0+15: @checkers.javari.quals.Mutable

    method hasMoreElements()Z:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+13: @checkers.javari.quals.ReadOnly

    method nextElement()Ljava/lang/Object;:
        return: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+18: @checkers.javari.quals.Mutable
        local 1 #5+13: @checkers.javari.quals.ReadOnly

package :
class Cell:

    field NSUB:

    field subp: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field next: @checkers.javari.quals.ReadOnly

    method <init>()V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+19: @checkers.javari.quals.Mutable

    method loadTree(LBody;LMathVector;ILTree;)LNode;:
        return: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2:
        parameter #3: @checkers.javari.quals.ReadOnly
        local 0 #0+53: @checkers.javari.quals.Mutable
        local 1 #0+53: @checkers.javari.quals.Mutable
        local 2 #0+53: @checkers.javari.quals.ReadOnly
        local 3 #0+53:
        local 4 #0+53: @checkers.javari.quals.ReadOnly
        local 5 #7+46:
        local 6 #16+37: @checkers.javari.quals.Mutable

    method hackcofm()D:
        return:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+102: @checkers.javari.quals.Mutable
        local 1 #2+100:
        local 3 #10+92: @checkers.javari.quals.Mutable
        local 4 #19+83: @checkers.javari.quals.Mutable
        local 5 #22+57:
        local 6 #38+35: @checkers.javari.quals.Mutable
        local 7 #50+23:

    method walkSubTree(DLNode$HG;)LNode$HG;:
        return: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+62: @checkers.javari.quals.ReadOnly
        local 1 #0+62:
        local 3 #0+62: @checkers.javari.quals.Mutable
        local 4 #12+39:
        local 5 #28+17: @checkers.javari.quals.ReadOnly

    method subdivp(DLNode$HG;)Z:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1: @checkers.javari.quals.ReadOnly
        local 0 #0+42: @checkers.javari.quals.ReadOnly
        local 1 #0+42:
        local 3 #0+42: @checkers.javari.quals.ReadOnly
        local 4 #9+33: @checkers.javari.quals.Mutable
        local 5 #29+13:

    method toString()Ljava/lang/String;:
        return: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+23: @checkers.javari.quals.ReadOnly

package :
class MathVector:

    field NDIM:

    field data:
        inner-type 0: @checkers.javari.quals.ThisMutable

    method <init>()V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+32: @checkers.javari.quals.Mutable
        local 1 #13+18:

    method clone()Ljava/lang/Object;:
        return: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+51: @checkers.javari.quals.ReadOnly
        local 1 #8+34: @checkers.javari.quals.Mutable
        local 2 #17+23:
        local 1 #43+8: @checkers.javari.quals.ReadOnly

    method value(I)D:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0:
        local 0 #0+7: @checkers.javari.quals.ReadOnly
        local 1 #0+7:

    method value(ID)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
        parameter #1:
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8:
        local 2 #0+8:

    method unit(I)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
        local 0 #0+30: @checkers.javari.quals.Mutable
        local 1 #0+30:
        local 2 #2+27:

    method addition(LMathVector;)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        local 0 #0+29: @checkers.javari.quals.Mutable
        local 1 #0+29: @checkers.javari.quals.ReadOnly
        local 2 #2+26:

    method subtraction(LMathVector;)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        local 0 #0+29: @checkers.javari.quals.Mutable
        local 1 #0+29: @checkers.javari.quals.ReadOnly
        local 2 #2+26:

    method subtraction(LMathVector;LMathVector;)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        local 0 #0+33: @checkers.javari.quals.Mutable
        local 1 #0+33: @checkers.javari.quals.ReadOnly
        local 2 #0+33: @checkers.javari.quals.ReadOnly
        local 3 #2+30:

    method multScalar(D)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
        local 0 #0+24: @checkers.javari.quals.Mutable
        local 1 #0+24:
        local 3 #2+21:

    method multScalar(LMathVector;D)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1:
        local 0 #0+32: @checkers.javari.quals.Mutable
        local 1 #0+32: @checkers.javari.quals.ReadOnly
        local 2 #0+32:
        local 4 #3+28:

    method divScalar(D)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
        local 0 #0+24: @checkers.javari.quals.Mutable
        local 1 #0+24:
        local 3 #2+21:

    method dotProduct()D:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+33: @checkers.javari.quals.ReadOnly
        local 1 #2+31:
        local 3 #4+27:

    method absolute()D:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+36: @checkers.javari.quals.ReadOnly
        local 1 #2+34:
        local 3 #4+27:

    method distance(LMathVector;)D:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        local 0 #0+56: @checkers.javari.quals.ReadOnly
        local 1 #0+56: @checkers.javari.quals.ReadOnly
        local 2 #2+54:
        local 4 #5+46:

    method crossProduct(LMathVector;LMathVector;)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        local 0 #0+100: @checkers.javari.quals.Mutable
        local 1 #0+100: @checkers.javari.quals.ReadOnly
        local 2 #0+100: @checkers.javari.quals.ReadOnly

    method incrementalAdd(LMathVector;)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        local 0 #0+29: @checkers.javari.quals.Mutable
        local 1 #0+29: @checkers.javari.quals.ReadOnly
        local 2 #2+26:

    method incrementalSub(LMathVector;)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        local 0 #0+29: @checkers.javari.quals.Mutable
        local 1 #0+29: @checkers.javari.quals.ReadOnly
        local 2 #2+26:

    method incrementalMultScalar(D)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
        local 0 #0+24: @checkers.javari.quals.Mutable
        local 1 #0+24:
        local 3 #2+21:

    method incrementalDivScalar(D)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
        local 0 #0+24: @checkers.javari.quals.Mutable
        local 1 #0+24:
        local 3 #2+21:

    method addScalar(LMathVector;D)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1:
        local 0 #0+32: @checkers.javari.quals.Mutable
        local 1 #0+32: @checkers.javari.quals.ReadOnly
        local 2 #0+32:
        local 4 #3+28:

    method toString()Ljava/lang/String;:
        return: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+55: @checkers.javari.quals.ReadOnly
        local 1 #8+47: @checkers.javari.quals.Mutable
        local 2 #10+40:

package :
class Node:

    field mass:

    field pos: @checkers.javari.quals.ThisMutable

    field IMAX:

    field EPS:

    method <init>()V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+21: @checkers.javari.quals.Mutable

    method loadTree(LBody;LMathVector;ILTree;)LNode;:
        return: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2:
        parameter #3: @checkers.javari.quals.ReadOnly

    method hackcofm()D:
        return:
        receiver: @checkers.javari.quals.Mutable

    method walkSubTree(DLNode$HG;)LNode$HG;:
        return: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable

    method oldSubindex(LMathVector;I)I:
        return:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1:
        local 0 #0+37: @checkers.javari.quals.ReadOnly
        local 1 #0+37:
        local 2 #2+35:
        local 3 #4+31:

    method toString()Ljava/lang/String;:
        return: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+30: @checkers.javari.quals.ReadOnly

    method gravSub(LNode$HG;)LNode$HG;:
        return: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+77: @checkers.javari.quals.ReadOnly
        local 1 #0+77: @checkers.javari.quals.Mutable
        local 2 #8+69: @checkers.javari.quals.Mutable
        local 3 #29+48:
        local 5 #35+42:
        local 7 #44+33:
        local 9 #61+16:

package :
class Node$HG:

    field pskip: @checkers.javari.quals.ReadOnly

    field pos0: @checkers.javari.quals.ReadOnly

    field phi0:

    field acc0: @checkers.javari.quals.ThisMutable

    field this$0: @checkers.javari.quals.ReadOnly

    method <init>(LNode;LBody;LMathVector;)V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2: @checkers.javari.quals.ReadOnly
        local 0 #0+42: @checkers.javari.quals.Mutable
        local 2 #0+42: @checkers.javari.quals.ReadOnly
        local 3 #0+42: @checkers.javari.quals.ReadOnly

package :
class Tree:

    field rmin: @checkers.javari.quals.ThisMutable

    field rsize:

    field root: @checkers.javari.quals.ThisMutable

    field bodyTab: @checkers.javari.quals.ReadOnly

    field bodyTabRev: @checkers.javari.quals.ReadOnly

    method <init>()V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+71: @checkers.javari.quals.Mutable

    method bodies()Ljava/util/Enumeration;:
        return: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

    method bodiesRev()Ljava/util/Enumeration;:
        return: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

    method createTestData(I)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
        local 0 #0+471: @checkers.javari.quals.Mutable
        local 1 #0+471:
        local 2 #8+463: @checkers.javari.quals.Mutable
        local 3 #16+455: @checkers.javari.quals.Mutable
        local 4 #25+446: @checkers.javari.quals.Mutable
        local 5 #29+442: @checkers.javari.quals.Mutable
        local 6 #34+437:
        local 8 #43+428:
        local 10 #48+423:
        local 12 #51+320:
        local 13 #66+299: @checkers.javari.quals.Mutable
        local 14 #104+261:
        local 16 #125+240:
        local 18 #130+235:
        local 20 #133+45:
        local 20 #203+162:
        local 22 #221+144:
        local 24 #271+94:
        local 26 #278+87:
        local 30 #281+38:
        local 28 #329+36:
        local 30 #346+19:
        local 12 #410+54: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 13 #432+29: @checkers.javari.quals.Mutable

    method stepSystem(I)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
        local 0 #0+61: @checkers.javari.quals.Mutable
        local 1 #0+61:
        local 2 #18+34: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #37+12: @checkers.javari.quals.Mutable

    method makeTree(I)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
        local 0 #0+93: @checkers.javari.quals.Mutable
        local 1 #0+93:
        local 2 #5+79: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #24+57: @checkers.javari.quals.Mutable
        local 4 #49+32: @checkers.javari.quals.ReadOnly

    method intcoord(LMathVector;)LMathVector;:
        return: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        local 0 #0+160: @checkers.javari.quals.ReadOnly
        local 1 #0+160: @checkers.javari.quals.ReadOnly
        local 2 #8+152: @checkers.javari.quals.Mutable
        local 3 #28+132:

    method vp(LBody;I)V:
        return:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1:
        local 0 #0+216: @checkers.javari.quals.ReadOnly
        local 1 #0+216:
        local 2 #8+208: @checkers.javari.quals.Mutable
        local 3 #16+200: @checkers.javari.quals.Mutable
        local 4 #25+191:
        local 6 #31+184: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 7 #53+159: @checkers.javari.quals.Mutable
        local 8 #66+146: @checkers.javari.quals.ReadOnly
        local 9 #146+66: @checkers.javari.quals.Mutable
        local 10 #162+50: @checkers.javari.quals.Mutable

