package checkers.javari.quals:
annotation visible @ReadOnly:

package checkers.javari.quals:
annotation visible @Mutable:

package checkers.javari.quals:
annotation visible @ThisMutable:

package :
class BlackNode:

    method <init>(LQuadrant;LQuadTreeNode;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly
        local 1 #0+7: @checkers.javari.quals.Mutable
        local 2 #0+7: @checkers.javari.quals.ReadOnly

    method perimeter(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+184: @checkers.javari.quals.ReadOnly
        local 1 #0+184:
        local 2 #2+182:
        local 3 #8+176: @checkers.javari.quals.ReadOnly

    method sumAdjacent(LQuadrant;LQuadrant;I)I:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2: @checkers.javari.quals.ReadOnly
        local 2 #0+2: @checkers.javari.quals.ReadOnly
        local 3 #0+2:

package :
class GreyNode:

    method <init>(LQuadrant;LQuadTreeNode;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly
        local 1 #0+7: @checkers.javari.quals.Mutable
        local 2 #0+7: @checkers.javari.quals.ReadOnly

    method perimeter(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+48: @checkers.javari.quals.ReadOnly
        local 1 #0+48:
        local 2 #13+35:

    method sumAdjacent(LQuadrant;LQuadrant;I)I:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+40: @checkers.javari.quals.ReadOnly
        local 1 #0+40: @checkers.javari.quals.ReadOnly
        local 2 #0+40: @checkers.javari.quals.ReadOnly
        local 3 #0+40:
        local 4 #9+31: @checkers.javari.quals.ReadOnly
        local 5 #18+22: @checkers.javari.quals.ReadOnly

package :
class NorthEast:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method adjacent(I)Z:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+15: @checkers.javari.quals.ReadOnly
        local 1 #0+15:

    method reflect(I)LQuadrant;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+18: @checkers.javari.quals.ReadOnly
        local 1 #0+18:

    method child(LQuadTreeNode;)LQuadTreeNode;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly
        local 1 #0+5: @checkers.javari.quals.ReadOnly

package :
class NorthWest:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method adjacent(I)Z:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+15: @checkers.javari.quals.ReadOnly
        local 1 #0+15:

    method reflect(I)LQuadrant;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+18: @checkers.javari.quals.ReadOnly
        local 1 #0+18:

    method child(LQuadTreeNode;)LQuadTreeNode;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly
        local 1 #0+5: @checkers.javari.quals.ReadOnly

package :
class Perimeter:

    field levels:

    field printResult:

    field printMsgs:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method main([Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+267: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #10+257:
        local 2 #18+249:
        local 3 #38+229:
        local 5 #53+214: @checkers.javari.quals.ReadOnly
        local 6 #58+209:
        local 8 #63+204:
        local 10 #70+197:
        local 11 #75+192:
        local 13 #80+187:
        local 15 #88+179:
        local 16 #93+174:

    method parseCmdLine([Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+130: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #2+128:
        local 2 #26+94: @checkers.javari.quals.Mutable

    method usage()V:

    method <clinit>()V:

package :
class QuadTreeNode:

    field gcmp:

    field lcmp:

    field quadrant: @checkers.javari.quals.ThisMutable

    field nw: @checkers.javari.quals.ReadOnly

    field ne: @checkers.javari.quals.ReadOnly

    field sw: @checkers.javari.quals.ReadOnly

    field se: @checkers.javari.quals.ReadOnly

    field parent: @checkers.javari.quals.ReadOnly

    field NORTH:

    field EAST:

    field SOUTH:

    field WEST:

    method <init>(LQuadrant;LQuadTreeNode;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.Mutable
        local 2 #0+11: @checkers.javari.quals.ReadOnly

    method <init>(LQuadrant;LQuadTreeNode;LQuadTreeNode;LQuadTreeNode;LQuadTreeNode;LQuadTreeNode;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2: @checkers.javari.quals.ReadOnly
        parameter #3: @checkers.javari.quals.ReadOnly
        parameter #4: @checkers.javari.quals.ReadOnly
        parameter #5: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+38: @checkers.javari.quals.Mutable
        local 1 #0+38: @checkers.javari.quals.Mutable
        local 2 #0+38: @checkers.javari.quals.ReadOnly
        local 3 #0+38: @checkers.javari.quals.ReadOnly
        local 4 #0+38: @checkers.javari.quals.ReadOnly
        local 5 #0+38: @checkers.javari.quals.ReadOnly
        local 6 #0+38: @checkers.javari.quals.ReadOnly

    method setChildren(LQuadTreeNode;LQuadTreeNode;LQuadTreeNode;LQuadTreeNode;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2: @checkers.javari.quals.ReadOnly
        parameter #3: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+22: @checkers.javari.quals.Mutable
        local 1 #0+22: @checkers.javari.quals.ReadOnly
        local 2 #0+22: @checkers.javari.quals.ReadOnly
        local 3 #0+22: @checkers.javari.quals.ReadOnly
        local 4 #0+22: @checkers.javari.quals.ReadOnly

    method getNorthWest()LQuadTreeNode;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getNorthEast()LQuadTreeNode;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getSouthWest()LQuadTreeNode;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getSouthEast()LQuadTreeNode;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method createTree(IIILQuadTreeNode;LQuadrant;I)LQuadTreeNode;: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1:
        parameter #2:
        parameter #3: @checkers.javari.quals.ReadOnly
        parameter #4: @checkers.javari.quals.Mutable
        parameter #5:
        local 0 #0+192:
        local 1 #0+192:
        local 2 #0+192:
        local 3 #0+192: @checkers.javari.quals.ReadOnly
        local 4 #0+192: @checkers.javari.quals.Mutable
        local 5 #0+192:
        local 7 #8+184:
        local 6 #36+3: @checkers.javari.quals.ReadOnly
        local 6 #57+3: @checkers.javari.quals.ReadOnly
        local 6 #77+3: @checkers.javari.quals.ReadOnly
        local 6 #92+100: @checkers.javari.quals.Mutable
        local 8 #113+76: @checkers.javari.quals.ReadOnly
        local 9 #134+55: @checkers.javari.quals.ReadOnly
        local 10 #155+34: @checkers.javari.quals.ReadOnly
        local 11 #176+13: @checkers.javari.quals.ReadOnly

    method perimeter(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly

    method sumAdjacent(LQuadrant;LQuadrant;I)I:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly

    method gtEqualAdjNeighbor(I)LQuadTreeNode;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+67: @checkers.javari.quals.ReadOnly
        local 1 #0+67:
        local 2 #29+3: @checkers.javari.quals.ReadOnly
        local 2 #37+30: @checkers.javari.quals.ReadOnly

    method countTree()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+62: @checkers.javari.quals.ReadOnly

    method checkOutside(II)I:
        parameter #0:
        parameter #1:
        local 0 #0+28:
        local 1 #0+28:
        local 2 #8+20:

    method checkIntersect(III)I:
        parameter #0:
        parameter #1:
        parameter #2:
        local 0 #0+105:
        local 1 #0+105:
        local 2 #0+105:
        local 3 #90+15:

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+39: @checkers.javari.quals.Mutable

    method <clinit>()V:

package :
class Quadrant:

    field cNorthWest: @checkers.javari.quals.Mutable

    field cNorthEast: @checkers.javari.quals.Mutable

    field cSouthWest: @checkers.javari.quals.Mutable

    field cSouthEast: @checkers.javari.quals.Mutable

    method adjacent(I)Z:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly

    method reflect(I)LQuadrant;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly

    method child(LQuadTreeNode;)LQuadTreeNode;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

package :
class SouthEast:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method adjacent(I)Z:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+16: @checkers.javari.quals.ReadOnly
        local 1 #0+16:

    method reflect(I)LQuadrant;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+18: @checkers.javari.quals.ReadOnly
        local 1 #0+18:

    method child(LQuadTreeNode;)LQuadTreeNode;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly
        local 1 #0+5: @checkers.javari.quals.ReadOnly

package :
class SouthWest:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method adjacent(I)Z:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+16: @checkers.javari.quals.ReadOnly
        local 1 #0+16:

    method reflect(I)LQuadrant;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+18: @checkers.javari.quals.ReadOnly
        local 1 #0+18:

    method child(LQuadTreeNode;)LQuadTreeNode;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly
        local 1 #0+5: @checkers.javari.quals.ReadOnly

package :
class WhiteNode:

    method <init>(LQuadrant;LQuadTreeNode;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly
        local 1 #0+7: @checkers.javari.quals.Mutable
        local 2 #0+7: @checkers.javari.quals.ReadOnly

    method perimeter(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2:

    method sumAdjacent(LQuadrant;LQuadrant;I)I:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2: @checkers.javari.quals.ReadOnly
        local 2 #0+2: @checkers.javari.quals.ReadOnly
        local 3 #0+2:

