package checkers.javari.quals:
annotation @ReadOnly:

package checkers.javari.quals:
annotation @PolyRead:

package checkers.javari.quals:
annotation @Mutable:

package checkers.javari.quals:
annotation @ThisMutable:

package :
class BlueReturn:

    field vert: @checkers.javari.quals.ThisMutable

    field dist:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method vert()LVertex;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setVert(LVertex;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method dist()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setDist(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

package :
class Graph:

    field nodes: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field CONST_m1:

    field CONST_b:

    field RANGE:

    method <init>(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+55: @checkers.javari.quals.Mutable
        local 1 #0+55:
        local 2 #14+41: @checkers.javari.quals.Mutable
        local 3 #18+31:
        local 4 #40+3: @checkers.javari.quals.Mutable

    method createGraph(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+51: @checkers.javari.quals.Mutable
        local 1 #0+51:
        local 2 #10+41: @checkers.javari.quals.Mutable
        local 3 #14+31:
        local 4 #36+3: @checkers.javari.quals.Mutable

    method firstNode()LVertex;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+7: @checkers.javari.quals.PolyRead

    method addEdges(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+83: @checkers.javari.quals.Mutable
        local 1 #0+83:
        local 2 #2+81:
        local 3 #9+73: @checkers.javari.quals.Mutable
        local 4 #19+55: @checkers.javari.quals.Mutable
        local 5 #22+49:
        local 6 #44+21:

    method computeDist(III)I:
        parameter #0:
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+37: @checkers.javari.quals.ReadOnly
        local 1 #0+37:
        local 2 #0+37:
        local 3 #0+37:
        local 4 #8+6:
        local 5 #11+3:
        local 4 #17+20:
        local 5 #20+17:

    method mult(II)I:
        parameter #0:
        parameter #1:
        local 0 #0+49:
        local 1 #0+49:
        local 2 #6+43:
        local 3 #12+37:
        local 4 #19+30:
        local 5 #26+23:

    method random(I)I:
        parameter #0:
        local 0 #0+9:

package :
class HashEntry:

    field key: @checkers.javari.quals.ReadOnly

    field entry: @checkers.javari.quals.ThisMutable

    field next: @checkers.javari.quals.ThisMutable

    method <init>(Ljava/lang/Object;Ljava/lang/Object;LHashEntry;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+20: @checkers.javari.quals.Mutable
        local 1 #0+20: @checkers.javari.quals.ReadOnly
        local 2 #0+20: @checkers.javari.quals.Mutable
        local 3 #0+20: @checkers.javari.quals.Mutable

    method key()Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method entry()Ljava/lang/Object;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method next()LHashEntry;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setNext(LHashEntry;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

package :
class Hashtable:

    field array: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field size:

    method <init>(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+21: @checkers.javari.quals.Mutable
        local 1 #0+21:

    method hashMap(Ljava/lang/Object;)I:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+12: @checkers.javari.quals.ReadOnly
        local 1 #0+12: @checkers.javari.quals.Mutable

    method get(Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.PolyRead
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+46: @checkers.javari.quals.PolyRead
        local 1 #0+46: @checkers.javari.quals.Mutable
        local 2 #6+40:
        local 3 #8+38: @checkers.javari.quals.PolyRead

    method put(Ljava/lang/Object;Ljava/lang/Object;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+32: @checkers.javari.quals.Mutable
        local 1 #0+32: @checkers.javari.quals.Mutable
        local 2 #0+32: @checkers.javari.quals.Mutable
        local 3 #6+26:
        local 4 #23+9: @checkers.javari.quals.Mutable

    method remove(Ljava/lang/Object;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+79: @checkers.javari.quals.Mutable
        local 1 #0+79: @checkers.javari.quals.Mutable
        local 2 #6+73:
        local 3 #13+66: @checkers.javari.quals.Mutable
        local 4 #41+37: @checkers.javari.quals.Mutable

package :
class MST:

    field vertices:

    field printResult:

    field printMsgs:

    field MyVertexList: @checkers.javari.quals.Mutable

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method main([Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+243: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #41+202:
        local 3 #52+191: @checkers.javari.quals.Mutable
        local 4 #57+186:
        local 6 #76+167:
        local 8 #85+158:
        local 9 #90+153:

    method computeMST(LGraph;I)I:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        local 0 #0+57: @checkers.javari.quals.Mutable
        local 1 #0+57:
        local 2 #2+55:
        local 3 #7+50: @checkers.javari.quals.Mutable
        local 4 #13+44: @checkers.javari.quals.Mutable
        local 5 #31+21: @checkers.javari.quals.Mutable
        local 6 #44+8:

    method BlueRule(LVertex;LVertex;)LBlueReturn;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+237: @checkers.javari.quals.Mutable
        local 1 #0+237: @checkers.javari.quals.Mutable
        local 2 #8+229: @checkers.javari.quals.Mutable
        local 3 #22+215: @checkers.javari.quals.Mutable
        local 4 #41+196: @checkers.javari.quals.Mutable
        local 5 #49+188: @checkers.javari.quals.Mutable
        local 6 #64+21:
        local 6 #99+138:
        local 7 #105+130: @checkers.javari.quals.Mutable
        local 8 #126+6: @checkers.javari.quals.Mutable
        local 8 #149+73:
        local 9 #172+18:

    method doAllBlueRule(LVertex;)LBlueReturn;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+24: @checkers.javari.quals.Mutable

    method parseCmdLine([Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+130: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #2+128:
        local 2 #26+94: @checkers.javari.quals.Mutable

    method usage()V:

    method <clinit>()V:

package :
class Vertex:

    field mindist:

    field next: @checkers.javari.quals.ThisMutable

    field neighbors: @checkers.javari.quals.ThisMutable

    method <init>(LVertex;I)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+30: @checkers.javari.quals.Mutable
        local 1 #0+30: @checkers.javari.quals.Mutable
        local 2 #0+30:

    method mindist()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setMindist(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method next()LVertex;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setNext(LVertex;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method neighbors()LHashtable;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

