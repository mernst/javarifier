package checkers.javari.quals:
annotation visible @ReadOnly:

package checkers.javari.quals:
annotation visible @Mutable:

package checkers.javari.quals:
annotation visible @PolyRead:

package checkers.javari.quals:
annotation visible @ThisMutable:

package :
class BiGraph:

    field eNodes: @checkers.javari.quals.ReadOnly

    field hNodes: @checkers.javari.quals.ReadOnly

    method <init>(LNode;LNode;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+15: @checkers.javari.quals.Mutable
        local 1 #0+15: @checkers.javari.quals.ReadOnly
        local 2 #0+15: @checkers.javari.quals.ReadOnly

    method create(IIZ)LBiGraph;: @checkers.javari.quals.Mutable
        parameter #0:
        parameter #1:
        parameter #2:
        local 0 #0+308:
        local 1 #0+308:
        local 2 #0+308:
        local 3 #24+284: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 4 #31+277: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 5 #51+32: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 6 #73+7: @checkers.javari.quals.Mutable
        local 5 #92+31: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 6 #114+6: @checkers.javari.quals.Mutable
        local 5 #143+30: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 6 #165+5: @checkers.javari.quals.Mutable
        local 5 #182+30: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 6 #204+5: @checkers.javari.quals.Mutable
        local 5 #220+30: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 6 #242+5: @checkers.javari.quals.Mutable
        local 5 #259+30: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 6 #281+5: @checkers.javari.quals.Mutable
        local 5 #305+3: @checkers.javari.quals.PolyRead

    method compute()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+69: @checkers.javari.quals.ReadOnly
        local 1 #8+26: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #27+4: @checkers.javari.quals.Mutable
        local 1 #42+26: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #61+4: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+131: @checkers.javari.quals.ReadOnly
        local 1 #8+123: @checkers.javari.quals.Mutable
        local 2 #16+51: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #35+29: @checkers.javari.quals.Mutable
        local 2 #75+51: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #94+29: @checkers.javari.quals.Mutable

package :
class Em3d:

    field numNodes:

    field numDegree:

    field numIter:

    field printResult:

    field printMsgs:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method main([Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+237: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #22+215:
        local 3 #35+202: @checkers.javari.quals.Mutable
        local 4 #40+197:
        local 6 #83+154:
        local 8 #86+18:
        local 8 #109+128:

    method parseCmdLine([Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+230: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #2+228:
        local 2 #26+188: @checkers.javari.quals.Mutable

    method usage()V:

    method <clinit>()V:

package :
class Graph:

    field eNodes: @checkers.javari.quals.ReadOnly

    field hNodes: @checkers.javari.quals.ReadOnly

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

package :
class Node:

    field value:

    field next: @checkers.javari.quals.ReadOnly

    field toNodes: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field fromNodes: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ThisMutable

    field coeffs:
        inner-type 0: @checkers.javari.quals.ThisMutable

    field fromCount:

    field fromLength:

    field rand: @checkers.javari.quals.Mutable

    method initSeed(J)V:
        parameter #0:
        local 0 #0+12:

    method <init>(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+48: @checkers.javari.quals.Mutable
        local 1 #0+48:

    method fillTable(II)[LNode;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1:
        local 0 #0+60:
        local 1 #0+60:
        local 2 #5+55: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #14+46: @checkers.javari.quals.Mutable
        local 4 #21+37:
        local 5 #37+15: @checkers.javari.quals.Mutable

    method makeUniqueNeighbors([LNode;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+100: @checkers.javari.quals.Mutable
        local 1 #0+100: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #2+97:
        local 5 #19+50:
        local 4 #42+51: @checkers.javari.quals.Mutable
        local 3 #44+49:

    method makeFromNodes()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+22: @checkers.javari.quals.Mutable

    method updateFromNodes()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+56: @checkers.javari.quals.Mutable
        local 1 #2+53:
        local 2 #18+31: @checkers.javari.quals.Mutable
        local 3 #30+19:

    method computeNewValue()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+42: @checkers.javari.quals.Mutable
        local 1 #2+39:

    method elements()Ljava/util/Enumeration;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+35: @checkers.javari.quals.ReadOnly

    method access$000(LNode;)LNode;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

package :
class Node$1Enumerate:

    field current: @checkers.javari.quals.ReadOnly

    field this$0: @checkers.javari.quals.ReadOnly

    method <init>(LNode;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+15: @checkers.javari.quals.Mutable

    method hasMoreElements()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+13: @checkers.javari.quals.ReadOnly

    method nextElement()Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+18: @checkers.javari.quals.Mutable
        local 1 #5+13: @checkers.javari.quals.ReadOnly

