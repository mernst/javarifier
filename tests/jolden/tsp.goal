package checkers.javari.quals:
annotation @ReadOnly:

package checkers.javari.quals:
annotation @Mutable:

package checkers.javari.quals:
annotation @PolyRead:

package checkers.javari.quals:
annotation @ThisMutable:

package :
class TSP:

    field cities:

    field printResult:

    field printMsgs:

    method <init>()V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method main([Ljava/lang/String;)V:
        return:
        parameter #0: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+201: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #41+160:
        local 3 #53+148: @checkers.javari.quals.Mutable
        local 4 #58+143:
        local 6 #63+138:
        local 8 #76+125:

    method parseCmdLine([Ljava/lang/String;)V:
        return:
        parameter #0: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+130: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #2+128:
        local 2 #26+94: @checkers.javari.quals.ReadOnly

    method usage()V:
        return:

    method <clinit>()V:
        return:

package :
class Tree:

    field sz:

    field x:

    field y:

    field left: @checkers.javari.quals.ThisMutable

    field right: @checkers.javari.quals.ThisMutable

    field next: @checkers.javari.quals.ThisMutable

    field prev: @checkers.javari.quals.ThisMutable

    field M_E2:

    field M_E3:

    field M_E6:

    field M_E12:

    method <init>(IDDLTree;LTree;)V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1:
        parameter #2:
        parameter #3: @checkers.javari.quals.Mutable
        parameter #4: @checkers.javari.quals.Mutable
        local 0 #0+43: @checkers.javari.quals.Mutable
        local 1 #0+43:
        local 2 #0+43:
        local 4 #0+43:
        local 6 #0+43: @checkers.javari.quals.Mutable
        local 7 #0+43: @checkers.javari.quals.Mutable

    method distance(LTree;)D:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        local 0 #0+43: @checkers.javari.quals.ReadOnly
        local 1 #0+43: @checkers.javari.quals.ReadOnly

    method makeList()LTree;:
        return: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+96: @checkers.javari.quals.Mutable
        local 5 #3+93: @checkers.javari.quals.PolyRead
        local 1 #18+3: @checkers.javari.quals.ReadOnly
        local 1 #23+73: @checkers.javari.quals.PolyRead
        local 2 #38+3: @checkers.javari.quals.ReadOnly
        local 2 #43+53: @checkers.javari.quals.Mutable

    method reverse()V:
        return:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+70: @checkers.javari.quals.Mutable
        local 1 #5+65: @checkers.javari.quals.Mutable
        local 2 #17+53: @checkers.javari.quals.Mutable
        local 3 #19+51: @checkers.javari.quals.Mutable
        local 5 #25+34: @checkers.javari.quals.Mutable
        local 4 #37+22: @checkers.javari.quals.Mutable

    method conquer()LTree;:
        return: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+207: @checkers.javari.quals.Mutable
        local 1 #5+202: @checkers.javari.quals.Mutable
        local 2 #7+200: @checkers.javari.quals.Mutable
        local 3 #31+174: @checkers.javari.quals.Mutable
        local 4 #34+166: @checkers.javari.quals.Mutable
        local 5 #41+159:
        local 7 #47+40: @checkers.javari.quals.Mutable
        local 8 #61+16:
        local 7 #94+106: @checkers.javari.quals.Mutable
        local 8 #101+99: @checkers.javari.quals.Mutable
        local 9 #110+90:
        local 11 #119+81:
        local 13 #127+73:
        local 15 #135+65:

    method merge(LTree;LTree;)LTree;:
        return: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+613: @checkers.javari.quals.Mutable
        local 1 #0+613: @checkers.javari.quals.Mutable
        local 2 #0+613: @checkers.javari.quals.Mutable
        local 3 #2+611: @checkers.javari.quals.Mutable
        local 4 #9+604:
        local 6 #12+601: @checkers.javari.quals.ReadOnly
        local 7 #30+14:
        local 7 #58+555: @checkers.javari.quals.Mutable
        local 8 #64+549: @checkers.javari.quals.ReadOnly
        local 9 #72+541:
        local 11 #80+533:
        local 13 #88+525:
        local 15 #96+517:
        local 17 #114+14: @checkers.javari.quals.ReadOnly
        local 18 #117+11: @checkers.javari.quals.ReadOnly
        local 19 #121+7:
        local 21 #125+3:
        local 17 #131+482: @checkers.javari.quals.Mutable
        local 18 #135+478: @checkers.javari.quals.Mutable
        local 21 #139+474:
        local 19 #143+470:
        local 23 #173+14:
        local 23 #257+14: @checkers.javari.quals.ReadOnly
        local 24 #260+11: @checkers.javari.quals.ReadOnly
        local 25 #264+7:
        local 27 #268+3:
        local 23 #274+339: @checkers.javari.quals.Mutable
        local 24 #278+335: @checkers.javari.quals.Mutable
        local 27 #282+331:
        local 25 #286+327:
        local 29 #295+318:
        local 31 #304+309:
        local 33 #313+300:
        local 35 #322+291:
        local 37 #335+278:
        local 38 #345+268:

    method tsp(I)LTree;:
        return: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
        local 0 #0+38: @checkers.javari.quals.Mutable
        local 1 #0+38:
        local 2 #22+16: @checkers.javari.quals.Mutable
        local 3 #31+7: @checkers.javari.quals.Mutable

    method printVisitOrder()V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+99: @checkers.javari.quals.ReadOnly
        local 1 #45+53: @checkers.javari.quals.ReadOnly

    method median(DDI)D:
        return:
        parameter #0:
        parameter #1:
        parameter #2:
        local 0 #0+94:
        local 2 #0+94:
        local 4 #0+94:
        local 5 #12+82:
        local 7 #46+3:
        local 7 #71+23:

    method uniform(DD)D:
        return:
        parameter #0:
        parameter #1:
        local 0 #0+25:
        local 2 #0+25:
        local 4 #12+13:

    method buildTree(IZDDDD)LTree;:
        return: @checkers.javari.quals.Mutable
        parameter #0:
        parameter #1:
        parameter #2:
        parameter #3:
        parameter #4:
        parameter #5:
        local 0 #0+159:
        local 1 #0+159:
        local 2 #0+159:
        local 4 #0+159:
        local 6 #0+159:
        local 8 #0+159:
        local 16 #29+46:
        local 10 #45+33: @checkers.javari.quals.ReadOnly
        local 11 #62+16: @checkers.javari.quals.ReadOnly
        local 12 #66+12:
        local 14 #75+3:
        local 16 #98+44:
        local 10 #114+45: @checkers.javari.quals.Mutable
        local 11 #130+29: @checkers.javari.quals.Mutable
        local 14 #134+25:
        local 12 #142+17:

