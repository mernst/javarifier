package checkers.javari.quals:
annotation visible @ReadOnly:

package checkers.javari.quals:
annotation visible @Mutable:

package checkers.javari.quals:
annotation visible @PolyRead:

package checkers.javari.quals:
annotation visible @ThisMutable:

package :
class Edge:

    field quadList: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field listPos:

    field vertex: @checkers.javari.quals.ThisMutable

    field next: @checkers.javari.quals.ThisMutable

    method <init>(LVertex;[LEdge;I)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+20: @checkers.javari.quals.Mutable
        local 1 #0+20: @checkers.javari.quals.Mutable
        local 2 #0+20: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 3 #0+20:

    method <init>([LEdge;I)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly
        local 1 #0+8: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #0+8:

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+18: @checkers.javari.quals.ReadOnly

    method makeEdge(LVertex;LVertex;)LEdge;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+105: @checkers.javari.quals.Mutable
        local 1 #0+105: @checkers.javari.quals.Mutable
        local 2 #5+100: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #93+12: @checkers.javari.quals.Mutable

    method setNext(LEdge;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method setOrig(LVertex;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method setDest(LVertex;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+9: @checkers.javari.quals.Mutable
        local 1 #0+9: @checkers.javari.quals.Mutable

    method oNext()LEdge;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method oPrev()LEdge;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+11: @checkers.javari.quals.PolyRead

    method lNext()LEdge;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+11: @checkers.javari.quals.PolyRead

    method lPrev()LEdge;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+8: @checkers.javari.quals.PolyRead

    method rNext()LEdge;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+11: @checkers.javari.quals.PolyRead

    method rPrev()LEdge;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+8: @checkers.javari.quals.PolyRead

    method dNext()LEdge;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly

    method dPrev()LEdge;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly

    method orig()LVertex;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method dest()LVertex;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+8: @checkers.javari.quals.PolyRead

    method symmetric()LEdge;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+14: @checkers.javari.quals.PolyRead

    method rotate()LEdge;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+14: @checkers.javari.quals.PolyRead

    method rotateInv()LEdge;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+14: @checkers.javari.quals.PolyRead

    method nextQuadEdge()LEdge;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+14: @checkers.javari.quals.ReadOnly

    method connectLeft(LEdge;)LEdge;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+42: @checkers.javari.quals.Mutable
        local 1 #0+42: @checkers.javari.quals.Mutable
        local 2 #5+37: @checkers.javari.quals.Mutable
        local 5 #11+31: @checkers.javari.quals.Mutable
        local 3 #16+26: @checkers.javari.quals.Mutable
        local 4 #23+19: @checkers.javari.quals.Mutable

    method connectRight(LEdge;)LEdge;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+45: @checkers.javari.quals.Mutable
        local 1 #0+45: @checkers.javari.quals.Mutable
        local 2 #5+40: @checkers.javari.quals.Mutable
        local 3 #10+35: @checkers.javari.quals.Mutable
        local 5 #16+29: @checkers.javari.quals.Mutable
        local 4 #23+22: @checkers.javari.quals.Mutable

    method swapedge()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+74: @checkers.javari.quals.Mutable
        local 1 #5+69: @checkers.javari.quals.Mutable
        local 2 #10+64: @checkers.javari.quals.Mutable
        local 3 #15+59: @checkers.javari.quals.Mutable
        local 4 #31+43: @checkers.javari.quals.Mutable
        local 5 #55+19: @checkers.javari.quals.Mutable
        local 6 #61+13: @checkers.javari.quals.Mutable

    method splice(LEdge;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+65: @checkers.javari.quals.Mutable
        local 1 #0+65: @checkers.javari.quals.Mutable
        local 2 #8+57: @checkers.javari.quals.Mutable
        local 3 #16+49: @checkers.javari.quals.Mutable
        local 4 #22+43: @checkers.javari.quals.Mutable
        local 5 #28+37: @checkers.javari.quals.Mutable

    method valid(LEdge;)Z:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+24: @checkers.javari.quals.ReadOnly
        local 1 #0+24: @checkers.javari.quals.ReadOnly
        local 2 #5+19: @checkers.javari.quals.ReadOnly
        local 3 #10+14: @checkers.javari.quals.ReadOnly
        local 4 #16+8: @checkers.javari.quals.ReadOnly

    method deleteEdge()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+27: @checkers.javari.quals.Mutable
        local 1 #5+22: @checkers.javari.quals.Mutable

    method doMerge(LEdge;LEdge;LEdge;LEdge;)LEdgePair;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.Mutable
        parameter #3: @checkers.javari.quals.Mutable
        local 0 #0+476: @checkers.javari.quals.Mutable
        local 1 #0+476: @checkers.javari.quals.Mutable
        local 2 #0+476: @checkers.javari.quals.Mutable
        local 3 #0+476: @checkers.javari.quals.Mutable
        local 4 #6+67: @checkers.javari.quals.ReadOnly
        local 5 #12+61: @checkers.javari.quals.ReadOnly
        local 6 #18+55: @checkers.javari.quals.ReadOnly
        local 4 #86+390: @checkers.javari.quals.Mutable
        local 5 #93+383: @checkers.javari.quals.Mutable
        local 6 #100+376: @checkers.javari.quals.Mutable
        local 7 #107+369: @checkers.javari.quals.ReadOnly
        local 8 #114+362: @checkers.javari.quals.ReadOnly
        local 9 #148+325: @checkers.javari.quals.Mutable
        local 10 #165+75: @checkers.javari.quals.ReadOnly
        local 11 #172+68: @checkers.javari.quals.ReadOnly
        local 12 #179+61: @checkers.javari.quals.ReadOnly
        local 13 #186+54: @checkers.javari.quals.ReadOnly
        local 10 #264+75: @checkers.javari.quals.ReadOnly
        local 11 #271+68: @checkers.javari.quals.ReadOnly
        local 12 #278+61: @checkers.javari.quals.ReadOnly
        local 13 #285+54: @checkers.javari.quals.ReadOnly
        local 10 #348+125:
        local 11 #357+116:
        local 12 #384+89: @checkers.javari.quals.ReadOnly
        local 13 #391+82: @checkers.javari.quals.ReadOnly
        local 14 #398+75: @checkers.javari.quals.ReadOnly
        local 15 #405+68: @checkers.javari.quals.ReadOnly

    method outputVoronoiDiagram()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+546: @checkers.javari.quals.Mutable
        local 1 #2+544: @checkers.javari.quals.Mutable
        local 2 #7+151: @checkers.javari.quals.ReadOnly
        local 3 #12+146: @checkers.javari.quals.ReadOnly
        local 4 #18+140: @checkers.javari.quals.ReadOnly
        local 5 #25+133: @checkers.javari.quals.ReadOnly
        local 6 #32+126: @checkers.javari.quals.ReadOnly
        local 7 #41+117: @checkers.javari.quals.ReadOnly
        local 8 #48+110: @checkers.javari.quals.ReadOnly
        local 9 #58+100: @checkers.javari.quals.ReadOnly
        local 10 #67+91: @checkers.javari.quals.ReadOnly
        local 11 #76+82:
        local 13 #86+72:
        local 2 #171+375: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #179+367: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
            inner-type 1: @checkers.javari.quals.Mutable
        local 4 #229+313: @checkers.javari.quals.Mutable
        local 5 #240+302: @checkers.javari.quals.Mutable
        local 6 #257+275: @checkers.javari.quals.Mutable
        local 7 #270+255: @checkers.javari.quals.Mutable
        local 8 #277+248:
        local 10 #284+241: @checkers.javari.quals.Mutable
        local 11 #291+234:
        local 13 #342+160: @checkers.javari.quals.ReadOnly
        local 14 #349+153: @checkers.javari.quals.ReadOnly
        local 15 #369+133: @checkers.javari.quals.ReadOnly
        local 16 #376+126: @checkers.javari.quals.ReadOnly
        local 17 #404+98: @checkers.javari.quals.ReadOnly
        local 18 #411+91: @checkers.javari.quals.ReadOnly
        local 19 #417+85: @checkers.javari.quals.ReadOnly
        local 20 #428+74: @checkers.javari.quals.ReadOnly
        local 21 #460+42: @checkers.javari.quals.ReadOnly

    method pushRing(Ljava/util/Stack;Ljava/util/Hashtable;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
            inner-type 1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+47: @checkers.javari.quals.Mutable
        local 1 #0+47: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #0+47: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
            inner-type 1: @checkers.javari.quals.ReadOnly
        local 3 #5+42: @checkers.javari.quals.Mutable

    method pushNonezeroRing(Ljava/util/Stack;Ljava/util/Hashtable;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
            inner-type 1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+39: @checkers.javari.quals.Mutable
        local 1 #0+39: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #0+39: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
            inner-type 1: @checkers.javari.quals.ReadOnly
        local 3 #5+34: @checkers.javari.quals.Mutable

package :
class EdgePair:

    field left: @checkers.javari.quals.ThisMutable

    field right: @checkers.javari.quals.ThisMutable

    method <init>(LEdge;LEdge;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+15: @checkers.javari.quals.Mutable
        local 1 #0+15: @checkers.javari.quals.Mutable
        local 2 #0+15: @checkers.javari.quals.Mutable

    method getLeft()LEdge;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getRight()LEdge;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

package :
class MyDouble:

    field value:

    method <init>(D)V:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10:

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

package :
class Vec2:

    field x:

    field y:

    field norm:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method <init>(DD)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+38: @checkers.javari.quals.Mutable
        local 1 #0+38:
        local 3 #0+38:

    method X()D:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method Y()D:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method Norm()D:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setNorm(D)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+30: @checkers.javari.quals.ReadOnly

    method circle_center(LVec2;LVec2;)LVec2;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+111: @checkers.javari.quals.ReadOnly
        local 1 #0+111: @checkers.javari.quals.ReadOnly
        local 2 #0+111: @checkers.javari.quals.ReadOnly
        local 3 #6+105: @checkers.javari.quals.ReadOnly
        local 4 #12+99:
        local 6 #27+84: @checkers.javari.quals.ReadOnly
        local 7 #44+67: @checkers.javari.quals.ReadOnly
        local 8 #51+60: @checkers.javari.quals.ReadOnly
        local 9 #60+51:
        local 11 #68+43:
        local 13 #75+36: @checkers.javari.quals.ReadOnly
        local 14 #84+27:
        local 16 #91+20: @checkers.javari.quals.ReadOnly
        local 17 #103+8: @checkers.javari.quals.ReadOnly

    method cprod(LVec2;)D:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+20: @checkers.javari.quals.ReadOnly
        local 1 #0+20: @checkers.javari.quals.ReadOnly

    method dot(LVec2;)D:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+20: @checkers.javari.quals.ReadOnly
        local 1 #0+20: @checkers.javari.quals.ReadOnly

    method times(D)LVec2;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+20: @checkers.javari.quals.ReadOnly
        local 1 #0+20:

    method sum(LVec2;)LVec2;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+26: @checkers.javari.quals.ReadOnly
        local 1 #0+26: @checkers.javari.quals.ReadOnly

    method sub(LVec2;)LVec2;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+26: @checkers.javari.quals.ReadOnly
        local 1 #0+26: @checkers.javari.quals.ReadOnly

    method magn()D:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+23: @checkers.javari.quals.ReadOnly

    method cross()LVec2;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+17: @checkers.javari.quals.ReadOnly

package :
class Vertex:

    field left: @checkers.javari.quals.ThisMutable

    field right: @checkers.javari.quals.ThisMutable

    field seed:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method <init>(DD)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+17: @checkers.javari.quals.Mutable
        local 1 #0+17:
        local 3 #0+17:

    method setLeft(LVertex;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method setRight(LVertex;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method getLeft()LVertex;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getRight()LVertex;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method createPoints(ILMyDouble;I)LVertex;: @checkers.javari.quals.Mutable
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2:
        local 0 #0+116:
        local 1 #0+116: @checkers.javari.quals.Mutable
        local 2 #0+116:
        local 3 #15+101: @checkers.javari.quals.Mutable
        local 4 #25+91: @checkers.javari.quals.Mutable
        local 5 #108+8: @checkers.javari.quals.Mutable

    method buildDelaunayTriangulation(LVertex;)LEdge;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11: @checkers.javari.quals.Mutable
        local 2 #6+5: @checkers.javari.quals.PolyRead

    method buildDelaunay(LVertex;)LEdgePair;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+272: @checkers.javari.quals.Mutable
        local 1 #0+272: @checkers.javari.quals.Mutable
        local 2 #2+270: @checkers.javari.quals.Mutable
        local 3 #21+110: @checkers.javari.quals.ReadOnly
        local 4 #24+107: @checkers.javari.quals.ReadOnly
        local 5 #34+97: @checkers.javari.quals.Mutable
        local 6 #44+87: @checkers.javari.quals.Mutable
        local 7 #74+57: @checkers.javari.quals.Mutable
        local 8 #99+32: @checkers.javari.quals.Mutable
        local 3 #147+13: @checkers.javari.quals.Mutable
        local 3 #168+102: @checkers.javari.quals.Mutable
        local 4 #171+99: @checkers.javari.quals.Mutable
        local 5 #174+96: @checkers.javari.quals.Mutable
        local 6 #182+88: @checkers.javari.quals.Mutable
        local 7 #191+79: @checkers.javari.quals.Mutable
        local 8 #210+60: @checkers.javari.quals.Mutable

    method print()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+91: @checkers.javari.quals.ReadOnly

    method getLow()LVertex;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+18: @checkers.javari.quals.ReadOnly
        local 2 #2+16: @checkers.javari.quals.ReadOnly
        local 1 #8+10: @checkers.javari.quals.ReadOnly

    method incircle(LVertex;LVertex;LVertex;)Z:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+190: @checkers.javari.quals.ReadOnly
        local 1 #0+190: @checkers.javari.quals.ReadOnly
        local 2 #0+190: @checkers.javari.quals.ReadOnly
        local 3 #0+190: @checkers.javari.quals.ReadOnly
        local 33 #3+187: @checkers.javari.quals.ReadOnly
        local 16 #10+180:
        local 18 #17+173:
        local 26 #24+166:
        local 30 #27+163: @checkers.javari.quals.ReadOnly
        local 4 #37+153:
        local 6 #47+143:
        local 20 #54+136:
        local 31 #57+133: @checkers.javari.quals.ReadOnly
        local 8 #67+123:
        local 10 #77+113:
        local 22 #84+106:
        local 32 #87+103: @checkers.javari.quals.ReadOnly
        local 12 #97+93:
        local 14 #107+83:
        local 24 #114+76:
        local 28 #133+57:

    method ccw(LVertex;LVertex;)Z:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+87: @checkers.javari.quals.ReadOnly
        local 1 #0+87: @checkers.javari.quals.ReadOnly
        local 2 #0+87: @checkers.javari.quals.ReadOnly
        local 17 #3+84: @checkers.javari.quals.ReadOnly
        local 5 #10+77:
        local 7 #17+70:
        local 18 #20+67: @checkers.javari.quals.ReadOnly
        local 9 #27+60:
        local 11 #34+53:
        local 19 #37+50: @checkers.javari.quals.ReadOnly
        local 13 #44+43:
        local 15 #51+36:
        local 3 #75+12:

    method mult(II)I:
        parameter #0:
        parameter #1:
        local 0 #0+48:
        local 1 #0+48:
        local 6 #5+43:
        local 2 #10+38:
        local 3 #15+33:
        local 4 #21+27:
        local 5 #27+21:

    method skiprand(II)I:
        parameter #0:
        parameter #1:
        local 0 #0+17:
        local 1 #0+17:

    method random(I)I:
        parameter #0:
        local 0 #0+13:
        local 1 #3+10:

    method drand()D:
        local 0 #16+2:

package :
class Voronoi:

    field points:

    field printMsgs:

    field printResults:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method main([Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+281: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #46+235:
        local 3 #68+213: @checkers.javari.quals.Mutable
        local 4 #94+187: @checkers.javari.quals.Mutable
        local 5 #99+182:
        local 7 #142+139:
        local 9 #150+131: @checkers.javari.quals.Mutable
        local 10 #155+126:

    method parseCmdLine([Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+130: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #2+128:
        local 2 #26+94: @checkers.javari.quals.Mutable

    method usage()V:

    method <clinit>()V:

