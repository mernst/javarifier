package checkers.javari.quals:
annotation @ReadOnly:

package checkers.javari.quals:
annotation @Mutable:

package checkers.javari.quals:
annotation @ThisMutable:

package checkers.javari.quals:
annotation @PolyRead:

package :
class Health:

    field maxLevel:

    field maxTime:

    field seed:

    field printResult:

    field printMsgs:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method main([Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+335: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #8+327:
        local 3 #20+315: @checkers.javari.quals.Mutable
        local 4 #25+310:
        local 6 #44+291:
        local 8 #47+41:
        local 8 #94+241: @checkers.javari.quals.ReadOnly
        local 9 #99+236:

    method parseCmdLine([Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+236: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #2+234:
        local 1 #26+188: @checkers.javari.quals.ReadOnly

    method usage()V:

    method <clinit>()V:

package :
class Hospital:

    field personnel:

    field freePersonnel:

    field numWaitingPatients:

    field waiting: @checkers.javari.quals.ThisMutable

    field assess: @checkers.javari.quals.ThisMutable

    field inside: @checkers.javari.quals.ThisMutable

    field up: @checkers.javari.quals.ReadOnly

    method <init>(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+71: @checkers.javari.quals.Mutable
        local 1 #0+71:

    method putInHospital(LPatient;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+67: @checkers.javari.quals.Mutable
        local 1 #0+67: @checkers.javari.quals.Mutable
        local 2 #5+62:

    method checkPatientsInside(LList;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+71: @checkers.javari.quals.Mutable
        local 1 #0+71: @checkers.javari.quals.Mutable
        local 2 #8+62: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #27+40: @checkers.javari.quals.Mutable

    method checkPatientsAssess(LVillage;)LList;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+132: @checkers.javari.quals.Mutable
        local 1 #0+132: @checkers.javari.quals.Mutable
        local 2 #8+124: @checkers.javari.quals.Mutable
        local 3 #16+114: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 4 #36+91: @checkers.javari.quals.Mutable

    method checkPatientsWaiting()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+92: @checkers.javari.quals.Mutable
        local 1 #8+83: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #27+61: @checkers.javari.quals.Mutable

package :
class List:

    field head: @checkers.javari.quals.ThisMutable

    field tail: @checkers.javari.quals.ThisMutable

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+15: @checkers.javari.quals.Mutable

    method add(LPatient;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+39: @checkers.javari.quals.Mutable
        local 1 #0+39: @checkers.javari.quals.ReadOnly
        local 2 #10+29: @checkers.javari.quals.Mutable

    method delete(Ljava/lang/Object;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+92: @checkers.javari.quals.Mutable
        local 1 #0+92: @checkers.javari.quals.ReadOnly
        local 2 #52+40: @checkers.javari.quals.Mutable
        local 3 #60+31: @checkers.javari.quals.Mutable

    method elements()Ljava/util/Enumeration;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly

package :
class List$ListEnumerator:

    field curNode: @checkers.javari.quals.ReadOnly

    field this$0: @checkers.javari.quals.ReadOnly

    method <init>(LList;LList;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+18: @checkers.javari.quals.Mutable
        local 2 #0+18: @checkers.javari.quals.ReadOnly

    method nextElement()Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+21: @checkers.javari.quals.Mutable
        local 1 #8+13: @checkers.javari.quals.ReadOnly

    method hasMoreElements()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+13: @checkers.javari.quals.ReadOnly

package :
class List$ListNode:

    field next: @checkers.javari.quals.ThisMutable

    field object: @checkers.javari.quals.ReadOnly

    field this$0: @checkers.javari.quals.ReadOnly

    method <init>(LList;Ljava/lang/Object;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+20: @checkers.javari.quals.Mutable
        local 2 #0+20: @checkers.javari.quals.ReadOnly

package :
class Patient:

    field hospitalsVisited:

    field time:

    field timeLeft:

    field home: @checkers.javari.quals.ReadOnly

    method <init>(LVillage;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+25: @checkers.javari.quals.Mutable
        local 1 #0+25: @checkers.javari.quals.ReadOnly

package :
class Results:

    field totalPatients:

    field totalTime:

    field totalHospitals:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

package :
class Village:

    field forward: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field back: @checkers.javari.quals.ReadOnly

    field returned: @checkers.javari.quals.ThisMutable

    field hospital: @checkers.javari.quals.ThisMutable

    field label:

    field seed:

    field IA:

    field IM:

    field AM:

    field IQ:

    field IR:

    field MASK:

    method <init>(IILVillage;I)V:
        parameter #0:
        parameter #1:
        parameter #2: @checkers.javari.quals.ReadOnly
        parameter #3:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+60: @checkers.javari.quals.Mutable
        local 1 #0+60:
        local 2 #0+60:
        local 3 #0+60: @checkers.javari.quals.ReadOnly
        local 4 #0+60:

    method addVillage(ILVillage;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8:
        local 2 #0+8: @checkers.javari.quals.Mutable

    method staysHere()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+39: @checkers.javari.quals.Mutable
        local 1 #8+31:

    method createVillage(IILVillage;I)LVillage;: @checkers.javari.quals.Mutable
        parameter #0:
        parameter #1:
        parameter #2: @checkers.javari.quals.ReadOnly
        parameter #3:
        local 0 #0+64:
        local 1 #0+64:
        local 2 #0+64: @checkers.javari.quals.ReadOnly
        local 3 #0+64:
        local 4 #19+45: @checkers.javari.quals.Mutable
        local 5 #22+39:
        local 6 #46+9: @checkers.javari.quals.Mutable

    method simulate()LList;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+141: @checkers.javari.quals.Mutable
        local 1 #5+136: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #7+28:
        local 3 #18+11: @checkers.javari.quals.Mutable
        local 2 #37+58:
        local 3 #45+44: @checkers.javari.quals.ReadOnly
        local 4 #55+34: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #77+9: @checkers.javari.quals.Mutable
        local 2 #115+26: @checkers.javari.quals.ReadOnly
        local 3 #127+14: @checkers.javari.quals.Mutable

    method getResults()LResults;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+181: @checkers.javari.quals.ReadOnly
        local 1 #5+176: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #7+28:
        local 3 #18+11: @checkers.javari.quals.ReadOnly
        local 2 #43+138: @checkers.javari.quals.Mutable
        local 3 #45+61:
        local 3 #114+65: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 4 #134+42: @checkers.javari.quals.ReadOnly

    method generatePatient()LPatient;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+39: @checkers.javari.quals.Mutable
        local 1 #8+31:
        local 2 #19+20: @checkers.javari.quals.PolyRead

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+15: @checkers.javari.quals.ReadOnly

    method myRand(I)F:
        parameter #0:
        local 0 #0+51:
        local 1 #10+41:
        local 2 #49+2:

