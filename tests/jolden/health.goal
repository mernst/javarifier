package checkers.javari.quals:
annotation @ReadOnly: @java.lang.annotation.Retention(value=RUNTIME) @java.lang.annotation.Target(value={TYPE_USE})

package checkers.javari.quals:
annotation @Mutable: @java.lang.annotation.Retention(value=RUNTIME) @java.lang.annotation.Target(value={TYPE_USE})

package checkers.javari.quals:
annotation @ThisMutable: @java.lang.annotation.Retention(value=RUNTIME) @java.lang.annotation.Target(value={TYPE_USE})

package checkers.javari.quals:
annotation @PolyRead: @java.lang.annotation.Retention(value=RUNTIME) @java.lang.annotation.Target(value={TYPE_USE})

package :
class Health:

    field maxLevel:

    field maxTime:

    field seed:

    field printResult:

    field printMsgs:

    method <init>()V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5:
            type: @checkers.javari.quals.ReadOnly

    method main([Ljava/lang/String;)V:
        return:
        parameter #0:
            type: @checkers.javari.quals.ReadOnly
                inner-type 0, 0: @checkers.javari.quals.ReadOnly
        local 0 #0+335:
            type: @checkers.javari.quals.ReadOnly
                inner-type 0, 0: @checkers.javari.quals.ReadOnly
        local 1 #8+327:
        local 3 #20+315:
            type: @checkers.javari.quals.Mutable
        local 4 #25+310:
        local 6 #44+291:
        local 8 #47+41:
        local 8 #94+241:
            type: @checkers.javari.quals.ReadOnly
        local 9 #99+236:

    method parseCmdLine([Ljava/lang/String;)V:
        return:
        parameter #0:
            type: @checkers.javari.quals.ReadOnly
                inner-type 0, 0: @checkers.javari.quals.ReadOnly
        local 0 #0+236:
            type: @checkers.javari.quals.ReadOnly
                inner-type 0, 0: @checkers.javari.quals.ReadOnly
        local 2 #2+234:
        local 1 #26+188:
            type: @checkers.javari.quals.ReadOnly

    method usage()V:
        return:

    method <clinit>()V:
        return:

package :
class Hospital:

    field personnel:

    field freePersonnel:

    field numWaitingPatients:

    field waiting:
        type: @checkers.javari.quals.ThisMutable

    field assess:
        type: @checkers.javari.quals.ThisMutable

    field inside:
        type: @checkers.javari.quals.ThisMutable

    field up:
        type: @checkers.javari.quals.ReadOnly

    method <init>(I)V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0:
        local 0 #0+71:
            type: @checkers.javari.quals.Mutable
        local 1 #0+71:

    method putInHospital(LPatient;)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
            type: @checkers.javari.quals.Mutable
        local 0 #0+67:
            type: @checkers.javari.quals.Mutable
        local 1 #0+67:
            type: @checkers.javari.quals.Mutable
        local 2 #5+62:

    method checkPatientsInside(LList;)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
            type: @checkers.javari.quals.Mutable
        local 0 #0+71:
            type: @checkers.javari.quals.Mutable
        local 1 #0+71:
            type: @checkers.javari.quals.Mutable
        local 2 #8+62:
            type: @checkers.javari.quals.Mutable
                inner-type 3, 0: @checkers.javari.quals.Mutable
        local 3 #27+40:
            type: @checkers.javari.quals.Mutable

    method checkPatientsAssess(LVillage;)LList;:
        return: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
            type: @checkers.javari.quals.Mutable
        local 0 #0+132:
            type: @checkers.javari.quals.Mutable
        local 1 #0+132:
            type: @checkers.javari.quals.Mutable
        local 2 #8+124:
            type: @checkers.javari.quals.Mutable
        local 3 #16+114:
            type: @checkers.javari.quals.Mutable
                inner-type 3, 0: @checkers.javari.quals.Mutable
        local 4 #36+91:
            type: @checkers.javari.quals.Mutable

    method checkPatientsWaiting()V:
        return:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+92:
            type: @checkers.javari.quals.Mutable
        local 1 #8+83:
            type: @checkers.javari.quals.Mutable
                inner-type 3, 0: @checkers.javari.quals.Mutable
        local 2 #27+61:
            type: @checkers.javari.quals.Mutable

package :
class List:

    field head:
        type: @checkers.javari.quals.ThisMutable

    field tail:
        type: @checkers.javari.quals.ThisMutable

    method <init>()V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+15:
            type: @checkers.javari.quals.Mutable

    method add(LPatient;)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
            type: @checkers.javari.quals.ReadOnly
        local 0 #0+39:
            type: @checkers.javari.quals.Mutable
        local 1 #0+39:
            type: @checkers.javari.quals.ReadOnly
        local 2 #10+29:
            type: @checkers.javari.quals.Mutable

    method delete(Ljava/lang/Object;)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
            type: @checkers.javari.quals.ReadOnly
        local 0 #0+92:
            type: @checkers.javari.quals.Mutable
        local 1 #0+92:
            type: @checkers.javari.quals.ReadOnly
        local 2 #52+40:
            type: @checkers.javari.quals.Mutable
        local 3 #60+31:
            type: @checkers.javari.quals.Mutable

    method elements()Ljava/util/Enumeration;:
        return: @checkers.javari.quals.Mutable
            inner-type 3, 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10:
            type: @checkers.javari.quals.ReadOnly

package :
class List$ListEnumerator:

    field curNode:
        type: @checkers.javari.quals.ReadOnly

    field this$0:
        type: @checkers.javari.quals.ReadOnly

    method <init>(LList;LList;)V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0:
            type: @checkers.javari.quals.ReadOnly
        parameter #1:
            type: @checkers.javari.quals.ReadOnly
        local 0 #0+18:
            type: @checkers.javari.quals.Mutable
        local 1 #0+18:
            type: @checkers.javari.quals.ReadOnly
        local 2 #0+18:
            type: @checkers.javari.quals.ReadOnly

    method nextElement()Ljava/lang/Object;:
        return: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+21:
            type: @checkers.javari.quals.Mutable
        local 1 #8+13:
            type: @checkers.javari.quals.ReadOnly

    method hasMoreElements()Z:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+13:
            type: @checkers.javari.quals.ReadOnly

package :
class List$ListNode:

    field next:
        type: @checkers.javari.quals.ThisMutable

    field object:
        type: @checkers.javari.quals.ReadOnly

    field this$0:
        type: @checkers.javari.quals.ReadOnly

    method <init>(LList;Ljava/lang/Object;)V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0:
            type: @checkers.javari.quals.ReadOnly
        parameter #1:
            type: @checkers.javari.quals.ReadOnly
        local 0 #0+20:
            type: @checkers.javari.quals.Mutable
        local 1 #0+20:
            type: @checkers.javari.quals.ReadOnly
        local 2 #0+20:
            type: @checkers.javari.quals.ReadOnly

package :
class Patient:

    field hospitalsVisited:

    field time:

    field timeLeft:

    field home:
        type: @checkers.javari.quals.ReadOnly

    method <init>(LVillage;)V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0:
            type: @checkers.javari.quals.ReadOnly
        local 0 #0+25:
            type: @checkers.javari.quals.Mutable
        local 1 #0+25:
            type: @checkers.javari.quals.ReadOnly

package :
class Results:

    field totalPatients:

    field totalTime:

    field totalHospitals:

    method <init>()V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5:
            type: @checkers.javari.quals.ReadOnly

package :
class Village:

    field forward:
        type: @checkers.javari.quals.ThisMutable
            inner-type 0, 0: @checkers.javari.quals.ThisMutable

    field back:
        type: @checkers.javari.quals.ReadOnly

    field returned:
        type: @checkers.javari.quals.ThisMutable

    field hospital:
        type: @checkers.javari.quals.ThisMutable

    field label:

    field seed:

    field IA:

    field IM:

    field AM:

    field IQ:

    field IR:

    field MASK:

    method <init>(IILVillage;I)V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1:
        parameter #2:
            type: @checkers.javari.quals.ReadOnly
        parameter #3:
        local 0 #0+60:
            type: @checkers.javari.quals.Mutable
        local 1 #0+60:
        local 2 #0+60:
        local 3 #0+60:
            type: @checkers.javari.quals.ReadOnly
        local 4 #0+60:

    method addVillage(ILVillage;)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
        parameter #1:
            type: @checkers.javari.quals.Mutable
        local 0 #0+8:
            type: @checkers.javari.quals.Mutable
        local 1 #0+8:
        local 2 #0+8:
            type: @checkers.javari.quals.Mutable

    method staysHere()Z:
        return:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+39:
            type: @checkers.javari.quals.Mutable
        local 1 #8+31:

    method createVillage(IILVillage;I)LVillage;:
        return: @checkers.javari.quals.Mutable
        parameter #0:
        parameter #1:
        parameter #2:
            type: @checkers.javari.quals.ReadOnly
        parameter #3:
        local 0 #0+64:
        local 1 #0+64:
        local 2 #0+64:
            type: @checkers.javari.quals.ReadOnly
        local 3 #0+64:
        local 4 #19+45:
            type: @checkers.javari.quals.Mutable
        local 5 #22+39:
        local 6 #46+9:
            type: @checkers.javari.quals.Mutable

    method simulate()LList;:
        return: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+141:
            type: @checkers.javari.quals.Mutable
        local 1 #5+136:
            type: @checkers.javari.quals.Mutable
                inner-type 0, 0: @checkers.javari.quals.ReadOnly
        local 2 #7+28:
        local 3 #18+11:
            type: @checkers.javari.quals.Mutable
        local 2 #37+58:
        local 3 #45+44:
            type: @checkers.javari.quals.ReadOnly
        local 4 #55+34:
            type: @checkers.javari.quals.Mutable
                inner-type 3, 0: @checkers.javari.quals.Mutable
        local 5 #77+9:
            type: @checkers.javari.quals.Mutable
        local 2 #115+26:
            type: @checkers.javari.quals.ReadOnly
        local 3 #127+14:
            type: @checkers.javari.quals.Mutable

    method getResults()LResults;:
        return: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+181:
            type: @checkers.javari.quals.ReadOnly
        local 1 #5+176:
            type: @checkers.javari.quals.Mutable
                inner-type 0, 0: @checkers.javari.quals.ReadOnly
        local 2 #7+28:
        local 3 #18+11:
            type: @checkers.javari.quals.ReadOnly
        local 2 #43+138:
            type: @checkers.javari.quals.Mutable
        local 3 #45+61:
        local 3 #114+65:
            type: @checkers.javari.quals.Mutable
                inner-type 3, 0: @checkers.javari.quals.ReadOnly
        local 4 #134+42:
            type: @checkers.javari.quals.ReadOnly

    method generatePatient()LPatient;:
        return: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+39:
            type: @checkers.javari.quals.Mutable
        local 1 #8+31:
        local 2 #19+20:
            type: @checkers.javari.quals.PolyRead

    method toString()Ljava/lang/String;:
        return: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+15:
            type: @checkers.javari.quals.ReadOnly

    method myRand(I)F:
        return:
        parameter #0:
        local 0 #0+51:
        local 1 #10+41:
        local 2 #49+2:

