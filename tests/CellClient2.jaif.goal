package checkers.javari.quals:
annotation @Mutable: @java.lang.annotation.Retention(value=RUNTIME) @java.lang.annotation.Target(value={TYPE_USE})

package checkers.javari.quals:
annotation @ReadOnly: @java.lang.annotation.Retention(value=RUNTIME) @java.lang.annotation.Target(value={TYPE_USE})

package checkers.javari.quals:
annotation @ThisMutable: @java.lang.annotation.Retention(value=RUNTIME) @java.lang.annotation.Target(value={TYPE_USE})

package :
class CellClient2:
    bound 0 &0: @checkers.javari.quals.Mutable

    field f:
        type: @checkers.javari.quals.ThisMutable
            inner-type 3, 0: @checkers.javari.quals.ReadOnly

    method <init>(LCellClient2$Day;)V:
        return: @checkers.javari.quals.ReadOnly
        parameter #0:
            type: @checkers.javari.quals.ReadOnly
        local 0 #0+24:
            type: @checkers.javari.quals.Mutable
                inner-type 3, 0: @checkers.javari.quals.ReadOnly
        local 1 #0+24:
            type: @checkers.javari.quals.ReadOnly

    method getF()LCellClient2$Cell;:
        return: @checkers.javari.quals.ReadOnly
            inner-type 3, 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5:
            type: @checkers.javari.quals.ReadOnly
                inner-type 3, 0: @checkers.javari.quals.ReadOnly

    method foo()V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+19:
            type: @checkers.javari.quals.ReadOnly
                inner-type 3, 0: @checkers.javari.quals.ReadOnly
        local 1 #5+14:
            type: @checkers.javari.quals.ReadOnly
                inner-type 3, 0: @checkers.javari.quals.ReadOnly
        local 2 #13+6:
            type: @checkers.javari.quals.Mutable

    method setDay(LCellClient2$Day;)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
            type: @checkers.javari.quals.ReadOnly
        local 0 #0+9:
            type: @checkers.javari.quals.Mutable
                inner-type 3, 0: @checkers.javari.quals.ReadOnly
        local 1 #0+9:
            type: @checkers.javari.quals.ReadOnly

package :
class CellClient2$Cell:
    bound 0 &0: @checkers.javari.quals.ReadOnly

    field val:
        type: @checkers.javari.quals.ReadOnly

    method <init>()V:
        return: @checkers.javari.quals.ReadOnly
        local 0 #0+5:
            type: @checkers.javari.quals.ReadOnly
                inner-type 3, 0: @checkers.javari.quals.ReadOnly

    method getVal()Ljava/lang/Object;:
        return: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5:
            type: @checkers.javari.quals.ReadOnly
                inner-type 3, 0: @checkers.javari.quals.ReadOnly

    method setVal(Ljava/lang/Object;)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
            type: @checkers.javari.quals.ReadOnly
        local 0 #0+6:
            type: @checkers.javari.quals.Mutable
                inner-type 3, 0: @checkers.javari.quals.ReadOnly
        local 1 #0+6:
            type: @checkers.javari.quals.ReadOnly

package :
class CellClient2$Day:

    field day:

    method <init>()V:
        return: @checkers.javari.quals.ReadOnly
        local 0 #0+5:
            type: @checkers.javari.quals.ReadOnly

    method <init>(I)V:
        return: @checkers.javari.quals.ReadOnly
        parameter #0:
        local 0 #0+10:
            type: @checkers.javari.quals.Mutable
        local 1 #0+10:

    method getDay()I:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5:
            type: @checkers.javari.quals.ReadOnly

    method setDay(I)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
        local 0 #0+6:
            type: @checkers.javari.quals.Mutable
        local 1 #0+6:

