package checkers.javari.quals:
annotation @ReadOnly: @java.lang.annotation.Retention(value=RUNTIME) @java.lang.annotation.Target(value={TYPE_USE})

package checkers.javari.quals:
annotation @PolyRead: @java.lang.annotation.Retention(value=RUNTIME) @java.lang.annotation.Target(value={TYPE_USE})

package checkers.javari.quals:
annotation @Mutable: @java.lang.annotation.Retention(value=RUNTIME) @java.lang.annotation.Target(value={TYPE_USE})

package :
class VectorCopyInto:

    method <init>()V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5:
            type: @checkers.javari.quals.ReadOnly

    method getMessageChain2(Ljava/util/Vector;)[Ljava/lang/String;:
        return: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0:
            type: @checkers.javari.quals.PolyRead
                inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+15:
            type: @checkers.javari.quals.ReadOnly
        local 1 #0+15:
            type: @checkers.javari.quals.PolyRead
                inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #8+7:
            type: @checkers.javari.quals.Mutable
                inner-type 0: @checkers.javari.quals.ReadOnly

