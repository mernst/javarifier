package checkers.javari.quals:
annotation @ReadOnly: @java.lang.annotation.Retention(value=RUNTIME) @java.lang.annotation.Target(value={TYPE_USE})

package checkers.javari.quals:
annotation @Mutable: @java.lang.annotation.Retention(value=RUNTIME) @java.lang.annotation.Target(value={TYPE_USE})

package checkers.javari.quals:
annotation @ThisMutable: @java.lang.annotation.Retention(value=RUNTIME) @java.lang.annotation.Target(value={TYPE_USE})

package :
class GenericFieldAndParameter:

    field set:
        type: @checkers.javari.quals.ThisMutable
            inner-type 3, 0: @checkers.javari.quals.ReadOnly

    field ints:
        type: @checkers.javari.quals.ReadOnly
            inner-type 3, 0: @checkers.javari.quals.ReadOnly

    method <init>()V:
        return: @checkers.javari.quals.ReadOnly
        local 0 #0+5:
            type: @checkers.javari.quals.ReadOnly

    method foo(Ljava/util/Set;)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
            type: @checkers.javari.quals.ReadOnly
                inner-type 3, 0: @checkers.javari.quals.ReadOnly
        local 0 #0+18:
            type: @checkers.javari.quals.Mutable
        local 1 #0+18:
            type: @checkers.javari.quals.ReadOnly
                inner-type 3, 0: @checkers.javari.quals.ReadOnly

    method foo(Ljava/util/ArrayList;)V:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        parameter #0:
            type: @checkers.javari.quals.ReadOnly
                inner-type 3, 0: @checkers.javari.quals.Mutable
        local 0 #0+13:
            type: @checkers.javari.quals.ReadOnly
        local 1 #0+13:
            type: @checkers.javari.quals.ReadOnly
                inner-type 3, 0: @checkers.javari.quals.Mutable

package :
class GenericFieldAndParameter$Day:

    field day:

    method <init>()V:
        return: @checkers.javari.quals.ReadOnly
        local 0 #0+5:
            type: @checkers.javari.quals.ReadOnly

    method <init>(I)V:
        return: @checkers.javari.quals.ReadOnly
        parameter #0:
        local 0 #0+10:
            type: @checkers.javari.quals.Mutable
        local 1 #0+10:

    method getDay()I:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5:
            type: @checkers.javari.quals.ReadOnly

    method setDay(I)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
        local 0 #0+6:
            type: @checkers.javari.quals.Mutable
        local 1 #0+6:

package :
class Red:

    field i:

    method <init>(I)V:
        return: @checkers.javari.quals.ReadOnly
        parameter #0:
        local 0 #0+10:
            type: @checkers.javari.quals.Mutable
        local 1 #0+10:

    method set(I)V:
        return:
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
        local 0 #0+6:
            type: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method get()I:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5:
            type: @checkers.javari.quals.ReadOnly

