package checkers.javari.quals:
annotation @ReadOnly: @java.lang.annotation.Retention(value=RUNTIME) @java.lang.annotation.Target(value={TYPE_USE})

package checkers.javari.quals:
annotation @Mutable: @java.lang.annotation.Retention(value=RUNTIME) @java.lang.annotation.Target(value={TYPE_USE})

package :
class Bar2:

    field x:
        type: @checkers.javari.quals.ReadOnly

    method <init>()V:
        return: @checkers.javari.quals.ReadOnly
        local 0 #0+10:
            type: @checkers.javari.quals.Mutable

    method foo()I:
        return:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8:
            type: @checkers.javari.quals.ReadOnly

    method fooChange(Ljava/lang/Integer;)Ljava/lang/Integer;:
        return: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        parameter #0:
            type: @checkers.javari.quals.ReadOnly
        local 0 #0+7:
            type: @checkers.javari.quals.Mutable
        local 1 #0+7:
            type: @checkers.javari.quals.ReadOnly

    method fooReadOnly()Ljava/lang/Integer;:
        return: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5:
            type: @checkers.javari.quals.ReadOnly

    method fooNull()Ljava/lang/Integer;:
        return: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10:
            type: @checkers.javari.quals.Mutable

