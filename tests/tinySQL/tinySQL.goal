package checkers.javari.quals:
annotation visible @ReadOnly:

package checkers.javari.quals:
annotation visible @Mutable:

package checkers.javari.quals:
annotation visible @PolyRead:

package checkers.javari.quals:
annotation visible @ThisMutable:

package ORG.as220.tinySQL:
class Utils:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method intToLittleEndian(I)[B:
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0:
        local 0 #0+34:
        local 1 #4+30:
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #6+26:

    method shortToLittleEndian(S)[B:
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0:
        local 0 #0+35:
        local 1 #4+31:
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #6+27:

    method vax_to_long([B)D:
        parameter #0:
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+48:
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #45+3:

    method vax_to_short([B)I:
        parameter #0:
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+18:
            inner-type 0: @checkers.javari.quals.ReadOnly

    method fixByte(B)S:
        parameter #0:
        local 0 #0+13:

    method forceToSize(Ljava/lang/String;IBLjava/lang/String;)[B:
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        parameter #3: @checkers.javari.quals.Mutable
        local 0 #0+89: @checkers.javari.quals.Mutable
        local 1 #0+89:
        local 2 #0+89:
        local 3 #0+89: @checkers.javari.quals.Mutable
        local 4 #23+66:
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #62+27:
            inner-type 0: @checkers.javari.quals.Mutable

    method forceToSize(Ljava/lang/String;IC)[C:
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        local 0 #0+74: @checkers.javari.quals.Mutable
        local 1 #0+74:
        local 2 #0+74:
        local 3 #21+53:
            inner-type 0: @checkers.javari.quals.Mutable

    method forceToSizeLeft(Ljava/lang/String;IBLjava/lang/String;)[B:
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        parameter #3: @checkers.javari.quals.Mutable
        local 0 #0+96: @checkers.javari.quals.Mutable
        local 1 #0+96:
        local 2 #0+96:
        local 3 #0+96: @checkers.javari.quals.Mutable
        local 4 #23+73:
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #62+34:
            inner-type 0: @checkers.javari.quals.Mutable
        local 6 #71+25:

    method forceToSizeLeft(Ljava/lang/String;IC)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        local 0 #0+124: @checkers.javari.quals.Mutable
        local 1 #0+124:
        local 2 #0+124:
        local 3 #27+3: @checkers.javari.quals.ReadOnly
        local 3 #39+85: @checkers.javari.quals.Mutable
        local 4 #67+57: @checkers.javari.quals.Mutable
        local 5 #75+49:
        local 6 #81+43:
            inner-type 0: @checkers.javari.quals.Mutable
        local 7 #84+19:

    method delFile(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+80: @checkers.javari.quals.Mutable
        local 1 #9+71: @checkers.javari.quals.Mutable

    method delFile(Ljava/lang/String;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+85: @checkers.javari.quals.Mutable
        local 1 #0+85: @checkers.javari.quals.Mutable
        local 2 #32+53: @checkers.javari.quals.Mutable

    method renameFile(Ljava/lang/String;Ljava/lang/String;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+122: @checkers.javari.quals.Mutable
        local 1 #0+122: @checkers.javari.quals.Mutable
        local 2 #37+85: @checkers.javari.quals.Mutable
        local 3 #46+76: @checkers.javari.quals.Mutable
        local 4 #119+3:

    method stripPathAndExtension(Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+49: @checkers.javari.quals.Mutable
        local 1 #4+45: @checkers.javari.quals.Mutable
        local 2 #10+39:
        local 3 #29+20:
        local 4 #46+3: @checkers.javari.quals.ReadOnly

    method getAllFiles(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Vector;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+103: @checkers.javari.quals.Mutable
        local 1 #0+103: @checkers.javari.quals.Mutable
        local 2 #8+95: @checkers.javari.quals.Mutable
        local 3 #18+85: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 4 #25+78: @checkers.javari.quals.Mutable
        local 5 #34+69: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 6 #37+66: @checkers.javari.quals.Mutable
        local 7 #50+51:
        local 8 #66+24: @checkers.javari.quals.Mutable

    method printResultSet(Ljava/sql/ResultSet;Ljava/io/PrintStream;)I:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+359: @checkers.javari.quals.Mutable
        local 1 #0+359: @checkers.javari.quals.Mutable
        local 2 #7+352: @checkers.javari.quals.Mutable
        local 3 #14+345:
        local 4 #20+339: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #25+334:
            inner-type 0: @checkers.javari.quals.Mutable
        local 6 #28+55:
        local 6 #92+267: @checkers.javari.quals.Mutable
        local 7 #95+55:
        local 7 #168+191: @checkers.javari.quals.Mutable
        local 8 #171+51:
        local 9 #177+27:
        local 8 #234+125:
        local 9 #252+83:
        local 10 #265+61: @checkers.javari.quals.Mutable

    method format(Ljava/lang/String;I)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        local 0 #0+60: @checkers.javari.quals.Mutable
        local 1 #0+60:
        local 3 #17+34: @checkers.javari.quals.Mutable
        local 4 #23+20:
        local 2 #48+3: @checkers.javari.quals.ReadOnly
        local 2 #58+2: @checkers.javari.quals.PolyRead

package ORG.as220.tinySQL:
class Utils$1$MyDir:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method createNewFolder(Ljava/io/File;)Ljava/io/File;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2: @checkers.javari.quals.ReadOnly

    method getRoots()[Ljava/io/File;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method isHiddenFile(Ljava/io/File;)Z:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2: @checkers.javari.quals.ReadOnly

    method isRoot(Ljava/io/File;)Z:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.parser:
class ParseException:

    field specialConstructor:

    field currentToken: @checkers.javari.quals.ThisMutable

    field expectedTokenSequences:
        inner-type 0: @checkers.javari.quals.ReadOnly
        inner-type 1: @checkers.javari.quals.ReadOnly

    field tokenImage: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field eol: @checkers.javari.quals.ThisMutable

    method <init>(LORG/as220/tinySQL/parser/Token;[[I[Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
            inner-type 0: @checkers.javari.quals.ReadOnly
            inner-type 1: @checkers.javari.quals.ReadOnly
        parameter #2: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+38: @checkers.javari.quals.Mutable
        local 1 #0+38: @checkers.javari.quals.Mutable
        local 2 #0+38:
            inner-type 0: @checkers.javari.quals.ReadOnly
            inner-type 1: @checkers.javari.quals.ReadOnly
        local 3 #0+38: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+21: @checkers.javari.quals.Mutable

    method <init>(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+22: @checkers.javari.quals.Mutable
        local 1 #0+22: @checkers.javari.quals.Mutable

    method getMessage()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+473: @checkers.javari.quals.Mutable
        local 1 #15+458: @checkers.javari.quals.Mutable
        local 2 #17+456:
        local 3 #19+158:
        local 4 #44+55:
        local 3 #180+293: @checkers.javari.quals.Mutable
        local 4 #189+284: @checkers.javari.quals.Mutable
        local 5 #192+106:

    method add_escapes(Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+292: @checkers.javari.quals.ReadOnly
        local 1 #0+292: @checkers.javari.quals.Mutable
        local 2 #8+284: @checkers.javari.quals.Mutable
        local 4 #11+276:
        local 3 #195+83:
        local 5 #229+40: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL.parser:
class SimpleCharStream:

    field staticFlag:

    field bufsize:

    field available:

    field tokenBegin:

    field bufpos:

    field bufline:
        inner-type 0: @checkers.javari.quals.ThisMutable

    field bufcolumn:
        inner-type 0: @checkers.javari.quals.ThisMutable

    field column:

    field line:

    field prevCharIsCR:

    field prevCharIsLF:

    field inputStream: @checkers.javari.quals.ThisMutable

    field buffer:
        inner-type 0: @checkers.javari.quals.ThisMutable

    field maxNextCharInd:

    field inBuf:

    method ExpandBuff(Z)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+359: @checkers.javari.quals.Mutable
        local 1 #0+359:
        local 2 #11+348:
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #22+337:
            inner-type 0: @checkers.javari.quals.Mutable
        local 4 #34+325:
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #320+13: @checkers.javari.quals.Mutable

    method FillBuff()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+224: @checkers.javari.quals.Mutable
        local 1 #160+30:
        local 2 #191+33: @checkers.javari.quals.ReadOnly

    method BeginToken()C:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+20: @checkers.javari.quals.Mutable
        local 1 #10+10:

    method UpdateLineColumn(C)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+191: @checkers.javari.quals.Mutable
        local 1 #0+191:

    method readChar()C:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+89: @checkers.javari.quals.Mutable
        local 1 #82+7:

    method getColumn()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly

    method getLine()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly

    method getEndColumn()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly

    method getEndLine()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly

    method getBeginColumn()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly

    method getBeginLine()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly

    method backup(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+38: @checkers.javari.quals.Mutable
        local 1 #0+38:

    method <init>(Ljava/io/Reader;III)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        parameter #3:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+92: @checkers.javari.quals.Mutable
        local 1 #0+92: @checkers.javari.quals.Mutable
        local 2 #0+92:
        local 3 #0+92:
        local 4 #0+92:

    method <init>(Ljava/io/Reader;II)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.Mutable
        local 2 #0+11:
        local 3 #0+11:

    method <init>(Ljava/io/Reader;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.Mutable

    method ReInit(Ljava/io/Reader;III)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        parameter #3:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+100: @checkers.javari.quals.Mutable
        local 1 #0+100: @checkers.javari.quals.Mutable
        local 2 #0+100:
        local 3 #0+100:
        local 4 #0+100:

    method ReInit(Ljava/io/Reader;II)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11: @checkers.javari.quals.Mutable
        local 2 #0+11:
        local 3 #0+11:

    method ReInit(Ljava/io/Reader;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11: @checkers.javari.quals.Mutable

    method <init>(Ljava/io/InputStream;III)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        parameter #3:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+18: @checkers.javari.quals.ReadOnly
        local 1 #0+18: @checkers.javari.quals.Mutable
        local 2 #0+18:
        local 3 #0+18:
        local 4 #0+18:

    method <init>(Ljava/io/InputStream;II)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.Mutable
        local 2 #0+11:
        local 3 #0+11:

    method <init>(Ljava/io/InputStream;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.Mutable

    method ReInit(Ljava/io/InputStream;III)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        parameter #3:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+18: @checkers.javari.quals.Mutable
        local 1 #0+18: @checkers.javari.quals.Mutable
        local 2 #0+18:
        local 3 #0+18:
        local 4 #0+18:

    method ReInit(Ljava/io/InputStream;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11: @checkers.javari.quals.Mutable

    method ReInit(Ljava/io/InputStream;II)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11: @checkers.javari.quals.Mutable
        local 2 #0+11:
        local 3 #0+11:

    method GetImage()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+97: @checkers.javari.quals.Mutable

    method GetSuffix(I)[C:
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+90: @checkers.javari.quals.Mutable
        local 1 #0+90:
        local 2 #4+86:
            inner-type 0: @checkers.javari.quals.Mutable

    method Done()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+16: @checkers.javari.quals.Mutable

    method adjustBeginLineColumn(II)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+283: @checkers.javari.quals.Mutable
        local 1 #0+283:
        local 2 #0+283:
        local 3 #5+278:
        local 4 #34+3:
        local 4 #60+223:
        local 5 #63+220:
        local 6 #66+217:
        local 7 #69+214:
        local 8 #72+211:
        local 9 #75+208:

package ORG.as220.tinySQL.parser:
class TinySQLParser:

    field token_source: @checkers.javari.quals.ThisMutable

    field jj_input_stream: @checkers.javari.quals.ThisMutable

    field token: @checkers.javari.quals.ThisMutable

    field jj_nt: @checkers.javari.quals.ThisMutable

    field jj_gen:

    field jj_la1:
        inner-type 0: @checkers.javari.quals.ThisMutable

    field jj_la1_0:
        inner-type 0: @checkers.javari.quals.ReadOnly

    field jj_la1_1:
        inner-type 0: @checkers.javari.quals.ReadOnly

    field jj_la1_2:
        inner-type 0: @checkers.javari.quals.ReadOnly

    field jj_la1_3:
        inner-type 0: @checkers.javari.quals.ReadOnly

    field jj_expentries: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field jj_expentry:
        inner-type 0: @checkers.javari.quals.ThisMutable

    field jj_kind:

    method createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+19: @checkers.javari.quals.Mutable
        local 1 #10+9: @checkers.javari.quals.ReadOnly

    method stripQuote(Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+22: @checkers.javari.quals.Mutable

    method getStatement(LORG/as220/tinySQL/tinySQLStatement;)LORG/as220/tinySQL/sqlparser/SQLStatement;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+270: @checkers.javari.quals.Mutable
        local 1 #0+270: @checkers.javari.quals.Mutable
        local 2 #2+268: @checkers.javari.quals.PolyRead

    method Select(LORG/as220/tinySQL/tinySQLStatement;)LORG/as220/tinySQL/sqlparser/SQLStatement;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+353: @checkers.javari.quals.Mutable
        local 1 #0+353: @checkers.javari.quals.Mutable
        local 2 #9+344: @checkers.javari.quals.Mutable
        local 3 #14+339:
        local 4 #17+336: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #20+333: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 6 #23+330: @checkers.javari.quals.Mutable
        local 7 #26+327: @checkers.javari.quals.ReadOnly
        local 8 #236+42:
        local 9 #251+14: @checkers.javari.quals.Mutable
        local 8 #281+42:
        local 9 #296+14: @checkers.javari.quals.Mutable
        local 8 #338+13: @checkers.javari.quals.Mutable

    method getSelectMod()I:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+75: @checkers.javari.quals.Mutable

    method getSelectColumns()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+466: @checkers.javari.quals.Mutable
        local 1 #2+464: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
        local 2 #4+462: @checkers.javari.quals.Mutable
        local 3 #6+460: @checkers.javari.quals.Mutable

    method getAlias(Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.PolyRead
        parameter #0: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+56: @checkers.javari.quals.Mutable
        local 1 #0+56: @checkers.javari.quals.PolyRead
        local 2 #2+54: @checkers.javari.quals.ReadOnly
        local 3 #4+52: @checkers.javari.quals.PolyRead

    method getName()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+92: @checkers.javari.quals.Mutable
        local 1 #2+90: @checkers.javari.quals.Mutable
        local 2 #4+88: @checkers.javari.quals.PolyRead

    method getJokerName()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+119: @checkers.javari.quals.Mutable
        local 1 #2+117: @checkers.javari.quals.PolyRead
        local 2 #4+115: @checkers.javari.quals.Mutable

    method getString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+117: @checkers.javari.quals.Mutable
        local 1 #2+115: @checkers.javari.quals.Mutable
        local 2 #4+113: @checkers.javari.quals.ReadOnly

    method getExpression(I)LORG/as220/tinySQL/sqlparser/LValue;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+232: @checkers.javari.quals.Mutable
        local 1 #0+232:
        local 2 #2+230: @checkers.javari.quals.Mutable
        local 3 #4+228: @checkers.javari.quals.ReadOnly
        local 4 #7+225: @checkers.javari.quals.ReadOnly
        local 5 #10+222: @checkers.javari.quals.Mutable
        local 6 #13+219: @checkers.javari.quals.ReadOnly

    method startTail(LORG/as220/tinySQL/sqlparser/LValue;LORG/as220/tinySQL/sqlparser/Expression;)LORG/as220/tinySQL/sqlparser/Expression;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+54: @checkers.javari.quals.Mutable
        local 1 #0+54: @checkers.javari.quals.Mutable
        local 2 #0+54: @checkers.javari.quals.Mutable
        local 3 #2+52: @checkers.javari.quals.Mutable
        local 4 #5+49: @checkers.javari.quals.Mutable

    method getLValue(I)LORG/as220/tinySQL/sqlparser/LValue;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+373: @checkers.javari.quals.Mutable
        local 1 #0+373:
        local 2 #2+371: @checkers.javari.quals.Mutable
        local 3 #4+369: @checkers.javari.quals.Mutable

    method getOperator()LORG/as220/tinySQL/sqlparser/Operator;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+399: @checkers.javari.quals.Mutable
        local 1 #2+397: @checkers.javari.quals.PolyRead

    method getSelectTables()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+127: @checkers.javari.quals.Mutable
        local 1 #2+125: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
        local 2 #4+123: @checkers.javari.quals.Mutable
        local 3 #6+121: @checkers.javari.quals.Mutable

    method getWhereClauseExpression()LORG/as220/tinySQL/sqlparser/LValue;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+17: @checkers.javari.quals.Mutable
        local 1 #2+15: @checkers.javari.quals.PolyRead

    method getOrderBy()LORG/as220/tinySQL/sqlparser/LValue;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+24: @checkers.javari.quals.Mutable
        local 1 #2+22: @checkers.javari.quals.ReadOnly

    method Update(LORG/as220/tinySQL/tinySQLStatement;)LORG/as220/tinySQL/sqlparser/SQLStatement;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+176: @checkers.javari.quals.Mutable
        local 1 #0+176: @checkers.javari.quals.Mutable
        local 2 #2+174: @checkers.javari.quals.Mutable
        local 3 #10+166: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 4 #19+157: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #22+154: @checkers.javari.quals.Mutable
        local 6 #98+78: @checkers.javari.quals.Mutable
        local 7 #107+29:
        local 7 #152+14: @checkers.javari.quals.Mutable

    method updateSetColsVals(Ljava/util/Vector;Ljava/util/Vector;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+128: @checkers.javari.quals.Mutable
        local 1 #0+128: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #0+128: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 3 #2+126: @checkers.javari.quals.ReadOnly
        local 4 #5+123: @checkers.javari.quals.ReadOnly

    method Insert(LORG/as220/tinySQL/tinySQLStatement;)LORG/as220/tinySQL/sqlparser/SQLStatement;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+232: @checkers.javari.quals.Mutable
        local 1 #0+232: @checkers.javari.quals.Mutable
        local 2 #2+230: @checkers.javari.quals.Mutable
        local 3 #10+222: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 4 #19+213: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #22+210: @checkers.javari.quals.Mutable
        local 6 #139+93: @checkers.javari.quals.Mutable
        local 7 #153+29:
        local 7 #185+31:

    method insertColsVals(Ljava/util/Vector;Ljava/util/Vector;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+76: @checkers.javari.quals.Mutable
        local 1 #0+76: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #0+76: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method insertSetColsVals(Ljava/util/Vector;Ljava/util/Vector;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+145: @checkers.javari.quals.Mutable
        local 1 #0+145: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #0+145: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 3 #2+143: @checkers.javari.quals.ReadOnly
        local 4 #5+140: @checkers.javari.quals.ReadOnly
        local 5 #14+131: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method insertValuesColsVals(Ljava/util/Vector;Ljava/util/Vector;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+181: @checkers.javari.quals.Mutable
        local 1 #0+181: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #0+181: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 3 #2+179: @checkers.javari.quals.ReadOnly
        local 4 #5+176: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly

    method getInsertValuesVal()Ljava/util/Vector;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+104: @checkers.javari.quals.Mutable
        local 1 #8+96: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #10+94: @checkers.javari.quals.ReadOnly

    method Delete(LORG/as220/tinySQL/tinySQLStatement;)LORG/as220/tinySQL/sqlparser/SQLStatement;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+114: @checkers.javari.quals.Mutable
        local 1 #0+114: @checkers.javari.quals.Mutable
        local 2 #2+112: @checkers.javari.quals.Mutable
        local 3 #4+110: @checkers.javari.quals.Mutable
        local 4 #77+37: @checkers.javari.quals.Mutable
        local 5 #98+13: @checkers.javari.quals.Mutable

    method ifExists()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+16: @checkers.javari.quals.Mutable

    method ifNotExists()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+23: @checkers.javari.quals.Mutable

    method DropTable(LORG/as220/tinySQL/tinySQLStatement;)LORG/as220/tinySQL/sqlparser/SQLStatement;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+88: @checkers.javari.quals.Mutable
        local 1 #0+88: @checkers.javari.quals.Mutable
        local 2 #2+86: @checkers.javari.quals.Mutable
        local 3 #4+84:
        local 4 #78+10: @checkers.javari.quals.Mutable

    method CompactTable(LORG/as220/tinySQL/tinySQLStatement;)LORG/as220/tinySQL/sqlparser/SQLStatement;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+37: @checkers.javari.quals.Mutable
        local 1 #0+37: @checkers.javari.quals.Mutable
        local 2 #2+35: @checkers.javari.quals.Mutable
        local 3 #30+7: @checkers.javari.quals.Mutable

    method CreateTable(LORG/as220/tinySQL/tinySQLStatement;)LORG/as220/tinySQL/sqlparser/SQLStatement;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+83: @checkers.javari.quals.Mutable
        local 1 #0+83: @checkers.javari.quals.ReadOnly
        local 2 #2+81: @checkers.javari.quals.Mutable
        local 3 #4+79: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 4 #38+45: @checkers.javari.quals.Mutable
        local 5 #50+33:
        local 6 #53+27:

    method getColumnDefinitions()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+99: @checkers.javari.quals.Mutable
        local 1 #8+91: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
        local 2 #10+89: @checkers.javari.quals.PolyRead

    method getColumnDefinition()LORG/as220/tinySQL/sqlparser/ColumnDefinition;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+314: @checkers.javari.quals.Mutable
        local 1 #2+312: @checkers.javari.quals.Mutable
        local 2 #4+310: @checkers.javari.quals.Mutable

    method getNumericType(LORG/as220/tinySQL/sqlparser/ColumnDefinition;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+234: @checkers.javari.quals.Mutable
        local 1 #0+234: @checkers.javari.quals.Mutable
        local 2 #2+232: @checkers.javari.quals.Mutable
        local 3 #4+230: @checkers.javari.quals.Mutable
        local 4 #58+3:
        local 4 #71+3:
        local 4 #85+3:
        local 4 #113+121:
        local 5 #202+32:
        local 6 #215+11:

    method getSimpleType(LORG/as220/tinySQL/sqlparser/ColumnDefinition;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+284: @checkers.javari.quals.Mutable
        local 1 #0+284: @checkers.javari.quals.Mutable
        local 2 #2+282: @checkers.javari.quals.ReadOnly
        local 3 #4+280: @checkers.javari.quals.ReadOnly
        local 4 #110+3:
        local 4 #124+3:
        local 4 #138+3:
        local 4 #151+3:
        local 4 #165+3:
        local 4 #179+3:
        local 4 #193+3:
        local 4 #207+3:
        local 4 #221+3:
        local 4 #235+3:
        local 4 #249+3:
        local 4 #277+7:

    method getCharType(LORG/as220/tinySQL/sqlparser/ColumnDefinition;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+251: @checkers.javari.quals.Mutable
        local 1 #0+251: @checkers.javari.quals.Mutable
        local 2 #2+249: @checkers.javari.quals.Mutable
        local 3 #4+247:

    method AlterTable(LORG/as220/tinySQL/tinySQLStatement;)LORG/as220/tinySQL/sqlparser/SQLStatement;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+193: @checkers.javari.quals.Mutable
        local 1 #0+193: @checkers.javari.quals.Mutable
        local 2 #2+191: @checkers.javari.quals.Mutable
        local 3 #50+3: @checkers.javari.quals.ReadOnly
        local 3 #115+3: @checkers.javari.quals.ReadOnly
        local 3 #125+3: @checkers.javari.quals.ReadOnly
        local 3 #135+3: @checkers.javari.quals.ReadOnly
        local 3 #191+2: @checkers.javari.quals.PolyRead

    method AlterTableAddColumn(LORG/as220/tinySQL/tinySQLStatement;Ljava/lang/String;)LORG/as220/tinySQL/sqlparser/SQLStatement;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+117: @checkers.javari.quals.Mutable
        local 1 #0+117: @checkers.javari.quals.Mutable
        local 2 #0+117: @checkers.javari.quals.Mutable
        local 3 #2+115: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 4 #72+45: @checkers.javari.quals.Mutable
        local 5 #84+33:
        local 6 #87+27:

    method AlterTableDropColumn(LORG/as220/tinySQL/tinySQLStatement;Ljava/lang/String;)LORG/as220/tinySQL/sqlparser/SQLStatement;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+117: @checkers.javari.quals.Mutable
        local 1 #0+117: @checkers.javari.quals.Mutable
        local 2 #0+117: @checkers.javari.quals.Mutable
        local 3 #2+115: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 4 #72+45: @checkers.javari.quals.Mutable
        local 5 #84+33:
        local 6 #87+27:

    method AlterTableRenameColumn(LORG/as220/tinySQL/tinySQLStatement;Ljava/lang/String;)LORG/as220/tinySQL/sqlparser/SQLStatement;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+142: @checkers.javari.quals.Mutable
        local 1 #0+142: @checkers.javari.quals.Mutable
        local 2 #0+142: @checkers.javari.quals.Mutable
        local 3 #2+140: @checkers.javari.quals.Mutable
        local 4 #5+137: @checkers.javari.quals.ReadOnly
        local 5 #125+17: @checkers.javari.quals.Mutable

    method AlterCreateTable(LORG/as220/tinySQL/tinySQLStatement;)LORG/as220/tinySQL/sqlparser/SQLStatement;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+27: @checkers.javari.quals.Mutable
        local 1 #0+27: @checkers.javari.quals.Mutable
        local 2 #2+25: @checkers.javari.quals.Mutable
        local 3 #17+10: @checkers.javari.quals.Mutable

    method getNames()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+88: @checkers.javari.quals.Mutable
        local 1 #8+80: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
        local 2 #10+78: @checkers.javari.quals.PolyRead

    method <init>(Ljava/io/InputStream;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+595: @checkers.javari.quals.Mutable
        local 1 #0+595: @checkers.javari.quals.Mutable
        local 2 #575+19:

    method ReInit(Ljava/io/InputStream;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+78: @checkers.javari.quals.Mutable
        local 1 #0+78: @checkers.javari.quals.Mutable
        local 2 #58+19:

    method <init>(Ljava/io/Reader;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+595: @checkers.javari.quals.Mutable
        local 1 #0+595: @checkers.javari.quals.Mutable
        local 2 #575+19:

    method ReInit(Ljava/io/Reader;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+78: @checkers.javari.quals.Mutable
        local 1 #0+78: @checkers.javari.quals.Mutable
        local 2 #58+19:

    method <init>(LORG/as220/tinySQL/parser/TinySQLParserTokenManager;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+571: @checkers.javari.quals.Mutable
        local 1 #0+571: @checkers.javari.quals.Mutable
        local 2 #551+19:

    method ReInit(LORG/as220/tinySQL/parser/TinySQLParserTokenManager;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+62: @checkers.javari.quals.Mutable
        local 1 #0+62: @checkers.javari.quals.Mutable
        local 2 #42+19:

    method jj_consume_token(I)LORG/as220/tinySQL/parser/Token;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+102: @checkers.javari.quals.Mutable
        local 1 #0+102:
        local 2 #5+97: @checkers.javari.quals.Mutable

    method getNextToken()LORG/as220/tinySQL/parser/Token;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+63: @checkers.javari.quals.Mutable

    method getToken(I)LORG/as220/tinySQL/parser/Token;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+48: @checkers.javari.quals.Mutable
        local 1 #0+48:
        local 2 #5+43: @checkers.javari.quals.Mutable
        local 3 #7+39:

    method generateParseException()LORG/as220/tinySQL/parser/ParseException;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+273: @checkers.javari.quals.Mutable
        local 1 #12+261:
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #14+16:
        local 2 #51+116:
        local 3 #69+89:
        local 2 #169+43:
        local 2 #224+49:
            inner-type 0: @checkers.javari.quals.Mutable
            inner-type 1: @checkers.javari.quals.ReadOnly
        local 3 #226+31:

    method enable_tracing()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly

    method disable_tracing()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.parser:
class TinySQLParser$AliasedItem:

    field item: @checkers.javari.quals.ThisMutable

    field alias: @checkers.javari.quals.ThisMutable

    field this$0: @checkers.javari.quals.ReadOnly

    method <init>(LORG/as220/tinySQL/parser/TinySQLParser;LORG/as220/tinySQL/sqlparser/LValue;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+20: @checkers.javari.quals.Mutable
        local 2 #0+20: @checkers.javari.quals.Mutable
        local 3 #0+20: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL.parser:
class TinySQLParser$AliasedString:

    field item: @checkers.javari.quals.ThisMutable

    field alias: @checkers.javari.quals.ThisMutable

    field this$0: @checkers.javari.quals.ReadOnly

    method <init>(LORG/as220/tinySQL/parser/TinySQLParser;Ljava/lang/String;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+20: @checkers.javari.quals.Mutable
        local 2 #0+20: @checkers.javari.quals.Mutable
        local 3 #0+20: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL.parser:
class TinySQLParserConstants:

    field EOF:

    field WHITESPACE:

    field LETTER:

    field NON_ZERO_DIGIT:

    field DIGIT:

    field HEX_DIGIT:

    field BINARY_DIGIT:

    field UNSIGNED_INTEGER:

    field EXPONENT_PART:

    field NEWLINE:

    field NONQUOTE_CHARACTER:

    field COMMA:

    field PERIOD:

    field COLON:

    field QUOTE:

    field DQUOTE:

    field SEMICOLON:

    field L_PAREN:

    field R_PAREN:

    field QUEST:

    field ADD:

    field AND:

    field ALL:

    field ALTER:

    field AS:

    field ASC:

    field BY:

    field COLUMN:

    field COMPACT:

    field CREATE:

    field DELETE:

    field DESC:

    field DISTINCT:

    field DROP:

    field EXIST:

    field EXISTS:

    field FROM:

    field GROUP:

    field IF:

    field INSERT:

    field INTO:

    field LIMIT:

    field NOT:

    field NULL:

    field OR:

    field ORDER:

    field RENAME:

    field SELECT:

    field SET:

    field TABLE:

    field TO:

    field UPDATE:

    field VALUES:

    field WHERE:

    field CHAR:

    field INT:

    field NUMERIC:

    field DATE:

    field BOOLEAN:

    field FLOAT:

    field BIT:

    field DECIMAL:

    field DOUBLE:

    field REAL:

    field BIGINT:

    field SMALLINT:

    field TINYINT:

    field VARCHAR:

    field LONGVARCHAR:

    field BINARY:

    field VARBINARY:

    field LONGVARBINARY:

    field TIME:

    field TIMESTAMP:

    field BLOB:

    field CLOB:

    field PLUS:

    field MINUS:

    field MULT:

    field DIV:

    field ASSIGN:

    field EQUALS:

    field NOT_EQUALS:

    field LT_EQUALS:

    field GT_EQUALS:

    field LT:

    field GT:

    field BETWEEN:

    field NBETWEEN:

    field LIKE:

    field IDENTIFIER:

    field QUOTED_IDENTIFIER:

    field STRING_LITERAL:

    field JOKER_IDENTIFIER:

    field QUOTED_JOKER_IDENTIFIER:

    field UNSIGNED_NUMERIC_LITERAL:

    field EXACT_NUMERIC_LITERAL:

    field APPROXIMATE_NUMERIC_LITERAL:

    field EXPONENT:

    field MANTISSA:

    field SIGNED_INTEGER:

    field SIGN:

    field SIGNED_NUMERIC_LITERAL:

    field DEFAULT:

    field tokenImage: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

package ORG.as220.tinySQL.parser:
class TinySQLParserTokenManager:

    field debugStream: @checkers.javari.quals.ReadOnly

    field jjbitVec0:
        inner-type 0: @checkers.javari.quals.ReadOnly

    field jjnextStates:
        inner-type 0: @checkers.javari.quals.ReadOnly

    field jjstrLiteralImages: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field lexStateNames: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    field jjtoToken:
        inner-type 0: @checkers.javari.quals.ReadOnly

    field jjtoSkip:
        inner-type 0: @checkers.javari.quals.ReadOnly

    field input_stream: @checkers.javari.quals.ThisMutable

    field jjrounds:
        inner-type 0: @checkers.javari.quals.ThisMutable

    field jjstateSet:
        inner-type 0: @checkers.javari.quals.ThisMutable

    field curChar:

    field curLexState:

    field defaultLexState:

    field jjnewStateCnt:

    field jjround:

    field jjmatchedPos:

    field jjmatchedKind:

    method <clinit>()V:

    method setDebugStream(Ljava/io/PrintStream;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.ReadOnly

    method jjStopAtPos(II)I:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+14: @checkers.javari.quals.Mutable
        local 1 #0+14:
        local 2 #0+14:

    method jjMoveStringLiteralDfa0_0()I:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+835: @checkers.javari.quals.Mutable

    method jjMoveStringLiteralDfa1_0(JJ)I:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+915: @checkers.javari.quals.Mutable
        local 1 #0+915:
        local 3 #0+915:
        local 5 #16+7: @checkers.javari.quals.ReadOnly

    method jjMoveStringLiteralDfa2_0(JJJJ)I:
        parameter #0:
        parameter #1:
        parameter #2:
        parameter #3:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+971: @checkers.javari.quals.Mutable
        local 1 #0+971:
        local 3 #0+971:
        local 5 #0+971:
        local 7 #0+971:
        local 9 #42+7: @checkers.javari.quals.ReadOnly

    method jjMoveStringLiteralDfa3_0(JJJJ)I:
        parameter #0:
        parameter #1:
        parameter #2:
        parameter #3:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+1123: @checkers.javari.quals.Mutable
        local 1 #0+1123:
        local 3 #0+1123:
        local 5 #0+1123:
        local 7 #0+1123:
        local 9 #42+7: @checkers.javari.quals.ReadOnly

    method jjMoveStringLiteralDfa4_0(JJJJ)I:
        parameter #0:
        parameter #1:
        parameter #2:
        parameter #3:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+933: @checkers.javari.quals.Mutable
        local 1 #0+933:
        local 3 #0+933:
        local 5 #0+933:
        local 7 #0+933:
        local 9 #42+7: @checkers.javari.quals.ReadOnly

    method jjMoveStringLiteralDfa5_0(JJJJ)I:
        parameter #0:
        parameter #1:
        parameter #2:
        parameter #3:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+823: @checkers.javari.quals.Mutable
        local 1 #0+823:
        local 3 #0+823:
        local 5 #0+823:
        local 7 #0+823:
        local 9 #42+7: @checkers.javari.quals.ReadOnly

    method jjMoveStringLiteralDfa6_0(JJJJ)I:
        parameter #0:
        parameter #1:
        parameter #2:
        parameter #3:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+488: @checkers.javari.quals.Mutable
        local 1 #0+488:
        local 3 #0+488:
        local 5 #0+488:
        local 7 #0+488:
        local 9 #42+7: @checkers.javari.quals.ReadOnly

    method jjMoveStringLiteralDfa7_0(JJJJ)I:
        parameter #0:
        parameter #1:
        parameter #2:
        parameter #3:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+298: @checkers.javari.quals.Mutable
        local 1 #0+298:
        local 3 #0+298:
        local 5 #0+298:
        local 7 #0+298:
        local 9 #43+8: @checkers.javari.quals.ReadOnly

    method jjMoveStringLiteralDfa8_0(JJJJ)I:
        parameter #0:
        parameter #1:
        parameter #2:
        parameter #3:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+280: @checkers.javari.quals.Mutable
        local 1 #0+280:
        local 3 #0+280:
        local 5 #0+280:
        local 7 #0+280:
        local 9 #43+8: @checkers.javari.quals.ReadOnly

    method jjMoveStringLiteralDfa9_0(JJ)I:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+132: @checkers.javari.quals.Mutable
        local 1 #0+132:
        local 3 #0+132:
        local 5 #34+8: @checkers.javari.quals.ReadOnly

    method jjMoveStringLiteralDfa10_0(JJ)I:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+164: @checkers.javari.quals.Mutable
        local 1 #0+164:
        local 3 #0+164:
        local 5 #34+8: @checkers.javari.quals.ReadOnly

    method jjMoveStringLiteralDfa11_0(JJ)I:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+98: @checkers.javari.quals.Mutable
        local 1 #0+98:
        local 3 #0+98:
        local 5 #34+8: @checkers.javari.quals.ReadOnly

    method jjMoveStringLiteralDfa12_0(JJ)I:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+130: @checkers.javari.quals.Mutable
        local 1 #0+130:
        local 3 #0+130:
        local 5 #34+8: @checkers.javari.quals.ReadOnly

    method jjCheckNAdd(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+41: @checkers.javari.quals.Mutable
        local 1 #0+41:

    method jjAddStates(II)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+30: @checkers.javari.quals.Mutable
        local 1 #0+30:
        local 2 #0+30:

    method jjCheckNAddTwoStates(II)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11:
        local 2 #0+11:

    method jjCheckNAddStates(II)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+18: @checkers.javari.quals.Mutable
        local 1 #0+18:
        local 2 #0+18:

    method jjCheckNAddStates(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+21: @checkers.javari.quals.Mutable
        local 1 #0+21:

    method jjMoveNfa_0(II)I:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7395: @checkers.javari.quals.Mutable
        local 1 #0+7395:
        local 2 #0+7395:
        local 3 #5+7390:
        local 4 #11+7384:
        local 5 #21+7374:
        local 6 #40+11: @checkers.javari.quals.ReadOnly
        local 7 #56+7339:
        local 8 #66+7329:
        local 10 #78+7317:
        local 11 #116+2910:
        local 11 #3047+4032:
        local 11 #7092+105:
        local 12 #7103+94:
        local 11 #7267+3: @checkers.javari.quals.ReadOnly
        local 11 #7292+103:
        local 12 #7328+11: @checkers.javari.quals.ReadOnly

    method <init>(LORG/as220/tinySQL/parser/SimpleCharStream;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+45: @checkers.javari.quals.Mutable
        local 1 #0+45: @checkers.javari.quals.Mutable

    method <init>(LORG/as220/tinySQL/parser/SimpleCharStream;I)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11: @checkers.javari.quals.Mutable
        local 2 #0+11:

    method ReInit(LORG/as220/tinySQL/parser/SimpleCharStream;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+28: @checkers.javari.quals.Mutable
        local 1 #0+28: @checkers.javari.quals.Mutable

    method ReInitRounds()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+31: @checkers.javari.quals.Mutable
        local 1 #11+20:

    method ReInit(LORG/as220/tinySQL/parser/SimpleCharStream;I)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11: @checkers.javari.quals.Mutable
        local 2 #0+11:

    method SwitchTo(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+47: @checkers.javari.quals.Mutable
        local 1 #0+47:

    method jjFillToken()LORG/as220/tinySQL/parser/Token;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+90: @checkers.javari.quals.Mutable
        local 1 #8+82: @checkers.javari.quals.Mutable
        local 2 #25+65: @checkers.javari.quals.Mutable

    method getNextToken()LORG/as220/tinySQL/parser/Token;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+283: @checkers.javari.quals.Mutable
        local 2 #2+281: @checkers.javari.quals.ReadOnly
        local 4 #5+278:
        local 5 #21+12: @checkers.javari.quals.ReadOnly
        local 3 #31+2: @checkers.javari.quals.PolyRead
        local 3 #119+2: @checkers.javari.quals.PolyRead
        local 5 #133+147:
        local 6 #142+138:
        local 7 #145+135: @checkers.javari.quals.Mutable
        local 8 #148+132:
        local 9 #169+53: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.parser:
class Token:

    field kind:

    field beginLine:

    field beginColumn:

    field endLine:

    field endColumn:

    field image: @checkers.javari.quals.ThisMutable

    field next: @checkers.javari.quals.ThisMutable

    field specialToken: @checkers.javari.quals.ReadOnly

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method newToken(I)LORG/as220/tinySQL/parser/Token;: @checkers.javari.quals.Mutable
        parameter #0:
        local 0 #0+8:

package ORG.as220.tinySQL.parser:
class TokenMgrError:

    field LEXICAL_ERROR:

    field STATIC_LEXER_ERROR:

    field INVALID_LEXICAL_STATE:

    field LOOP_DETECTED:

    field errorCode:

    method addEscapes(Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+286: @checkers.javari.quals.Mutable
        local 1 #8+278: @checkers.javari.quals.Mutable
        local 3 #10+271:
        local 2 #190+83:
        local 4 #224+40: @checkers.javari.quals.Mutable

    method LexicalError(ZIIILjava/lang/String;C)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0:
        parameter #1:
        parameter #2:
        parameter #3:
        parameter #4: @checkers.javari.quals.Mutable
        parameter #5:
        local 0 #0+104:
        local 1 #0+104:
        local 2 #0+104:
        local 3 #0+104:
        local 4 #0+104: @checkers.javari.quals.Mutable
        local 5 #0+104:

    method getMessage()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+5: @checkers.javari.quals.Mutable

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method <init>(Ljava/lang/String;I)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11: @checkers.javari.quals.Mutable
        local 2 #0+11:

    method <init>(ZIIILjava/lang/String;CI)V:
        parameter #0:
        parameter #1:
        parameter #2:
        parameter #3:
        parameter #4: @checkers.javari.quals.Mutable
        parameter #5:
        parameter #6:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+19: @checkers.javari.quals.ReadOnly
        local 1 #0+19:
        local 2 #0+19:
        local 3 #0+19:
        local 4 #0+19:
        local 5 #0+19: @checkers.javari.quals.Mutable
        local 6 #0+19:
        local 7 #0+19:

package ORG.as220.tinySQL.sqlparser:
class AlterCreateTableStatement:

    field db: @checkers.javari.quals.ThisMutable

    field cstmt: @checkers.javari.quals.ThisMutable

    field statement: @checkers.javari.quals.ThisMutable

    field updateCount:

    method <init>(LORG/as220/tinySQL/tinySQLStatement;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+41: @checkers.javari.quals.Mutable
        local 1 #0+41: @checkers.javari.quals.Mutable
        local 2 #17+11: @checkers.javari.quals.Mutable
        local 2 #29+11: @checkers.javari.quals.Mutable

    method getStatement()LORG/as220/tinySQL/tinySQLStatement;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setCreateTableStatement(LORG/as220/tinySQL/sqlparser/CreateTableStatement;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method getCreateTableStatement()LORG/as220/tinySQL/sqlparser/CreateTableStatement;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getDatabase()LORG/as220/tinySQL/tinySQL;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method execute()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+9: @checkers.javari.quals.Mutable

    method getUpdateCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setUpdateCount(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method getResultSet()LORG/as220/tinySQL/tinySQLResultSet;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getMoreResults()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getParameters()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class AlterTableAddColumnStatement:

    field db: @checkers.javari.quals.ThisMutable

    field table: @checkers.javari.quals.ThisMutable

    field columns: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field statement: @checkers.javari.quals.ThisMutable

    field updateCount:

    method <init>(LORG/as220/tinySQL/tinySQLStatement;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+52: @checkers.javari.quals.Mutable
        local 1 #0+52: @checkers.javari.quals.Mutable
        local 2 #17+11: @checkers.javari.quals.Mutable
        local 2 #29+11: @checkers.javari.quals.Mutable

    method getTable()LORG/as220/tinySQL/tinySQLTableView;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method addColumn(LORG/as220/tinySQL/sqlparser/ColumnDefinition;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+35: @checkers.javari.quals.Mutable
        local 1 #0+35: @checkers.javari.quals.Mutable

    method getColumns()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+12: @checkers.javari.quals.Mutable

    method setTable(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+13: @checkers.javari.quals.Mutable
        local 1 #0+13: @checkers.javari.quals.Mutable

    method getDatabase()LORG/as220/tinySQL/tinySQL;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method execute()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+9: @checkers.javari.quals.Mutable

    method getUpdateCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setUpdateCount(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method getResultSet()LORG/as220/tinySQL/tinySQLResultSet;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getMoreResults()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getParameters()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

    method getStatement()LORG/as220/tinySQL/tinySQLStatement;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

package ORG.as220.tinySQL.sqlparser:
class AlterTableDropColumnStatement:

    field db: @checkers.javari.quals.ThisMutable

    field table: @checkers.javari.quals.ThisMutable

    field statement: @checkers.javari.quals.ThisMutable

    field columns: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field updateCount:

    method <init>(LORG/as220/tinySQL/tinySQLStatement;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+52: @checkers.javari.quals.Mutable
        local 1 #0+52: @checkers.javari.quals.Mutable
        local 2 #17+11: @checkers.javari.quals.Mutable
        local 2 #29+11: @checkers.javari.quals.Mutable

    method getTable()LORG/as220/tinySQL/tinySQLTableView;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method addColumn(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+72: @checkers.javari.quals.Mutable
        local 1 #0+72: @checkers.javari.quals.Mutable
        local 2 #9+63:
        local 3 #62+10: @checkers.javari.quals.ReadOnly

    method getColumns()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+12: @checkers.javari.quals.Mutable

    method setTable(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+13: @checkers.javari.quals.Mutable
        local 1 #0+13: @checkers.javari.quals.Mutable

    method getDatabase()LORG/as220/tinySQL/tinySQL;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method execute()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+9: @checkers.javari.quals.Mutable

    method getUpdateCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setUpdateCount(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method getResultSet()LORG/as220/tinySQL/tinySQLResultSet;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getMoreResults()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getParameters()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

    method getStatement()LORG/as220/tinySQL/tinySQLStatement;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

package ORG.as220.tinySQL.sqlparser:
class AlterTableRenameColumnStatement:

    field db: @checkers.javari.quals.ThisMutable

    field table: @checkers.javari.quals.ThisMutable

    field columns: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <init>(LORG/as220/tinySQL/tinySQLStatement;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+47: @checkers.javari.quals.Mutable
        local 1 #0+47: @checkers.javari.quals.Mutable
        local 2 #12+11: @checkers.javari.quals.Mutable
        local 2 #24+11: @checkers.javari.quals.Mutable

    method getTable()LORG/as220/tinySQL/tinySQLTableView;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method addColumn(Ljava/lang/String;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+49: @checkers.javari.quals.Mutable
        local 1 #0+49: @checkers.javari.quals.Mutable
        local 2 #0+49: @checkers.javari.quals.ReadOnly
        local 3 #16+33: @checkers.javari.quals.ReadOnly
        local 4 #26+23: @checkers.javari.quals.Mutable

    method getColumns()Ljava/util/Vector;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+12: @checkers.javari.quals.Mutable

    method setTable(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+13: @checkers.javari.quals.Mutable
        local 1 #0+13: @checkers.javari.quals.Mutable

    method getDatabase()LORG/as220/tinySQL/tinySQL;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method execute()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly

    method getUpdateCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getResultSet()LORG/as220/tinySQL/tinySQLResultSet;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getMoreResults()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getParameters()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class AlterTableRenameColumnStatement$RenameColumnTuple:

    field oldcol: @checkers.javari.quals.ReadOnly

    field newname: @checkers.javari.quals.ReadOnly

    field this$0: @checkers.javari.quals.ReadOnly

    method <init>(LORG/as220/tinySQL/sqlparser/AlterTableRenameColumnStatement;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL.sqlparser:
class ColumnDefinition:

    field name: @checkers.javari.quals.ThisMutable

    field type:

    field size:

    field decimals:

    field nullable:

    method <init>(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method getName()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setType(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method getType()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setSize(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+25: @checkers.javari.quals.Mutable
        local 1 #0+25:

    method setSize(II)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+40: @checkers.javari.quals.Mutable
        local 1 #0+40:
        local 2 #0+40:

    method getSize()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getDecimals()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setNullable(Z)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method isNullable()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getColumn()LORG/as220/tinySQL/tsColumn;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+49: @checkers.javari.quals.Mutable
        local 1 #12+37: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+104: @checkers.javari.quals.Mutable
        local 1 #8+96: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL.sqlparser:
class ColumnValue:

    field colname: @checkers.javari.quals.ThisMutable

    field table: @checkers.javari.quals.ThisMutable

    field column: @checkers.javari.quals.ThisMutable

    method <init>(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+60: @checkers.javari.quals.Mutable
        local 1 #0+60: @checkers.javari.quals.Mutable
        local 2 #16+44:

    method evaluate(LORG/as220/tinySQL/tsRow;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+68: @checkers.javari.quals.Mutable
        local 1 #0+68: @checkers.javari.quals.Mutable
        local 2 #23+45:
        local 3 #66+2: @checkers.javari.quals.PolyRead

    method getName()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getChildren()Ljava/util/Enumeration;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getChildCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getTable()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getColumn()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+25: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL.sqlparser:
class CompactTableStatement:

    field statement: @checkers.javari.quals.ThisMutable

    field db: @checkers.javari.quals.ThisMutable

    field table: @checkers.javari.quals.ThisMutable

    method <init>(LORG/as220/tinySQL/tinySQLStatement;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+41: @checkers.javari.quals.Mutable
        local 1 #0+41: @checkers.javari.quals.Mutable
        local 2 #17+11: @checkers.javari.quals.Mutable
        local 2 #29+11: @checkers.javari.quals.Mutable

    method setTable(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+13: @checkers.javari.quals.Mutable
        local 1 #0+13: @checkers.javari.quals.Mutable

    method getTable()LORG/as220/tinySQL/tinySQLTableView;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getDatabase()LORG/as220/tinySQL/tinySQL;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method execute()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+17: @checkers.javari.quals.Mutable

    method getStatement()LORG/as220/tinySQL/tinySQLStatement;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getUpdateCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getResultSet()LORG/as220/tinySQL/tinySQLResultSet;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getMoreResults()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getParameters()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class ConditionalStatement:

    method getWhereClause()LORG/as220/tinySQL/sqlparser/WhereClause;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.PolyRead

    method getTables()Ljava/util/Enumeration;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL.sqlparser:
class CreateTableStatement:

    field db: @checkers.javari.quals.ReadOnly

    field table: @checkers.javari.quals.ThisMutable

    field columnDefinitions: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    method <init>(LORG/as220/tinySQL/tinySQLStatement;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+47: @checkers.javari.quals.Mutable
        local 1 #0+47: @checkers.javari.quals.ReadOnly
        local 2 #12+11: @checkers.javari.quals.ReadOnly
        local 2 #24+11: @checkers.javari.quals.Mutable

    method getTable()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setTable(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method addColumnDefinition(LORG/as220/tinySQL/sqlparser/ColumnDefinition;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.ReadOnly

    method getColumnDefinitions()Ljava/util/Vector;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+12: @checkers.javari.quals.Mutable

    method getDatabase()LORG/as220/tinySQL/tinySQL;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method execute()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly

    method getUpdateCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getResultSet()LORG/as220/tinySQL/tinySQLResultSet;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getMoreResults()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+86: @checkers.javari.quals.Mutable
        local 1 #8+78: @checkers.javari.quals.Mutable
        local 2 #33+41:

    method getParameters()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class DeleteStatement:

    field db: @checkers.javari.quals.ThisMutable

    field limit:

    field table: @checkers.javari.quals.ThisMutable

    field whereC: @checkers.javari.quals.ThisMutable

    field updatecount:

    method <init>(LORG/as220/tinySQL/tinySQLStatement;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+48: @checkers.javari.quals.Mutable
        local 1 #0+48: @checkers.javari.quals.Mutable
        local 2 #12+23: @checkers.javari.quals.Mutable
        local 2 #36+11: @checkers.javari.quals.Mutable

    method getTable()LORG/as220/tinySQL/tinySQLTableView;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getTables()Ljava/util/Enumeration;: @checkers.javari.quals.PolyRead
        inner-type 0: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+22: @checkers.javari.quals.PolyRead
        local 1 #8+14: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead

    method setTable(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+13: @checkers.javari.quals.Mutable
        local 1 #0+13: @checkers.javari.quals.Mutable

    method setWhereClause(LORG/as220/tinySQL/sqlparser/WhereClause;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+18: @checkers.javari.quals.Mutable
        local 1 #0+18: @checkers.javari.quals.Mutable

    method getWhereClause()LORG/as220/tinySQL/sqlparser/WhereClause;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getLimit()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getDatabase()LORG/as220/tinySQL/tinySQL;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method execute()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+112: @checkers.javari.quals.Mutable
        local 1 #5+107: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #7+59:
        local 3 #19+36: @checkers.javari.quals.ReadOnly

    method getUpdateCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getResultSet()LORG/as220/tinySQL/tinySQLResultSet;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getMoreResults()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+45: @checkers.javari.quals.Mutable
        local 1 #8+37: @checkers.javari.quals.Mutable

    method getParameters()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL.sqlparser:
class DropTableStatement:

    field db: @checkers.javari.quals.ThisMutable

    field table: @checkers.javari.quals.ThisMutable

    method <init>(LORG/as220/tinySQL/tinySQLStatement;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+36: @checkers.javari.quals.Mutable
        local 1 #0+36: @checkers.javari.quals.Mutable
        local 2 #12+11: @checkers.javari.quals.Mutable
        local 2 #24+11: @checkers.javari.quals.Mutable

    method setTable(Ljava/lang/String;Z)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+50: @checkers.javari.quals.Mutable
        local 1 #0+50: @checkers.javari.quals.Mutable
        local 2 #0+50:
        local 3 #16+33: @checkers.javari.quals.ReadOnly

    method getTable()LORG/as220/tinySQL/tinySQLTableView;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getDatabase()LORG/as220/tinySQL/tinySQL;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method execute()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+17: @checkers.javari.quals.Mutable

    method getUpdateCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getResultSet()LORG/as220/tinySQL/tinySQLResultSet;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getMoreResults()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getParameters()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class EmptyStatement:

    field statement: @checkers.javari.quals.ReadOnly

    method <init>(LORG/as220/tinySQL/tinySQLStatement;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+20: @checkers.javari.quals.Mutable
        local 1 #0+20: @checkers.javari.quals.ReadOnly

    method getDatabase()LORG/as220/tinySQL/tinySQL;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+28: @checkers.javari.quals.ReadOnly
        local 1 #11+5: @checkers.javari.quals.ReadOnly
        local 1 #17+11: @checkers.javari.quals.Mutable

    method execute()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getUpdateCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getResultSet()LORG/as220/tinySQL/tinySQLResultSet;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getMoreResults()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getParameters()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class Expression:

    field value: @checkers.javari.quals.ThisMutable

    field addValues: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field transformed:

    method <init>(LORG/as220/tinySQL/sqlparser/LValue;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+21: @checkers.javari.quals.Mutable
        local 1 #0+21: @checkers.javari.quals.Mutable

    method add(LORG/as220/tinySQL/sqlparser/Operator;LORG/as220/tinySQL/sqlparser/LValue;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+95: @checkers.javari.quals.Mutable
        local 1 #0+95: @checkers.javari.quals.Mutable
        local 2 #0+95: @checkers.javari.quals.Mutable
        local 3 #8+87: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 4 #69+7: @checkers.javari.quals.Mutable

    method insert(LORG/as220/tinySQL/sqlparser/LValue;LORG/as220/tinySQL/sqlparser/Operator;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+29: @checkers.javari.quals.Mutable
        local 1 #0+29: @checkers.javari.quals.Mutable
        local 2 #0+29: @checkers.javari.quals.Mutable
        local 3 #14+15: @checkers.javari.quals.ReadOnly

    method evaluate(LORG/as220/tinySQL/tsRow;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+82: @checkers.javari.quals.Mutable
        local 1 #0+82: @checkers.javari.quals.Mutable
        local 2 #27+55: @checkers.javari.quals.Mutable
        local 3 #29+51:
        local 4 #45+21: @checkers.javari.quals.Mutable

    method isWrapper()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+14: @checkers.javari.quals.Mutable

    method getName()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+120: @checkers.javari.quals.Mutable
        local 1 #59+61: @checkers.javari.quals.Mutable
        local 2 #61+54:
        local 3 #76+25: @checkers.javari.quals.Mutable

    method getValueName(LORG/as220/tinySQL/sqlparser/LValue;)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+41: @checkers.javari.quals.ReadOnly
        local 1 #0+41: @checkers.javari.quals.Mutable

    method getChildren()Ljava/util/Enumeration;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+62: @checkers.javari.quals.Mutable
        local 1 #8+54: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
        local 2 #19+38:
        local 3 #34+9: @checkers.javari.quals.PolyRead

    method getChildCount()I:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable

    method transformExpression()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+171: @checkers.javari.quals.Mutable
        local 1 #2+169:
        local 2 #4+48:
        local 3 #19+19: @checkers.javari.quals.ReadOnly
        local 2 #58+113:
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 3 #60+41:
        local 4 #76+11: @checkers.javari.quals.ReadOnly
        local 3 #103+68:
        local 4 #106+65:
        local 5 #109+26:
        local 5 #144+26:

    method transformExpression(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+41: @checkers.javari.quals.Mutable
        local 1 #0+41:
        local 2 #2+39: @checkers.javari.quals.ReadOnly
        local 3 #12+28:

    method mergeExpressions(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+82: @checkers.javari.quals.Mutable
        local 1 #0+82:
        local 2 #12+70: @checkers.javari.quals.ReadOnly
        local 3 #20+62: @checkers.javari.quals.Mutable
        local 4 #42+40: @checkers.javari.quals.Mutable
        local 5 #49+33: @checkers.javari.quals.Mutable
        local 6 #56+26: @checkers.javari.quals.Mutable

    method getOperator(I)LORG/as220/tinySQL/sqlparser/Operator;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+17: @checkers.javari.quals.Mutable
        local 1 #0+17:
        local 2 #12+5: @checkers.javari.quals.PolyRead

    method getLValue(I)LORG/as220/tinySQL/sqlparser/LValue;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+28: @checkers.javari.quals.Mutable
        local 1 #0+28:
        local 2 #23+5: @checkers.javari.quals.PolyRead

    method setLValue(ILORG/as220/tinySQL/sqlparser/LValue;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+30: @checkers.javari.quals.Mutable
        local 1 #0+30:
        local 2 #0+30: @checkers.javari.quals.Mutable
        local 3 #24+6: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+5: @checkers.javari.quals.Mutable

    method main([Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 0 #0+135: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #37+98: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL.sqlparser:
class Expression$ValueContainer:

    field op: @checkers.javari.quals.ThisMutable

    field value: @checkers.javari.quals.ThisMutable

    field this$0: @checkers.javari.quals.ReadOnly

    method <init>(LORG/as220/tinySQL/sqlparser/Expression;LORG/as220/tinySQL/sqlparser/Operator;LORG/as220/tinySQL/sqlparser/LValue;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+20: @checkers.javari.quals.Mutable
        local 2 #0+20: @checkers.javari.quals.Mutable
        local 3 #0+20: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL.sqlparser:
class InsertStatement:

    field db: @checkers.javari.quals.ThisMutable

    field table: @checkers.javari.quals.ThisMutable

    field updatecount:

    field columns: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field tablesCache: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field values: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field subselect: @checkers.javari.quals.ThisMutable

    method <init>(LORG/as220/tinySQL/tinySQLStatement;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+58: @checkers.javari.quals.Mutable
        local 1 #0+58: @checkers.javari.quals.Mutable
        local 2 #12+11: @checkers.javari.quals.Mutable
        local 2 #24+11: @checkers.javari.quals.Mutable

    method addColumn(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+96: @checkers.javari.quals.Mutable
        local 1 #0+96: @checkers.javari.quals.Mutable
        local 2 #9+87: @checkers.javari.quals.Mutable
        local 3 #14+82: @checkers.javari.quals.Mutable
        local 4 #67+29: @checkers.javari.quals.Mutable
        local 5 #85+11: @checkers.javari.quals.ReadOnly

    method addValues(Ljava/util/Vector;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+118: @checkers.javari.quals.Mutable
        local 1 #0+118: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #32+86: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #34+65:
        local 4 #50+35: @checkers.javari.quals.Mutable
        local 5 #72+13: @checkers.javari.quals.Mutable
        local 3 #108+10: @checkers.javari.quals.ReadOnly

    method addSelect(LORG/as220/tinySQL/sqlparser/SelectStatement;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+23: @checkers.javari.quals.Mutable
        local 1 #0+23: @checkers.javari.quals.Mutable

    method hasSubSelect()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly

    method getSelect()LORG/as220/tinySQL/sqlparser/SelectStatement;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getColumns()Ljava/util/Vector;: @checkers.javari.quals.PolyRead
        inner-type 0: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getValues()Ljava/util/Vector;: @checkers.javari.quals.PolyRead
        inner-type 0: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getTable()LORG/as220/tinySQL/tinySQLTableView;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getTables()Ljava/util/Enumeration;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+39: @checkers.javari.quals.Mutable

    method setTable(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+13: @checkers.javari.quals.Mutable
        local 1 #0+13: @checkers.javari.quals.Mutable

    method getDatabase()LORG/as220/tinySQL/tinySQL;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method execute()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+21: @checkers.javari.quals.Mutable

    method getUpdateCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getResultSet()LORG/as220/tinySQL/tinySQLResultSet;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getMoreResults()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+194: @checkers.javari.quals.Mutable
        local 1 #8+186: @checkers.javari.quals.Mutable
        local 2 #68+121: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #122+67: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 4 #136+37: @checkers.javari.quals.Mutable

    method getParameters()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+84: @checkers.javari.quals.Mutable
        local 1 #8+76: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
        local 2 #16+68: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #29+44: @checkers.javari.quals.Mutable
        local 4 #32+41:
        local 5 #43+18: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL.sqlparser:
class JokerColumnValue:

    field colname: @checkers.javari.quals.ThisMutable

    field table: @checkers.javari.quals.ThisMutable

    method <init>(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+54: @checkers.javari.quals.Mutable
        local 1 #0+54: @checkers.javari.quals.Mutable

    method evaluate(LORG/as220/tinySQL/tsRow;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly
        local 1 #0+10: @checkers.javari.quals.ReadOnly

    method getName()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getTable()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getChildren()Ljava/util/Enumeration;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getChildCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+25: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL.sqlparser:
class LValue:

    method evaluate(LORG/as220/tinySQL/tsRow;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method getName()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method getChildren()Ljava/util/Enumeration;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method getChildCount()I:
        receiver: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL.sqlparser:
class Operator:

    field AND: @checkers.javari.quals.Mutable

    field OR: @checkers.javari.quals.Mutable

    field ADD: @checkers.javari.quals.Mutable

    field SUB: @checkers.javari.quals.Mutable

    field MULT: @checkers.javari.quals.Mutable

    field DIV: @checkers.javari.quals.Mutable

    field EQUAL: @checkers.javari.quals.Mutable

    field NEQUAL: @checkers.javari.quals.Mutable

    field LEQUAL: @checkers.javari.quals.Mutable

    field GEQUAL: @checkers.javari.quals.Mutable

    field GREATER: @checkers.javari.quals.Mutable

    field LESSER: @checkers.javari.quals.Mutable

    field BETWEEN: @checkers.javari.quals.Mutable

    field NBETWEEN: @checkers.javari.quals.Mutable

    field LIKE: @checkers.javari.quals.Mutable

    field IN: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method init()V:

    method evaluate(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly
        local 1 #0+10: @checkers.javari.quals.ReadOnly
        local 2 #0+10: @checkers.javari.quals.ReadOnly

    method compareTo(Ljava/lang/Object;Ljava/lang/Object;)I:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+174: @checkers.javari.quals.ReadOnly
        local 1 #0+174: @checkers.javari.quals.Mutable
        local 2 #0+174: @checkers.javari.quals.Mutable
        local 3 #41+121: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 4 #83+19: @checkers.javari.quals.Mutable
        local 4 #124+26: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 5 #130+20: @checkers.javari.quals.Mutable

    method getLevel()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method <init>(LORG/as220/tinySQL/sqlparser/Operator;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class Operator$AddOperator:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method evaluate(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+18: @checkers.javari.quals.ReadOnly
        local 1 #0+18: @checkers.javari.quals.Mutable
        local 2 #0+18: @checkers.javari.quals.Mutable
        local 3 #5+13: @checkers.javari.quals.Mutable
        local 4 #11+7: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+3: @checkers.javari.quals.ReadOnly

    method getLevel()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class Operator$AndOperator:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method evaluate(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+39: @checkers.javari.quals.ReadOnly
        local 1 #0+39: @checkers.javari.quals.Mutable
        local 2 #0+39: @checkers.javari.quals.Mutable
        local 3 #5+34: @checkers.javari.quals.Mutable
        local 4 #11+28: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+3: @checkers.javari.quals.ReadOnly

    method getLevel()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class Operator$BetweenOperator:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method evaluate(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+56: @checkers.javari.quals.ReadOnly
        local 1 #0+56: @checkers.javari.quals.Mutable
        local 2 #0+56: @checkers.javari.quals.ReadOnly
        local 3 #5+51: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 4 #10+46: @checkers.javari.quals.Mutable
        local 5 #15+41: @checkers.javari.quals.Mutable
        local 6 #24+32:
        local 7 #33+23:

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+3: @checkers.javari.quals.ReadOnly

    method getLevel()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class Operator$DivideOperator:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method evaluate(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+19: @checkers.javari.quals.ReadOnly
        local 1 #0+19: @checkers.javari.quals.Mutable
        local 2 #0+19: @checkers.javari.quals.Mutable
        local 3 #5+14: @checkers.javari.quals.Mutable
        local 4 #11+8: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+3: @checkers.javari.quals.ReadOnly

    method getLevel()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class Operator$EqualOperator:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method evaluate(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+22: @checkers.javari.quals.ReadOnly
        local 1 #0+22: @checkers.javari.quals.Mutable
        local 2 #0+22: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+3: @checkers.javari.quals.ReadOnly

    method getLevel()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class Operator$GreaterEqualOperator:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method evaluate(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+22: @checkers.javari.quals.ReadOnly
        local 1 #0+22: @checkers.javari.quals.Mutable
        local 2 #0+22: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+3: @checkers.javari.quals.ReadOnly

    method getLevel()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class Operator$GreaterOperator:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method evaluate(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+22: @checkers.javari.quals.ReadOnly
        local 1 #0+22: @checkers.javari.quals.Mutable
        local 2 #0+22: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+3: @checkers.javari.quals.ReadOnly

    method getLevel()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class Operator$InOperator:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method evaluate(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+25: @checkers.javari.quals.ReadOnly
        local 1 #0+25: @checkers.javari.quals.ReadOnly
        local 2 #0+25: @checkers.javari.quals.ReadOnly
        local 3 #5+20: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 4 #10+15: @checkers.javari.quals.ReadOnly
        local 5 #15+10: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+3: @checkers.javari.quals.ReadOnly

    method getLevel()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class Operator$LesserEqualOperator:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method evaluate(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+22: @checkers.javari.quals.ReadOnly
        local 1 #0+22: @checkers.javari.quals.Mutable
        local 2 #0+22: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+3: @checkers.javari.quals.ReadOnly

    method getLevel()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class Operator$LesserOperator:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method evaluate(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+22: @checkers.javari.quals.ReadOnly
        local 1 #0+22: @checkers.javari.quals.Mutable
        local 2 #0+22: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+3: @checkers.javari.quals.ReadOnly

    method getLevel()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class Operator$LikeOperator:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method evaluate(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+25: @checkers.javari.quals.ReadOnly
        local 1 #0+25: @checkers.javari.quals.ReadOnly
        local 2 #0+25: @checkers.javari.quals.ReadOnly
        local 3 #5+20: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 4 #10+15: @checkers.javari.quals.ReadOnly
        local 5 #15+10: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+3: @checkers.javari.quals.ReadOnly

    method getLevel()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class Operator$MultiplyOperator:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method evaluate(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+18: @checkers.javari.quals.ReadOnly
        local 1 #0+18: @checkers.javari.quals.Mutable
        local 2 #0+18: @checkers.javari.quals.Mutable
        local 3 #5+13: @checkers.javari.quals.Mutable
        local 4 #11+7: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+3: @checkers.javari.quals.ReadOnly

    method getLevel()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class Operator$NotBetweenOperator:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method evaluate(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+30: @checkers.javari.quals.ReadOnly
        local 1 #0+30: @checkers.javari.quals.Mutable
        local 2 #0+30: @checkers.javari.quals.Mutable
        local 3 #12+18: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+3: @checkers.javari.quals.ReadOnly

    method getLevel()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class Operator$NotEqualOperator:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method evaluate(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+22: @checkers.javari.quals.ReadOnly
        local 1 #0+22: @checkers.javari.quals.Mutable
        local 2 #0+22: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+3: @checkers.javari.quals.ReadOnly

    method getLevel()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class Operator$OrOperator:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method evaluate(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+39: @checkers.javari.quals.ReadOnly
        local 1 #0+39: @checkers.javari.quals.Mutable
        local 2 #0+39: @checkers.javari.quals.Mutable
        local 3 #5+34: @checkers.javari.quals.Mutable
        local 4 #11+28: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+3: @checkers.javari.quals.ReadOnly

    method getLevel()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class Operator$SubtractOperator:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method evaluate(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+18: @checkers.javari.quals.ReadOnly
        local 1 #0+18: @checkers.javari.quals.Mutable
        local 2 #0+18: @checkers.javari.quals.Mutable
        local 3 #5+13: @checkers.javari.quals.Mutable
        local 4 #11+7: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+3: @checkers.javari.quals.ReadOnly

    method getLevel()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class OrderByClause:

    field parent: @checkers.javari.quals.ThisMutable

    field orderValues: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field orderColumns: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <init>(LORG/as220/tinySQL/sqlparser/SelectStatement;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+32: @checkers.javari.quals.Mutable
        local 1 #0+32: @checkers.javari.quals.Mutable

    method addLValue(LORG/as220/tinySQL/sqlparser/LValue;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+34: @checkers.javari.quals.Mutable
        local 1 #0+34: @checkers.javari.quals.Mutable
        local 2 #15+19: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method getColumns()Ljava/util/ArrayList;: @checkers.javari.quals.PolyRead
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getValues()Ljava/util/ArrayList;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class ParameterValue:

    field value: @checkers.javari.quals.ThisMutable

    field valueSet:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable

    method evaluate(LORG/as220/tinySQL/tsRow;)Ljava/lang/Object;: @checkers.javari.quals.PolyRead
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+22: @checkers.javari.quals.PolyRead
        local 1 #0+22: @checkers.javari.quals.ReadOnly

    method isEmpty()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly

    method clear()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable

    method setValue(Ljava/lang/Object;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11: @checkers.javari.quals.Mutable

    method getValue()Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getName()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+23: @checkers.javari.quals.Mutable

    method getChildren()Ljava/util/Enumeration;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getChildCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+25: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL.sqlparser:
class ParserUtils:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getColumnElements(Ljava/util/Vector;LORG/as220/tinySQL/sqlparser/LValue;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+57: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #0+57: @checkers.javari.quals.Mutable
        local 2 #16+27: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #29+5: @checkers.javari.quals.Mutable

    method getParameterElements(Ljava/util/Vector;LORG/as220/tinySQL/sqlparser/LValue;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+57: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #0+57: @checkers.javari.quals.Mutable
        local 2 #16+27: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #29+5: @checkers.javari.quals.Mutable

    method resolveTableColumns(LORG/as220/tinySQL/sqlparser/LValue;Ljava/util/Vector;)Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 0 #0+224: @checkers.javari.quals.Mutable
        local 1 #0+224: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #8+216: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 3 #16+208: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 4 #27+197:
        local 5 #30+192:
        local 6 #44+168: @checkers.javari.quals.Mutable
        local 7 #51+161: @checkers.javari.quals.Mutable
        local 8 #58+154: @checkers.javari.quals.Mutable
        local 9 #61+151: @checkers.javari.quals.Mutable
        local 10 #131+81: @checkers.javari.quals.Mutable
        local 11 #145+67: @checkers.javari.quals.Mutable

    method findTableForColumn(Ljava/util/Enumeration;Ljava/lang/String;)LORG/as220/tinySQL/tinySQLTableView;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+62: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 1 #0+62: @checkers.javari.quals.Mutable
        local 2 #13+11: @checkers.javari.quals.Mutable

    method findTable(Ljava/lang/String;Ljava/util/Vector;)LORG/as220/tinySQL/tinySQLTableView;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 0 #0+57: @checkers.javari.quals.Mutable
        local 1 #0+57: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #5+52:
        local 3 #7+48:
        local 4 #20+27: @checkers.javari.quals.Mutable

    method buildVector(Ljava/util/Enumeration;)Ljava/util/Vector;: @checkers.javari.quals.PolyRead
        inner-type 0: @checkers.javari.quals.PolyRead
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
        local 0 #0+33: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
        local 1 #8+25: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead

    method convertToString(Ljava/lang/Object;)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+555: @checkers.javari.quals.Mutable
        local 1 #33+116: @checkers.javari.quals.Mutable
        local 2 #52+97:
        local 3 #59+90:
        local 4 #67+82:
        local 5 #78+71: @checkers.javari.quals.Mutable
        local 1 #164+115: @checkers.javari.quals.Mutable
        local 2 #182+97:
        local 3 #188+91:
        local 4 #195+84:
        local 5 #206+73: @checkers.javari.quals.Mutable
        local 1 #291+221: @checkers.javari.quals.Mutable
        local 2 #299+213: @checkers.javari.quals.Mutable
        local 3 #315+197:
        local 4 #323+189:
        local 5 #331+181:
        local 6 #338+174:
        local 7 #345+167:
        local 8 #352+160:
        local 9 #363+149: @checkers.javari.quals.Mutable

    method convertToBoolean(Ljava/lang/Object;)Ljava/lang/Boolean;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+67: @checkers.javari.quals.Mutable
        local 1 #30+19: @checkers.javari.quals.Mutable

    method convertToNumber(Ljava/lang/Object;)Ljava/math/BigDecimal;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+97: @checkers.javari.quals.Mutable
        local 1 #75+22: @checkers.javari.quals.Mutable

    method convertToDate(Ljava/lang/Object;)Ljava/sql/Date;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+248: @checkers.javari.quals.Mutable
        local 1 #59+12: @checkers.javari.quals.Mutable
        local 1 #83+145: @checkers.javari.quals.Mutable
        local 2 #138+85:
        local 3 #160+63:
        local 4 #184+39:
        local 5 #193+30: @checkers.javari.quals.Mutable
        local 1 #229+4: @checkers.javari.quals.Mutable

    method toNumber(C)I:
        parameter #0:
        local 0 #0+5:

    method convertToTime(Ljava/lang/Object;)Ljava/sql/Time;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+209: @checkers.javari.quals.Mutable
        local 1 #81+126: @checkers.javari.quals.Mutable
        local 2 #120+87:
        local 3 #141+66:
        local 4 #165+42:
        local 5 #174+33: @checkers.javari.quals.Mutable

    method convertToTimestamp(Ljava/lang/Object;)Ljava/sql/Timestamp;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+97: @checkers.javari.quals.Mutable

    method typeToLiteral(I)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0:
        local 0 #0+81:

package ORG.as220.tinySQL.sqlparser:
class SQLStatement:

    method getDatabase()LORG/as220/tinySQL/tinySQL;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.PolyRead

    method execute()Z:
        receiver: @checkers.javari.quals.Mutable

    method getUpdateCount()I:
        receiver: @checkers.javari.quals.ReadOnly

    method getResultSet()LORG/as220/tinySQL/tinySQLResultSet;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

    method getMoreResults()Z:
        receiver: @checkers.javari.quals.ReadOnly

    method getParameters()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL.sqlparser:
class SQLStatementBatch:

    field statements: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field parent: @checkers.javari.quals.ReadOnly

    method <init>(LORG/as220/tinySQL/tinySQLStatement;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+21: @checkers.javari.quals.Mutable
        local 1 #0+21: @checkers.javari.quals.ReadOnly

    method getParent()LORG/as220/tinySQL/tinySQLStatement;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method add(LORG/as220/tinySQL/sqlparser/SQLStatement;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+9: @checkers.javari.quals.Mutable
        local 1 #0+9: @checkers.javari.quals.ReadOnly

    method clear()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable

    method executeAll()[I:
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+71: @checkers.javari.quals.Mutable
        local 1 #8+63:
        local 2 #12+59:
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #14+55:
        local 4 #30+31: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+71: @checkers.javari.quals.Mutable
        local 1 #8+63: @checkers.javari.quals.Mutable
        local 2 #16+55:
        local 3 #18+48:
        local 4 #34+24: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL.sqlparser:
class SelectStatement:

    field MOD_NONE:

    field MOD_ALL:

    field MOD_DISTINCT:

    field whereC: @checkers.javari.quals.ThisMutable

    field orderC: @checkers.javari.quals.ThisMutable

    field resultColumns: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field tableColumns: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field tables: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field statement: @checkers.javari.quals.ThisMutable

    field myResult: @checkers.javari.quals.ThisMutable

    field mod:

    method <init>(LORG/as220/tinySQL/tinySQLStatement;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+72: @checkers.javari.quals.Mutable
        local 1 #0+72: @checkers.javari.quals.Mutable

    method addTable(Ljava/lang/String;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+24: @checkers.javari.quals.Mutable
        local 1 #0+24: @checkers.javari.quals.Mutable
        local 2 #0+24: @checkers.javari.quals.Mutable
        local 3 #9+15: @checkers.javari.quals.Mutable

    method addColumn(LORG/as220/tinySQL/sqlparser/LValue;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+171: @checkers.javari.quals.Mutable
        local 1 #0+171: @checkers.javari.quals.Mutable
        local 2 #0+171: @checkers.javari.quals.Mutable
        local 3 #21+150: @checkers.javari.quals.ReadOnly
        local 4 #50+99: @checkers.javari.quals.Mutable
        local 5 #53+96: @checkers.javari.quals.Mutable
        local 6 #60+89: @checkers.javari.quals.ReadOnly
        local 7 #116+33: @checkers.javari.quals.Mutable
        local 4 #160+10: @checkers.javari.quals.ReadOnly

    method resolveJokers(LORG/as220/tinySQL/sqlparser/JokerColumnValue;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+89: @checkers.javari.quals.Mutable
        local 1 #0+89: @checkers.javari.quals.Mutable
        local 2 #5+84: @checkers.javari.quals.Mutable
        local 3 #14+32: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 4 #28+6: @checkers.javari.quals.Mutable
        local 3 #55+33: @checkers.javari.quals.Mutable

    method addAllTableColumns(LORG/as220/tinySQL/tinySQLTableView;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+46: @checkers.javari.quals.Mutable
        local 1 #0+46: @checkers.javari.quals.Mutable
        local 2 #5+41:
        local 3 #7+38:
        local 4 #17+20: @checkers.javari.quals.ReadOnly

    method getModifier()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setModifier(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+33: @checkers.javari.quals.Mutable
        local 1 #0+33:

    method getTables()Ljava/util/Enumeration;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable

    method getTableColumns()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+38: @checkers.javari.quals.Mutable
        local 1 #12+26: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead

    method getResultColumns()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+12: @checkers.javari.quals.Mutable

    method setWhereClause(LORG/as220/tinySQL/sqlparser/WhereClause;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+18: @checkers.javari.quals.Mutable
        local 1 #0+18: @checkers.javari.quals.Mutable

    method getWhereClause()LORG/as220/tinySQL/sqlparser/WhereClause;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setOrderByClause(LORG/as220/tinySQL/sqlparser/OrderByClause;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+18: @checkers.javari.quals.Mutable
        local 1 #0+18: @checkers.javari.quals.Mutable

    method getOrderByClause()LORG/as220/tinySQL/sqlparser/OrderByClause;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getDatabase()LORG/as220/tinySQL/tinySQL;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+28: @checkers.javari.quals.PolyRead
        local 1 #11+5: @checkers.javari.quals.PolyRead
        local 1 #17+11: @checkers.javari.quals.Mutable

    method getStatement()LORG/as220/tinySQL/tinySQLStatement;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method execute()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+97: @checkers.javari.quals.Mutable
        local 1 #5+92: @checkers.javari.quals.ReadOnly
        local 2 #10+87: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 3 #12+63:
        local 4 #25+39: @checkers.javari.quals.ReadOnly

    method getUpdateCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getResultSet()LORG/as220/tinySQL/tinySQLResultSet;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+12: @checkers.javari.quals.Mutable
        local 1 #5+7: @checkers.javari.quals.PolyRead

    method getMoreResults()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getParameters()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+72: @checkers.javari.quals.Mutable
        local 1 #8+64: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
        local 2 #16+56: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #29+20: @checkers.javari.quals.Mutable
        local 4 #43+6: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+274: @checkers.javari.quals.Mutable
        local 1 #8+266: @checkers.javari.quals.Mutable
        local 2 #67+207: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL.sqlparser:
class StaticValue:

    field value: @checkers.javari.quals.ThisMutable

    method <init>(Ljava/lang/Object;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method evaluate(LORG/as220/tinySQL/tsRow;)Ljava/lang/Object;: @checkers.javari.quals.PolyRead
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead
        local 1 #0+5: @checkers.javari.quals.ReadOnly

    method getName()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+18: @checkers.javari.quals.Mutable

    method getChildren()Ljava/util/Enumeration;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getChildCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class UpdateStatement:

    field db: @checkers.javari.quals.ThisMutable

    field whereC: @checkers.javari.quals.ThisMutable

    field table: @checkers.javari.quals.ThisMutable

    field columns: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field values: @checkers.javari.quals.ThisMutable

    field updateCount:

    method <init>(LORG/as220/tinySQL/tinySQLStatement;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+59: @checkers.javari.quals.Mutable
        local 1 #0+59: @checkers.javari.quals.Mutable
        local 2 #12+23: @checkers.javari.quals.Mutable
        local 2 #36+11: @checkers.javari.quals.Mutable

    method addColumn(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+96: @checkers.javari.quals.Mutable
        local 1 #0+96: @checkers.javari.quals.Mutable
        local 2 #9+87: @checkers.javari.quals.Mutable
        local 3 #14+82: @checkers.javari.quals.Mutable
        local 4 #67+29: @checkers.javari.quals.Mutable
        local 5 #85+11: @checkers.javari.quals.ReadOnly

    method getColumns()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+26: @checkers.javari.quals.Mutable
        local 1 #12+14: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead

    method setValues(Ljava/util/Vector;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+113: @checkers.javari.quals.Mutable
        local 1 #0+113: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #32+81: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #34+66:
        local 4 #50+36: @checkers.javari.quals.Mutable
        local 5 #72+14: @checkers.javari.quals.Mutable

    method getValues()LORG/as220/tinySQL/tsResultRow;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getTable()LORG/as220/tinySQL/tinySQLTableView;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getTables()Ljava/util/Enumeration;: @checkers.javari.quals.PolyRead
        inner-type 0: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+22: @checkers.javari.quals.PolyRead
        local 1 #8+14: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead

    method setTable(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+13: @checkers.javari.quals.Mutable
        local 1 #0+13: @checkers.javari.quals.Mutable

    method setWhereClause(LORG/as220/tinySQL/sqlparser/WhereClause;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+18: @checkers.javari.quals.Mutable
        local 1 #0+18: @checkers.javari.quals.Mutable

    method getWhereClause()LORG/as220/tinySQL/sqlparser/WhereClause;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getDatabase()LORG/as220/tinySQL/tinySQL;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method execute()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+87: @checkers.javari.quals.Mutable
        local 1 #5+82: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #7+59:
        local 3 #19+36: @checkers.javari.quals.ReadOnly

    method getUpdateCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getResultSet()LORG/as220/tinySQL/tinySQLResultSet;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getMoreResults()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getParameters()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+68: @checkers.javari.quals.Mutable
        local 1 #8+60: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
        local 2 #13+55: @checkers.javari.quals.Mutable
        local 3 #15+39:
        local 4 #25+18: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+123: @checkers.javari.quals.Mutable
        local 1 #8+115: @checkers.javari.quals.Mutable
        local 2 #37+86: @checkers.javari.quals.Mutable
        local 3 #39+71:
        local 4 #61+38: @checkers.javari.quals.Mutable
        local 5 #91+8: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.sqlparser:
class WhereClause:

    field expression: @checkers.javari.quals.ThisMutable

    field tableColumns: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field parent: @checkers.javari.quals.ThisMutable

    field lastReturnValue:

    field evaluatedOnce:

    field cache: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field cachePos:
        inner-type 0: @checkers.javari.quals.ThisMutable

    method <init>(LORG/as220/tinySQL/sqlparser/ConditionalStatement;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+35: @checkers.javari.quals.Mutable
        local 1 #0+35: @checkers.javari.quals.Mutable

    method setExpression(LORG/as220/tinySQL/sqlparser/LValue;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+52: @checkers.javari.quals.Mutable
        local 1 #0+52: @checkers.javari.quals.Mutable
        local 2 #29+23: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method getExpression()LORG/as220/tinySQL/sqlparser/LValue;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method isMatch(LORG/as220/tinySQL/tsRow;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+266: @checkers.javari.quals.Mutable
        local 1 #0+266: @checkers.javari.quals.Mutable
        local 2 #2+264:
        local 3 #52+67:
        local 4 #55+59:
        local 5 #72+33: @checkers.javari.quals.Mutable
        local 6 #83+22:
        local 3 #125+93:
        local 4 #128+90:
        local 5 #140+69:
        local 6 #149+60: @checkers.javari.quals.Mutable
        local 7 #157+52: @checkers.javari.quals.Mutable
        local 3 #253+8: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+25: @checkers.javari.quals.Mutable

    method getColumns()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+12: @checkers.javari.quals.Mutable

    method getParameters()Ljava/util/Vector;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+18: @checkers.javari.quals.Mutable
        local 1 #8+10: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead

package ORG.as220.tinySQL:
class tinySQL:

    field tables: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable
        inner-type 1: @checkers.javari.quals.ThisMutable

    field connection: @checkers.javari.quals.ReadOnly

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+16: @checkers.javari.quals.Mutable

    method getConnection()LORG/as220/tinySQL/tinySQLConnection;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setConnection(LORG/as220/tinySQL/tinySQLConnection;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.ReadOnly

    method parse(LORG/as220/tinySQL/tinySQLStatement;Ljava/lang/String;)LORG/as220/tinySQL/sqlparser/SQLStatement;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+92: @checkers.javari.quals.ReadOnly
        local 1 #0+92: @checkers.javari.quals.Mutable
        local 2 #0+92: @checkers.javari.quals.Mutable
        local 3 #9+83: @checkers.javari.quals.Mutable
        local 4 #19+73: @checkers.javari.quals.Mutable
        local 5 #22+70: @checkers.javari.quals.PolyRead
        local 6 #35+25: @checkers.javari.quals.Mutable
        local 6 #62+27: @checkers.javari.quals.Mutable

    method SelectStatement(LORG/as220/tinySQL/sqlparser/SelectStatement;)LORG/as220/tinySQL/tsResultSet;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+230: @checkers.javari.quals.ReadOnly
        local 1 #0+230: @checkers.javari.quals.Mutable
        local 2 #5+225: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 3 #13+217: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 4 #27+7: @checkers.javari.quals.ReadOnly
        local 4 #49+181: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #55+175: @checkers.javari.quals.Mutable
        local 6 #61+169: @checkers.javari.quals.ReadOnly
        local 7 #70+160: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
            inner-type 1: @checkers.javari.quals.Mutable
        local 8 #77+153:
        local 9 #80+76:
        local 10 #95+51: @checkers.javari.quals.Mutable
        local 11 #102+44: @checkers.javari.quals.Mutable
        local 12 #114+32: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 9 #167+63: @checkers.javari.quals.Mutable
        local 10 #187+43: @checkers.javari.quals.Mutable
        local 11 #212+15: @checkers.javari.quals.Mutable

    method continueQuery(LORG/as220/tinySQL/tsResultSet;)I:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+271: @checkers.javari.quals.ReadOnly
        local 1 #0+271: @checkers.javari.quals.Mutable
        local 2 #5+266: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #24+247: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
            inner-type 1: @checkers.javari.quals.Mutable
        local 4 #30+241:
        local 5 #36+235: @checkers.javari.quals.Mutable
        local 6 #39+232: @checkers.javari.quals.Mutable
        local 7 #48+223: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 8 #51+61:
        local 9 #76+26: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 8 #118+144:
        local 9 #131+131:
        local 10 #134+128:
        local 11 #137+125:
        local 12 #156+48: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 12 #254+8:

    method addColumnsToRow(Ljava/util/Vector;LORG/as220/tinySQL/tsPhysicalRow;LORG/as220/tinySQL/tinySQLTableView;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+60: @checkers.javari.quals.ReadOnly
        local 1 #0+60: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #0+60: @checkers.javari.quals.Mutable
        local 3 #0+60: @checkers.javari.quals.Mutable
        local 4 #6+54:
        local 5 #9+50:
        local 6 #23+26: @checkers.javari.quals.Mutable
        local 7 #34+15: @checkers.javari.quals.Mutable
        local 8 #41+8:

    method DeleteStatement(LORG/as220/tinySQL/sqlparser/DeleteStatement;)I:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+72: @checkers.javari.quals.ReadOnly
        local 1 #0+72: @checkers.javari.quals.Mutable
        local 2 #2+70:
        local 3 #7+65: @checkers.javari.quals.Mutable
        local 4 #13+59: @checkers.javari.quals.Mutable
        local 5 #29+43: @checkers.javari.quals.Mutable

    method UpdateStatement(LORG/as220/tinySQL/sqlparser/UpdateStatement;)I:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+88: @checkers.javari.quals.ReadOnly
        local 1 #0+88: @checkers.javari.quals.Mutable
        local 2 #5+83: @checkers.javari.quals.Mutable
        local 3 #10+78: @checkers.javari.quals.Mutable
        local 4 #13+75:
        local 5 #19+69: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 6 #30+58: @checkers.javari.quals.Mutable
        local 7 #36+52: @checkers.javari.quals.Mutable

    method InsertStatement(LORG/as220/tinySQL/sqlparser/InsertStatement;)I:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+264: @checkers.javari.quals.ReadOnly
        local 1 #0+264: @checkers.javari.quals.Mutable
        local 2 #2+262:
        local 3 #7+257: @checkers.javari.quals.Mutable
        local 4 #20+159: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #27+152:
        local 6 #33+146: @checkers.javari.quals.Mutable
        local 7 #59+120: @checkers.javari.quals.Mutable
        local 8 #70+109: @checkers.javari.quals.Mutable
        local 9 #80+99: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 10 #83+29:
        local 10 #118+32:
        local 4 #185+40: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 5 #188+37:
        local 6 #203+9: @checkers.javari.quals.Mutable
        local 4 #230+13: @checkers.javari.quals.Mutable

    method db_createTable(Ljava/lang/String;Ljava/util/Vector;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

    method db_copyTableMeta(Ljava/lang/String;Ljava/lang/String;Ljava/util/Vector;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly
        local 1 #0+7: @checkers.javari.quals.ReadOnly
        local 2 #0+7: @checkers.javari.quals.ReadOnly
        local 3 #0+7: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly

    method db_removeTable(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

    method db_renameTable(Ljava/lang/String;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

    method CreateTable(LORG/as220/tinySQL/sqlparser/CreateTableStatement;)Z:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

    method AlterTableAddCol(LORG/as220/tinySQL/sqlparser/AlterTableAddColumnStatement;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+392: @checkers.javari.quals.Mutable
        local 1 #0+392: @checkers.javari.quals.Mutable
        local 2 #5+387: @checkers.javari.quals.Mutable
        local 3 #10+382: @checkers.javari.quals.Mutable
        local 4 #37+355: @checkers.javari.quals.ReadOnly
        local 5 #59+333: @checkers.javari.quals.Mutable
        local 6 #78+300: @checkers.javari.quals.ReadOnly
        local 7 #87+291: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 8 #94+284:
        local 9 #97+25:
        local 9 #128+250: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 10 #139+239: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 11 #142+43:
        local 12 #157+15: @checkers.javari.quals.Mutable
        local 13 #164+8: @checkers.javari.quals.ReadOnly
        local 11 #213+165: @checkers.javari.quals.Mutable
        local 12 #233+145: @checkers.javari.quals.Mutable
        local 13 #250+55:
        local 14 #265+30: @checkers.javari.quals.Mutable
        local 15 #272+23: @checkers.javari.quals.Mutable
        local 13 #319+59:
        local 6 #380+10: @checkers.javari.quals.Mutable

    method AlterCreateTable(LORG/as220/tinySQL/sqlparser/AlterCreateTableStatement;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+378: @checkers.javari.quals.Mutable
        local 1 #0+378: @checkers.javari.quals.Mutable
        local 2 #5+361: @checkers.javari.quals.Mutable
        local 3 #10+356: @checkers.javari.quals.Mutable
        local 4 #32+334: @checkers.javari.quals.Mutable
        local 5 #54+312: @checkers.javari.quals.ReadOnly
        local 6 #72+294: @checkers.javari.quals.ReadOnly
        local 7 #80+286: @checkers.javari.quals.ReadOnly
        local 8 #89+277: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 9 #92+32:
        local 9 #133+233: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 10 #136+47:
        local 11 #151+19: @checkers.javari.quals.Mutable
        local 10 #208+158: @checkers.javari.quals.Mutable
        local 11 #228+138: @checkers.javari.quals.Mutable
        local 12 #242+124:
        local 13 #245+48:
        local 14 #260+23: @checkers.javari.quals.Mutable
        local 13 #307+59:
        local 2 #367+9: @checkers.javari.quals.Mutable

    method AlterTableDropCol(LORG/as220/tinySQL/sqlparser/AlterTableDropColumnStatement;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+423: @checkers.javari.quals.Mutable
        local 1 #0+423: @checkers.javari.quals.Mutable
        local 2 #5+418: @checkers.javari.quals.Mutable
        local 3 #10+413: @checkers.javari.quals.Mutable
        local 4 #37+386: @checkers.javari.quals.ReadOnly
        local 5 #59+364: @checkers.javari.quals.Mutable
        local 6 #78+331: @checkers.javari.quals.ReadOnly
        local 7 #87+322: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 8 #94+315:
        local 9 #97+25:
        local 9 #128+281: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 10 #131+85:
        local 11 #146+57: @checkers.javari.quals.Mutable
        local 12 #156+47:
        local 10 #244+165: @checkers.javari.quals.Mutable
        local 11 #264+145: @checkers.javari.quals.Mutable
        local 12 #281+55:
        local 13 #296+30: @checkers.javari.quals.Mutable
        local 14 #303+23: @checkers.javari.quals.Mutable
        local 12 #350+59:
        local 6 #411+10: @checkers.javari.quals.Mutable

    method findColumn(LORG/as220/tinySQL/tsColumn;Ljava/util/Vector;)I:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+48: @checkers.javari.quals.ReadOnly
        local 1 #0+48: @checkers.javari.quals.Mutable
        local 2 #0+48: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #5+43:
        local 4 #8+38:
        local 5 #22+15: @checkers.javari.quals.Mutable

    method AlterTableRenameCol(LORG/as220/tinySQL/sqlparser/AlterTableRenameColumnStatement;)Z:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly

    method DropTable(LORG/as220/tinySQL/sqlparser/DropTableStatement;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+34: @checkers.javari.quals.Mutable
        local 1 #0+34: @checkers.javari.quals.Mutable
        local 2 #5+29: @checkers.javari.quals.Mutable
        local 3 #10+13: @checkers.javari.quals.Mutable
        local 3 #24+9: @checkers.javari.quals.Mutable

    method openTable(Ljava/lang/String;)LORG/as220/tinySQL/tinySQLTable;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

    method closeTable(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+59: @checkers.javari.quals.Mutable
        local 1 #0+59: @checkers.javari.quals.Mutable
        local 2 #12+47: @checkers.javari.quals.ReadOnly

    method close()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+66: @checkers.javari.quals.Mutable
        local 1 #8+58: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #21+35: @checkers.javari.quals.Mutable
        local 3 #30+26: @checkers.javari.quals.ReadOnly

    method getTable(Ljava/lang/String;)LORG/as220/tinySQL/tinySQLTableView;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+69: @checkers.javari.quals.Mutable
        local 1 #0+69: @checkers.javari.quals.Mutable
        local 2 #12+57: @checkers.javari.quals.Mutable
        local 3 #67+2: @checkers.javari.quals.PolyRead

    method CompactTable(LORG/as220/tinySQL/sqlparser/CompactTableStatement;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+308: @checkers.javari.quals.Mutable
        local 1 #0+308: @checkers.javari.quals.Mutable
        local 2 #5+303: @checkers.javari.quals.Mutable
        local 3 #10+298: @checkers.javari.quals.Mutable
        local 4 #32+276: @checkers.javari.quals.ReadOnly
        local 5 #54+254: @checkers.javari.quals.Mutable
        local 6 #73+222: @checkers.javari.quals.Mutable
        local 7 #82+213: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 8 #89+206:
        local 9 #92+25:
        local 9 #139+156: @checkers.javari.quals.Mutable
        local 10 #159+136: @checkers.javari.quals.Mutable
        local 11 #176+55:
        local 12 #191+30: @checkers.javari.quals.Mutable
        local 13 #198+23: @checkers.javari.quals.Mutable
        local 11 #245+50:
        local 6 #297+10: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL:
class tinySQLConnection:

    field tsql: @checkers.javari.quals.ThisMutable

    field driver: @checkers.javari.quals.ReadOnly

    field url: @checkers.javari.quals.ReadOnly

    field user: @checkers.javari.quals.ReadOnly

    field catalog: @checkers.javari.quals.ReadOnly

    field isolation:

    field properties: @checkers.javari.quals.ReadOnly

    method <init>(Ljava/lang/String;Ljava/lang/String;Ljava/sql/Driver;Ljava/util/Properties;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2: @checkers.javari.quals.ReadOnly
        parameter #3: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+47: @checkers.javari.quals.Mutable
        local 1 #0+47: @checkers.javari.quals.ReadOnly
        local 2 #0+47: @checkers.javari.quals.ReadOnly
        local 3 #0+47: @checkers.javari.quals.ReadOnly
        local 4 #0+47: @checkers.javari.quals.ReadOnly

    method getUrl()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getUser()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method createStatement()Ljava/sql/Statement;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+9: @checkers.javari.quals.Mutable

    method prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+14: @checkers.javari.quals.Mutable
        local 1 #0+14: @checkers.javari.quals.Mutable

    method prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly
        local 1 #0+10: @checkers.javari.quals.ReadOnly

    method nativeSQL(Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2: @checkers.javari.quals.ReadOnly

    method setAutoCommit(Z)V:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly
        local 1 #0+1:

    method commit()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly

    method rollback()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly

    method close()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+13: @checkers.javari.quals.Mutable

    method isClosed()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly

    method getTinySqlHandle()LORG/as220/tinySQL/tinySQL;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getMetaData()Ljava/sql/DatabaseMetaData;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

    method setReadOnly(Z)V:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly
        local 1 #0+10:

    method isReadOnly()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method setCatalog(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.ReadOnly

    method getCatalog()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setTransactionIsolation(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method getTransactionIsolation()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method disableAutoClose()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method getWarnings()Ljava/sql/SQLWarning;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method clearWarnings()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly

    method executeStatement(LORG/as220/tinySQL/sqlparser/SQLStatement;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly
        local 1 #0+9: @checkers.javari.quals.Mutable
        local 2 #7+2:

    method getAutoCommit()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method setAutoClose(Z)V:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly
        local 1 #0+1:

    method getAutoClose()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method createDatabaseEngine()LORG/as220/tinySQL/tinySQL;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly

    method getDatabaseEngine()LORG/as220/tinySQL/tinySQL;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method createStatement(II)Ljava/sql/Statement;: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly
        local 1 #0+10:
        local 2 #0+10:

    method prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly
        local 1 #0+10: @checkers.javari.quals.ReadOnly
        local 2 #0+10:
        local 3 #0+10:

    method prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly
        local 1 #0+10: @checkers.javari.quals.ReadOnly
        local 2 #0+10:
        local 3 #0+10:

    method getTypeMap()Ljava/util/Map;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        inner-type 1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly

    method setTypeMap(Ljava/util/Map;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
            inner-type 1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly
        local 1 #0+10: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
            inner-type 1: @checkers.javari.quals.ReadOnly

    method getProperties()Ljava/util/Properties;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL:
class tinySQLConverter:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method convertNativeToString(LORG/as220/tinySQL/tsColumn;Ljava/lang/Object;)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly
        local 1 #0+5: @checkers.javari.quals.ReadOnly
        local 2 #0+5: @checkers.javari.quals.Mutable

    method convertNativeToBoolean(LORG/as220/tinySQL/tsColumn;Ljava/lang/Object;)Ljava/lang/Boolean;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly
        local 1 #0+5: @checkers.javari.quals.ReadOnly
        local 2 #0+5: @checkers.javari.quals.Mutable

    method convertNativeToNumber(LORG/as220/tinySQL/tsColumn;Ljava/lang/Object;)Ljava/math/BigDecimal;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly
        local 1 #0+5: @checkers.javari.quals.ReadOnly
        local 2 #0+5: @checkers.javari.quals.Mutable

    method convertNativeToInteger(LORG/as220/tinySQL/tsColumn;Ljava/lang/Object;)Ljava/lang/Integer;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+19: @checkers.javari.quals.ReadOnly
        local 1 #0+19: @checkers.javari.quals.ReadOnly
        local 2 #0+19: @checkers.javari.quals.Mutable
        local 3 #7+12: @checkers.javari.quals.Mutable

    method convertNativeToBigInteger(LORG/as220/tinySQL/tsColumn;Ljava/lang/Object;)Ljava/math/BigInteger;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+12: @checkers.javari.quals.ReadOnly
        local 1 #0+12: @checkers.javari.quals.ReadOnly
        local 2 #0+12: @checkers.javari.quals.Mutable
        local 3 #7+5: @checkers.javari.quals.Mutable

    method convertNativeToShort(LORG/as220/tinySQL/tsColumn;Ljava/lang/Object;)Ljava/lang/Short;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+19: @checkers.javari.quals.ReadOnly
        local 1 #0+19: @checkers.javari.quals.ReadOnly
        local 2 #0+19: @checkers.javari.quals.Mutable
        local 3 #7+12: @checkers.javari.quals.Mutable

    method convertNativeToByte(LORG/as220/tinySQL/tsColumn;Ljava/lang/Object;)Ljava/lang/Byte;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+19: @checkers.javari.quals.ReadOnly
        local 1 #0+19: @checkers.javari.quals.ReadOnly
        local 2 #0+19: @checkers.javari.quals.Mutable
        local 3 #7+12: @checkers.javari.quals.Mutable

    method convertNativeToDouble(LORG/as220/tinySQL/tsColumn;Ljava/lang/Object;)Ljava/lang/Double;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+19: @checkers.javari.quals.ReadOnly
        local 1 #0+19: @checkers.javari.quals.ReadOnly
        local 2 #0+19: @checkers.javari.quals.Mutable
        local 3 #7+12: @checkers.javari.quals.Mutable

    method convertNativeToFloat(LORG/as220/tinySQL/tsColumn;Ljava/lang/Object;)Ljava/lang/Float;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+19: @checkers.javari.quals.ReadOnly
        local 1 #0+19: @checkers.javari.quals.ReadOnly
        local 2 #0+19: @checkers.javari.quals.Mutable
        local 3 #7+12: @checkers.javari.quals.Mutable

    method convertNativeToDate(LORG/as220/tinySQL/tsColumn;Ljava/lang/Object;)Ljava/sql/Date;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly
        local 1 #0+5: @checkers.javari.quals.ReadOnly
        local 2 #0+5: @checkers.javari.quals.Mutable

    method convertNativeToTime(LORG/as220/tinySQL/tsColumn;Ljava/lang/Object;)Ljava/sql/Time;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly
        local 1 #0+5: @checkers.javari.quals.ReadOnly
        local 2 #0+5: @checkers.javari.quals.Mutable

    method convertNativeToTimestamp(LORG/as220/tinySQL/tsColumn;Ljava/lang/Object;)Ljava/sql/Timestamp;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly
        local 1 #0+5: @checkers.javari.quals.ReadOnly
        local 2 #0+5: @checkers.javari.quals.Mutable

    method convertNativeToNull(LORG/as220/tinySQL/tsColumn;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2: @checkers.javari.quals.ReadOnly

    method convertNativeToJDBC(LORG/as220/tinySQL/tsColumn;Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+300: @checkers.javari.quals.ReadOnly
        local 1 #0+300: @checkers.javari.quals.Mutable
        local 2 #0+300: @checkers.javari.quals.Mutable
        local 3 #5+295:
        local 4 #277+21: @checkers.javari.quals.Mutable

    method convertJDBCToNative(LORG/as220/tinySQL/tsColumn;Ljava/lang/Object;)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+350: @checkers.javari.quals.ReadOnly
        local 1 #0+350: @checkers.javari.quals.ReadOnly
        local 2 #0+350: @checkers.javari.quals.Mutable
        local 3 #5+345:

    method convertNullToNative(LORG/as220/tinySQL/tsColumn;)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2: @checkers.javari.quals.ReadOnly

    method convertNumberToNative(LORG/as220/tinySQL/tsColumn;Ljava/lang/Number;)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2: @checkers.javari.quals.ReadOnly
        local 2 #0+2: @checkers.javari.quals.ReadOnly

    method convertBigIntegerToNative(LORG/as220/tinySQL/tsColumn;Ljava/math/BigInteger;)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly
        local 1 #0+7: @checkers.javari.quals.ReadOnly
        local 2 #0+7: @checkers.javari.quals.ReadOnly

    method convertIntegerToNative(LORG/as220/tinySQL/tsColumn;Ljava/lang/Integer;)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly
        local 1 #0+7: @checkers.javari.quals.ReadOnly
        local 2 #0+7: @checkers.javari.quals.ReadOnly

    method convertShortToNative(LORG/as220/tinySQL/tsColumn;Ljava/lang/Short;)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly
        local 1 #0+7: @checkers.javari.quals.ReadOnly
        local 2 #0+7: @checkers.javari.quals.ReadOnly

    method convertByteToNative(LORG/as220/tinySQL/tsColumn;Ljava/lang/Byte;)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly
        local 1 #0+7: @checkers.javari.quals.ReadOnly
        local 2 #0+7: @checkers.javari.quals.ReadOnly

    method convertFloatToNative(LORG/as220/tinySQL/tsColumn;Ljava/lang/Float;)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly
        local 1 #0+7: @checkers.javari.quals.ReadOnly
        local 2 #0+7: @checkers.javari.quals.ReadOnly

    method convertDoubleToNative(LORG/as220/tinySQL/tsColumn;Ljava/lang/Double;)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly
        local 1 #0+7: @checkers.javari.quals.ReadOnly
        local 2 #0+7: @checkers.javari.quals.ReadOnly

    method convertStringToNative(LORG/as220/tinySQL/tsColumn;Ljava/lang/String;)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2: @checkers.javari.quals.ReadOnly
        local 2 #0+2: @checkers.javari.quals.ReadOnly

    method convertDateToNative(LORG/as220/tinySQL/tsColumn;Ljava/sql/Date;)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2: @checkers.javari.quals.ReadOnly
        local 2 #0+2: @checkers.javari.quals.ReadOnly

    method convertTimestampToNative(LORG/as220/tinySQL/tsColumn;Ljava/sql/Timestamp;)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2: @checkers.javari.quals.ReadOnly
        local 2 #0+2: @checkers.javari.quals.ReadOnly

    method convertTimeToNative(LORG/as220/tinySQL/tsColumn;Ljava/sql/Time;)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2: @checkers.javari.quals.ReadOnly
        local 2 #0+2: @checkers.javari.quals.ReadOnly

    method convertBooleanToNative(LORG/as220/tinySQL/tsColumn;Ljava/lang/Boolean;)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2: @checkers.javari.quals.ReadOnly
        local 2 #0+2: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL:
class tinySQLDefaultIndex:

    field table: @checkers.javari.quals.ReadOnly

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getRowCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

    method translateRow(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2:

    method reverseTranslation(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2:

package ORG.as220.tinySQL:
class tinySQLException:

    field inner: @checkers.javari.quals.ThisMutable

    method <init>(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly
        local 1 #0+6: @checkers.javari.quals.Mutable

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method <init>(Ljava/lang/Exception;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+14: @checkers.javari.quals.Mutable
        local 1 #0+14: @checkers.javari.quals.Mutable

    method <init>(Ljava/lang/String;Ljava/lang/Exception;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11: @checkers.javari.quals.Mutable
        local 2 #0+11: @checkers.javari.quals.Mutable

    method printStackTrace()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+22: @checkers.javari.quals.Mutable

    method printStackTrace(Ljava/io/PrintStream;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+24: @checkers.javari.quals.Mutable
        local 1 #0+24: @checkers.javari.quals.Mutable

    method printStackTrace(Ljava/io/PrintWriter;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+24: @checkers.javari.quals.Mutable
        local 1 #0+24: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL:
class tinySQLIndex:

    method getRowCount()I:
        receiver: @checkers.javari.quals.ReadOnly

    method translateRow(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly

    method reverseTranslation(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL:
class tinySQLPreparedStatement:

    field sql: @checkers.javari.quals.ThisMutable

    field parameters: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field iParameterCount:

    field PARAM_NOT_FOUND: @checkers.javari.quals.ReadOnly

    method <init>(Ljava/sql/Connection;Ljava/lang/String;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+50: @checkers.javari.quals.Mutable
        local 1 #0+50: @checkers.javari.quals.Mutable
        local 2 #0+50: @checkers.javari.quals.Mutable
        local 3 #0+50: @checkers.javari.quals.ReadOnly
        local 4 #14+36: @checkers.javari.quals.Mutable

    method checkValuesFilled()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+94: @checkers.javari.quals.Mutable
        local 1 #8+86: @checkers.javari.quals.Mutable
        local 2 #10+84: @checkers.javari.quals.ReadOnly
        local 3 #12+62:

    method getMetaData()Ljava/sql/ResultSetMetaData;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+44: @checkers.javari.quals.Mutable
        local 1 #5+39:
        local 2 #19+15: @checkers.javari.quals.Mutable
        local 3 #26+8: @checkers.javari.quals.ReadOnly

    method execute()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+12: @checkers.javari.quals.Mutable
        local 1 #10+2:

    method executeQuery()Ljava/sql/ResultSet;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+41: @checkers.javari.quals.Mutable
        local 1 #5+36:

    method executeUpdate()I:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+24: @checkers.javari.quals.Mutable
        local 1 #5+19:

    method addBatch()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+13: @checkers.javari.quals.Mutable

    method clearParameters()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+35: @checkers.javari.quals.Mutable
        local 1 #8+27: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #21+4: @checkers.javari.quals.Mutable

    method setArray(ILjava/sql/Array;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+40: @checkers.javari.quals.Mutable
        local 1 #0+40:
        local 2 #0+40: @checkers.javari.quals.Mutable
        local 3 #29+10: @checkers.javari.quals.Mutable

    method setAsciiStream(ILjava/io/InputStream;I)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+36: @checkers.javari.quals.Mutable
        local 1 #0+36:
        local 2 #0+36: @checkers.javari.quals.Mutable
        local 3 #0+36:
        local 4 #29+6: @checkers.javari.quals.Mutable

    method setBigDecimal(ILjava/math/BigDecimal;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+33: @checkers.javari.quals.Mutable
        local 1 #0+33:
        local 2 #0+33: @checkers.javari.quals.Mutable
        local 3 #27+5: @checkers.javari.quals.Mutable

    method setBinaryStream(ILjava/io/InputStream;I)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8:
        local 2 #0+8: @checkers.javari.quals.Mutable
        local 3 #0+8:

    method setBlob(ILjava/sql/Blob;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+13: @checkers.javari.quals.Mutable
        local 1 #0+13:
        local 2 #0+13: @checkers.javari.quals.Mutable

    method setBoolean(IZ)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+27: @checkers.javari.quals.Mutable
        local 1 #0+27:
        local 2 #0+27:
        local 3 #14+13: @checkers.javari.quals.Mutable

    method setByte(IB)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+30: @checkers.javari.quals.Mutable
        local 1 #0+30:
        local 2 #0+30:
        local 3 #14+16: @checkers.javari.quals.Mutable

    method setBytes(I[B)V:
        parameter #0:
        parameter #1:
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+20: @checkers.javari.quals.Mutable
        local 1 #0+20:
        local 2 #0+20:
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #14+6: @checkers.javari.quals.Mutable

    method setCharacterStream(ILjava/io/Reader;I)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+22: @checkers.javari.quals.Mutable
        local 1 #0+22:
        local 2 #0+22: @checkers.javari.quals.Mutable
        local 3 #0+22:
        local 4 #15+7: @checkers.javari.quals.Mutable

    method setClob(ILjava/sql/Clob;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+13: @checkers.javari.quals.Mutable
        local 1 #0+13:
        local 2 #0+13: @checkers.javari.quals.Mutable

    method setDate(ILjava/sql/Date;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8:
        local 2 #0+8: @checkers.javari.quals.Mutable

    method setDate(ILjava/sql/Date;Ljava/util/Calendar;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+36: @checkers.javari.quals.Mutable
        local 1 #0+36:
        local 2 #0+36: @checkers.javari.quals.Mutable
        local 3 #0+36: @checkers.javari.quals.ReadOnly
        local 4 #29+6: @checkers.javari.quals.Mutable

    method setDouble(ID)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+29: @checkers.javari.quals.Mutable
        local 1 #0+29:
        local 2 #0+29:
        local 4 #15+14: @checkers.javari.quals.Mutable

    method setFloat(IF)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+27: @checkers.javari.quals.Mutable
        local 1 #0+27:
        local 2 #0+27:
        local 3 #14+13: @checkers.javari.quals.Mutable

    method setInt(II)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+27: @checkers.javari.quals.Mutable
        local 1 #0+27:
        local 2 #0+27:
        local 3 #14+13: @checkers.javari.quals.Mutable

    method setLong(IJ)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+29: @checkers.javari.quals.Mutable
        local 1 #0+29:
        local 2 #0+29:
        local 4 #15+14: @checkers.javari.quals.Mutable

    method setNull(II)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+20: @checkers.javari.quals.Mutable
        local 1 #0+20:
        local 2 #0+20:
        local 3 #14+6: @checkers.javari.quals.Mutable

    method setNull(IILjava/lang/String;)V:
        parameter #0:
        parameter #1:
        parameter #2: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+22: @checkers.javari.quals.Mutable
        local 1 #0+22:
        local 2 #0+22:
        local 3 #0+22: @checkers.javari.quals.ReadOnly
        local 4 #15+7: @checkers.javari.quals.Mutable

    method setObject(ILjava/lang/Object;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+20: @checkers.javari.quals.Mutable
        local 1 #0+20:
        local 2 #0+20: @checkers.javari.quals.Mutable
        local 3 #14+6: @checkers.javari.quals.Mutable

    method setObject(ILjava/lang/Object;I)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+9: @checkers.javari.quals.Mutable
        local 1 #0+9:
        local 2 #0+9: @checkers.javari.quals.Mutable
        local 3 #0+9:

    method setObject(ILjava/lang/Object;II)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2:
        parameter #3:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+313: @checkers.javari.quals.Mutable
        local 1 #0+313:
        local 2 #0+313: @checkers.javari.quals.Mutable
        local 3 #0+313:
        local 4 #0+313:
        local 5 #289+9: @checkers.javari.quals.Mutable

    method setRef(ILjava/sql/Ref;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+40: @checkers.javari.quals.Mutable
        local 1 #0+40:
        local 2 #0+40: @checkers.javari.quals.Mutable
        local 3 #29+10: @checkers.javari.quals.Mutable

    method setShort(IS)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+27: @checkers.javari.quals.Mutable
        local 1 #0+27:
        local 2 #0+27:
        local 3 #14+13: @checkers.javari.quals.Mutable

    method setString(ILjava/lang/String;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+34: @checkers.javari.quals.Mutable
        local 1 #0+34:
        local 2 #0+34: @checkers.javari.quals.Mutable
        local 3 #28+5: @checkers.javari.quals.Mutable

    method setTime(ILjava/sql/Time;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8:
        local 2 #0+8: @checkers.javari.quals.Mutable

    method setTime(ILjava/sql/Time;Ljava/util/Calendar;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+36: @checkers.javari.quals.Mutable
        local 1 #0+36:
        local 2 #0+36: @checkers.javari.quals.Mutable
        local 3 #0+36: @checkers.javari.quals.ReadOnly
        local 4 #29+6: @checkers.javari.quals.Mutable

    method setTimestamp(ILjava/sql/Timestamp;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8:
        local 2 #0+8: @checkers.javari.quals.Mutable

    method setTimestamp(ILjava/sql/Timestamp;Ljava/util/Calendar;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+36: @checkers.javari.quals.Mutable
        local 1 #0+36:
        local 2 #0+36: @checkers.javari.quals.Mutable
        local 3 #0+36: @checkers.javari.quals.ReadOnly
        local 4 #29+6: @checkers.javari.quals.Mutable

    method setUnicodeStream(ILjava/io/InputStream;I)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+22: @checkers.javari.quals.Mutable
        local 1 #0+22:
        local 2 #0+22: @checkers.javari.quals.Mutable
        local 3 #0+22:

package ORG.as220.tinySQL:
class tinySQLResultSet:

    field statement: @checkers.javari.quals.ThisMutable

    field result: @checkers.javari.quals.ThisMutable

    field current_row: @checkers.javari.quals.ThisMutable

    field current_row_index:

    field meta: @checkers.javari.quals.ReadOnly

    method <init>(LORG/as220/tinySQL/tsResultSet;LORG/as220/tinySQL/tinySQLStatement;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+29: @checkers.javari.quals.Mutable
        local 1 #0+29: @checkers.javari.quals.Mutable
        local 2 #0+29: @checkers.javari.quals.Mutable

    method next()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+73: @checkers.javari.quals.Mutable
        local 1 #60+13: @checkers.javari.quals.Mutable

    method close()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+23: @checkers.javari.quals.Mutable

    method wasNull()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getString(I)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+23: @checkers.javari.quals.Mutable
        local 1 #0+23:
        local 2 #6+5: @checkers.javari.quals.Mutable
        local 2 #12+11: @checkers.javari.quals.Mutable

    method getByte(I)B:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+40: @checkers.javari.quals.Mutable
        local 1 #0+40:
        local 2 #6+22: @checkers.javari.quals.Mutable
        local 3 #17+11: @checkers.javari.quals.Mutable
        local 2 #29+11: @checkers.javari.quals.Mutable

    method getBoolean(I)Z:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+29: @checkers.javari.quals.Mutable
        local 1 #0+29:
        local 2 #6+10: @checkers.javari.quals.Mutable
        local 3 #11+5: @checkers.javari.quals.Mutable
        local 2 #17+12: @checkers.javari.quals.Mutable

    method getShort(I)S:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+40: @checkers.javari.quals.Mutable
        local 1 #0+40:
        local 2 #6+22: @checkers.javari.quals.Mutable
        local 3 #17+11: @checkers.javari.quals.Mutable
        local 2 #29+11: @checkers.javari.quals.Mutable

    method getInt(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+40: @checkers.javari.quals.Mutable
        local 1 #0+40:
        local 2 #6+22: @checkers.javari.quals.Mutable
        local 3 #17+11: @checkers.javari.quals.Mutable
        local 2 #29+11: @checkers.javari.quals.Mutable

    method getLong(I)J:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+40: @checkers.javari.quals.Mutable
        local 1 #0+40:
        local 2 #6+22: @checkers.javari.quals.Mutable
        local 3 #17+11: @checkers.javari.quals.Mutable
        local 2 #29+11: @checkers.javari.quals.Mutable

    method getFloat(I)F:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+40: @checkers.javari.quals.Mutable
        local 1 #0+40:
        local 2 #6+22: @checkers.javari.quals.Mutable
        local 3 #17+11: @checkers.javari.quals.Mutable
        local 2 #29+11: @checkers.javari.quals.Mutable

    method getDouble(I)D:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+40: @checkers.javari.quals.Mutable
        local 1 #0+40:
        local 2 #6+22: @checkers.javari.quals.Mutable
        local 3 #17+11: @checkers.javari.quals.Mutable
        local 2 #29+11: @checkers.javari.quals.Mutable

    method getBigDecimal(II)Ljava/math/BigDecimal;: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+44: @checkers.javari.quals.Mutable
        local 1 #0+44:
        local 2 #0+44:
        local 3 #6+26: @checkers.javari.quals.Mutable
        local 4 #18+14: @checkers.javari.quals.Mutable
        local 3 #33+11: @checkers.javari.quals.Mutable

    method getBytes(I)[B:
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+30: @checkers.javari.quals.Mutable
        local 1 #0+30:
        local 2 #6+24: @checkers.javari.quals.Mutable
        local 3 #19+11: @checkers.javari.quals.Mutable

    method getDate(I)Ljava/sql/Date;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+25: @checkers.javari.quals.Mutable
        local 1 #0+25:
        local 2 #6+19: @checkers.javari.quals.Mutable
        local 3 #17+8: @checkers.javari.quals.ReadOnly

    method getTime(I)Ljava/sql/Time;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+25: @checkers.javari.quals.Mutable
        local 1 #0+25:
        local 2 #6+19: @checkers.javari.quals.Mutable
        local 3 #17+8: @checkers.javari.quals.ReadOnly

    method getTimestamp(I)Ljava/sql/Timestamp;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+25: @checkers.javari.quals.Mutable
        local 1 #0+25:
        local 2 #6+19: @checkers.javari.quals.Mutable
        local 3 #17+8: @checkers.javari.quals.ReadOnly

    method getAsciiStream(I)Ljava/io/InputStream;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2:

    method getUnicodeStream(I)Ljava/io/InputStream;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2:

    method getBinaryStream(I)Ljava/io/InputStream;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2:

    method getCursorName()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+3: @checkers.javari.quals.ReadOnly

    method getMetaData()Ljava/sql/ResultSetMetaData;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+27: @checkers.javari.quals.Mutable

    method getObject(III)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+339: @checkers.javari.quals.Mutable
        local 1 #0+339:
        local 2 #0+339:
        local 3 #0+339:

    method getObject(II)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8:
        local 2 #0+8:

    method getObject(I)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11:

    method getString(Ljava/lang/String;)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+12: @checkers.javari.quals.Mutable
        local 1 #0+12: @checkers.javari.quals.Mutable
        local 2 #10+2: @checkers.javari.quals.ReadOnly

    method getByte(Ljava/lang/String;)B:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method getBoolean(Ljava/lang/String;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method getShort(Ljava/lang/String;)S:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method getInt(Ljava/lang/String;)I:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method getLong(Ljava/lang/String;)J:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method getFloat(Ljava/lang/String;)F:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method getDouble(Ljava/lang/String;)D:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method getBigDecimal(Ljava/lang/String;I)Ljava/math/BigDecimal;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11: @checkers.javari.quals.Mutable
        local 2 #0+11:

    method getBytes(Ljava/lang/String;)[B:
        inner-type 0: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method getDate(Ljava/lang/String;)Ljava/sql/Date;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method getTime(Ljava/lang/String;)Ljava/sql/Time;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method getTimestamp(Ljava/lang/String;)Ljava/sql/Timestamp;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method getAsciiStream(Ljava/lang/String;)Ljava/io/InputStream;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method getUnicodeStream(Ljava/lang/String;)Ljava/io/InputStream;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method getBinaryStream(Ljava/lang/String;)Ljava/io/InputStream;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method getObject(Ljava/lang/String;II)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        parameter #2:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+12: @checkers.javari.quals.Mutable
        local 1 #0+12: @checkers.javari.quals.Mutable
        local 2 #0+12:
        local 3 #0+12:

    method getObject(Ljava/lang/String;I)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+12: @checkers.javari.quals.Mutable
        local 1 #0+12: @checkers.javari.quals.Mutable
        local 2 #0+12:

    method getObject(Ljava/lang/String;)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method findColumn(Ljava/lang/String;)I:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11: @checkers.javari.quals.Mutable

    method getWarnings()Ljava/sql/SQLWarning;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method clearWarnings()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly

    method getCharacterStream(I)Ljava/io/Reader;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2:

    method getCharacterStream(Ljava/lang/String;)Ljava/io/Reader;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2: @checkers.javari.quals.ReadOnly

    method getBigDecimal(I)Ljava/math/BigDecimal;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+37: @checkers.javari.quals.Mutable
        local 1 #0+37:
        local 2 #6+19: @checkers.javari.quals.Mutable
        local 3 #17+8: @checkers.javari.quals.ReadOnly
        local 2 #26+11: @checkers.javari.quals.Mutable

    method getBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10: @checkers.javari.quals.Mutable

    method isBeforeFirst()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+12: @checkers.javari.quals.ReadOnly

    method isAfterLast()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+27: @checkers.javari.quals.ReadOnly

    method isFirst()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+30: @checkers.javari.quals.ReadOnly

    method isLast()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method beforeFirst()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly

    method afterLast()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly

    method first()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method last()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getRow()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method absolute(I)Z:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2:

    method relative(I)Z:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2:

    method previous()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method setFetchDirection(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly
        local 1 #0+1:

    method getFetchDirection()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method setFetchSize(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+24: @checkers.javari.quals.Mutable
        local 1 #0+24:

    method getFetchSize()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

    method getType()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

    method getConcurrency()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method rowUpdated()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method rowInserted()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method rowDeleted()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method updateNull(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:

    method updateBoolean(IZ)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11:

    method updateByte(IB)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11:

    method updateShort(IS)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11:

    method updateInt(II)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11:

    method updateLong(IJ)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11:

    method updateFloat(IF)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11:

    method updateDouble(ID)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11:

    method updateBigDecimal(ILjava/math/BigDecimal;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11: @checkers.javari.quals.ReadOnly

    method updateString(ILjava/lang/String;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11: @checkers.javari.quals.ReadOnly

    method updateBytes(I[B)V:
        parameter #0:
        parameter #1:
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11:
            inner-type 0: @checkers.javari.quals.ReadOnly

    method updateDate(ILjava/sql/Date;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11: @checkers.javari.quals.ReadOnly

    method updateTime(ILjava/sql/Time;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11: @checkers.javari.quals.ReadOnly

    method updateTimestamp(ILjava/sql/Timestamp;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11: @checkers.javari.quals.ReadOnly

    method updateAsciiStream(ILjava/io/InputStream;I)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11: @checkers.javari.quals.ReadOnly
        local 3 #0+11:

    method updateBinaryStream(ILjava/io/InputStream;I)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11: @checkers.javari.quals.ReadOnly
        local 3 #0+11:

    method updateCharacterStream(ILjava/io/Reader;I)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11: @checkers.javari.quals.ReadOnly
        local 3 #0+11:

    method updateObject(ILjava/lang/Object;I)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11: @checkers.javari.quals.ReadOnly
        local 3 #0+11:

    method updateObject(ILjava/lang/Object;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11: @checkers.javari.quals.ReadOnly

    method updateNull(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly

    method updateBoolean(Ljava/lang/String;Z)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11:

    method updateByte(Ljava/lang/String;B)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11:

    method updateShort(Ljava/lang/String;S)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11:

    method updateInt(Ljava/lang/String;I)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11:

    method updateLong(Ljava/lang/String;J)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11:

    method updateFloat(Ljava/lang/String;F)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11:

    method updateDouble(Ljava/lang/String;D)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11:

    method updateBigDecimal(Ljava/lang/String;Ljava/math/BigDecimal;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11: @checkers.javari.quals.ReadOnly

    method updateString(Ljava/lang/String;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11: @checkers.javari.quals.ReadOnly

    method updateBytes(Ljava/lang/String;[B)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1:
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11:
            inner-type 0: @checkers.javari.quals.ReadOnly

    method updateDate(Ljava/lang/String;Ljava/sql/Date;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11: @checkers.javari.quals.ReadOnly

    method updateTime(Ljava/lang/String;Ljava/sql/Time;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11: @checkers.javari.quals.ReadOnly

    method updateTimestamp(Ljava/lang/String;Ljava/sql/Timestamp;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11: @checkers.javari.quals.ReadOnly

    method updateAsciiStream(Ljava/lang/String;Ljava/io/InputStream;I)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11: @checkers.javari.quals.ReadOnly
        local 3 #0+11:

    method updateBinaryStream(Ljava/lang/String;Ljava/io/InputStream;I)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11: @checkers.javari.quals.ReadOnly
        local 3 #0+11:

    method updateCharacterStream(Ljava/lang/String;Ljava/io/Reader;I)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11: @checkers.javari.quals.ReadOnly
        local 3 #0+11:

    method updateObject(Ljava/lang/String;Ljava/lang/Object;I)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        parameter #2:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11: @checkers.javari.quals.ReadOnly
        local 3 #0+11:

    method updateObject(Ljava/lang/String;Ljava/lang/Object;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11: @checkers.javari.quals.ReadOnly

    method insertRow()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly

    method updateRow()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly

    method deleteRow()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly

    method refreshRow()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly

    method cancelRowUpdates()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly

    method moveToInsertRow()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly

    method moveToCurrentRow()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly

    method getStatement()Ljava/sql/Statement;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getObject(ILjava/util/Map;)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
            inner-type 1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
            inner-type 1: @checkers.javari.quals.ReadOnly

    method getRef(I)Ljava/sql/Ref;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:

    method getBlob(I)Ljava/sql/Blob;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:

    method getClob(I)Ljava/sql/Clob;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:

    method getArray(I)Ljava/sql/Array;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:

    method getObject(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
            inner-type 1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
            inner-type 1: @checkers.javari.quals.ReadOnly

    method getRef(Ljava/lang/String;)Ljava/sql/Ref;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly

    method getBlob(Ljava/lang/String;)Ljava/sql/Blob;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly

    method getClob(Ljava/lang/String;)Ljava/sql/Clob;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly

    method getArray(Ljava/lang/String;)Ljava/sql/Array;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly

    method getDate(ILjava/util/Calendar;)Ljava/sql/Date;: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11: @checkers.javari.quals.ReadOnly

    method getDate(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Date;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11: @checkers.javari.quals.ReadOnly

    method getTime(ILjava/util/Calendar;)Ljava/sql/Time;: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11: @checkers.javari.quals.ReadOnly

    method getTime(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Time;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11: @checkers.javari.quals.ReadOnly

    method getTimestamp(ILjava/util/Calendar;)Ljava/sql/Timestamp;: @checkers.javari.quals.ReadOnly
        parameter #0:
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11:
        local 2 #0+11: @checkers.javari.quals.ReadOnly

    method getTimestamp(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Timestamp;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.ReadOnly
        local 1 #0+11: @checkers.javari.quals.ReadOnly
        local 2 #0+11: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL:
class tinySQLResultSetMetaData:

    field result: @checkers.javari.quals.ReadOnly

    field colDefs: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ThisMutable

    field size:

    field class$0: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field class$1: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field class$2: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field class$3: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field class$4: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field class$5: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <init>(LORG/as220/tinySQL/tsResultSet;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+56: @checkers.javari.quals.Mutable
        local 1 #0+56: @checkers.javari.quals.ReadOnly
        local 2 #30+25:

    method getColumnCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method isAutoIncrement(I)Z:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2:

    method isCaseSensitive(I)Z:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2:

    method isSearchable(I)Z:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2:

    method isCurrency(I)Z:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2:

    method isNullable(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+16: @checkers.javari.quals.ReadOnly
        local 1 #0+16:

    method isSigned(I)Z:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2:

    method getColumnDisplaySize(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+50: @checkers.javari.quals.ReadOnly
        local 1 #0+50:
        local 2 #9+41: @checkers.javari.quals.ReadOnly

    method getColumnLabel(I)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+14: @checkers.javari.quals.ReadOnly
        local 1 #0+14:
        local 2 #9+5: @checkers.javari.quals.ReadOnly

    method getColumnName(I)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+14: @checkers.javari.quals.ReadOnly
        local 1 #0+14:
        local 2 #9+5: @checkers.javari.quals.ReadOnly

    method getSchemaName(I)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+3: @checkers.javari.quals.ReadOnly
        local 1 #0+3:

    method getPrecision(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+14: @checkers.javari.quals.ReadOnly
        local 1 #0+14:
        local 2 #9+5: @checkers.javari.quals.ReadOnly

    method getScale(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+14: @checkers.javari.quals.ReadOnly
        local 1 #0+14:
        local 2 #9+5: @checkers.javari.quals.ReadOnly

    method getTableName(I)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+27: @checkers.javari.quals.ReadOnly
        local 1 #0+27:
        local 2 #9+18: @checkers.javari.quals.ReadOnly

    method getCatalogName(I)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly
        local 1 #0+10:

    method getColumnType(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+14: @checkers.javari.quals.ReadOnly
        local 1 #0+14:
        local 2 #9+5: @checkers.javari.quals.ReadOnly

    method getColumnTypeName(I)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly
        local 1 #0+9:

    method isReadOnly(I)Z:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+23: @checkers.javari.quals.ReadOnly
        local 1 #0+23:
        local 2 #9+14: @checkers.javari.quals.ReadOnly

    method isWritable(I)Z:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2:

    method isDefinitelyWritable(I)Z:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
        local 1 #0+2:

    method getColumnClassName(I)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+588: @checkers.javari.quals.ReadOnly
        local 1 #0+588:
        local 2 #9+579: @checkers.javari.quals.ReadOnly
        local 3 #14+574:

package ORG.as220.tinySQL:
class tinySQLStatement:

    field statement: @checkers.javari.quals.ThisMutable

    field results: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field connection: @checkers.javari.quals.ThisMutable

    field result: @checkers.javari.quals.ReadOnly

    field max_field_size:

    field max_rows:

    field timeout:

    field fetchsize:

    field defaultResultSetType:

    field defaultDirection:

    field batch: @checkers.javari.quals.ThisMutable

    method <init>(LORG/as220/tinySQL/tinySQLConnection;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+69: @checkers.javari.quals.Mutable
        local 1 #0+69: @checkers.javari.quals.Mutable

    method executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+39: @checkers.javari.quals.Mutable
        local 1 #0+39: @checkers.javari.quals.Mutable
        local 2 #6+33:

    method executeUpdate(Ljava/lang/String;)I:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+25: @checkers.javari.quals.Mutable
        local 1 #0+25: @checkers.javari.quals.Mutable
        local 2 #6+19:

    method execute(Ljava/lang/String;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+28: @checkers.javari.quals.Mutable
        local 1 #0+28: @checkers.javari.quals.Mutable
        local 2 #26+2:

    method close()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+45: @checkers.javari.quals.Mutable
        local 1 #12+33: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #14+30:
        local 3 #29+4: @checkers.javari.quals.Mutable

    method getResultSet()Ljava/sql/ResultSet;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+10: @checkers.javari.quals.Mutable

    method onCreateResultSet(LORG/as220/tinySQL/tinySQLResultSet;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+15: @checkers.javari.quals.Mutable
        local 1 #0+15: @checkers.javari.quals.ReadOnly

    method onCloseResultSet(LORG/as220/tinySQL/tinySQLResultSet;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+15: @checkers.javari.quals.Mutable
        local 1 #0+15: @checkers.javari.quals.Mutable

    method getUpdateCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly

    method getMoreResults()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly

    method getMaxFieldSize()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setMaxFieldSize(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method getMaxRows()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setMaxRows(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method setEscapeProcessing(Z)V:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly
        local 1 #0+1:

    method getQueryTimeout()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setQueryTimeout(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method cancel()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly

    method getWarnings()Ljava/sql/SQLWarning;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method clearWarnings()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly

    method setCursorName(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly
        local 1 #0+10: @checkers.javari.quals.ReadOnly

    method setFetchDirection(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method getFetchDirection()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setFetchSize(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+28: @checkers.javari.quals.Mutable
        local 1 #0+28:

    method getFetchSize()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getResultSetConcurrency()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+4: @checkers.javari.quals.ReadOnly

    method getResultSetType()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setDefaultResultSetType(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method addBatch(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+52: @checkers.javari.quals.Mutable
        local 1 #0+52: @checkers.javari.quals.Mutable
        local 2 #26+26: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method addBatch(LORG/as220/tinySQL/sqlparser/SQLStatement;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+9: @checkers.javari.quals.Mutable
        local 1 #0+9: @checkers.javari.quals.ReadOnly

    method clearBatch()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable

    method executeBatch()[I:
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable

    method getConnection()Ljava/sql/Connection;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getStatement()LORG/as220/tinySQL/sqlparser/SQLStatement;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setStatement(LORG/as220/tinySQL/sqlparser/SQLStatement;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL:
class tinySQLTable:

    field table: @checkers.javari.quals.ThisMutable

    field converter: @checkers.javari.quals.ReadOnly

    field views: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <init>(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+26: @checkers.javari.quals.Mutable
        local 1 #0+26: @checkers.javari.quals.Mutable

    method getName()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method createdView(LORG/as220/tinySQL/tinySQLTableView;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+9: @checkers.javari.quals.Mutable
        local 1 #0+9: @checkers.javari.quals.ReadOnly

    method removedView(LORG/as220/tinySQL/tinySQLTableView;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+47: @checkers.javari.quals.Mutable
        local 1 #0+47: @checkers.javari.quals.Mutable

    method getViews()Ljava/util/Enumeration;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+17: @checkers.javari.quals.Mutable
        local 1 #12+5: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method getViewCount()I:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable

    method getConverter()LORG/as220/tinySQL/tinySQLConverter;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+23: @checkers.javari.quals.Mutable

    method close()Z:
        receiver: @checkers.javari.quals.ReadOnly

    method getColumnDefinition(I)LORG/as220/tinySQL/tsColumn;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly

    method getColumnCount()I:
        receiver: @checkers.javari.quals.ReadOnly

    method getRowCount()I:
        receiver: @checkers.javari.quals.ReadOnly

    method updateRow(ILORG/as220/tinySQL/tsRawRow;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

    method getRow(I)LORG/as220/tinySQL/tsRawRow;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly

    method insertRow(LORG/as220/tinySQL/tsRawRow;)I:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

    method deleteRow(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly

    method isDeleted(I)Z:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly

    method isReadOnly()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getInsertRow()LORG/as220/tinySQL/tsRawRow;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly

    method getUpdateRow(I)LORG/as220/tinySQL/tsRawRow;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly
        local 1 #0+6:

package ORG.as220.tinySQL:
class tinySQLTableView:

    field colcache: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        inner-type 1: @checkers.javari.quals.ThisMutable

    field table: @checkers.javari.quals.ThisMutable

    field _currentRowNumber:

    field _currentRow: @checkers.javari.quals.ThisMutable

    field alias: @checkers.javari.quals.ThisMutable

    field tsColumnCache: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field isClosed:

    field index: @checkers.javari.quals.ReadOnly

    method <init>(LORG/as220/tinySQL/tinySQLTable;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly
        local 1 #0+10: @checkers.javari.quals.Mutable

    method <init>(LORG/as220/tinySQL/tinySQLTable;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+61: @checkers.javari.quals.Mutable
        local 1 #0+61: @checkers.javari.quals.Mutable
        local 2 #0+61: @checkers.javari.quals.Mutable

    method close()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+31: @checkers.javari.quals.Mutable

    method getColumnName(I)Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11:
        local 2 #6+5: @checkers.javari.quals.ReadOnly

    method findColumn(Ljava/lang/String;)I:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+105: @checkers.javari.quals.Mutable
        local 1 #0+105: @checkers.javari.quals.Mutable
        local 2 #12+93: @checkers.javari.quals.Mutable
        local 3 #26+79:
        local 4 #29+50:
        local 5 #40+30: @checkers.javari.quals.Mutable

    method isDeleted()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+29: @checkers.javari.quals.ReadOnly

    method updateRow(LORG/as220/tinySQL/tsRow;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+58: @checkers.javari.quals.Mutable
        local 1 #0+58: @checkers.javari.quals.Mutable
        local 2 #31+27:

    method insertRow(LORG/as220/tinySQL/tsRow;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+44: @checkers.javari.quals.Mutable
        local 1 #0+44: @checkers.javari.quals.Mutable
        local 2 #37+7:

    method convertRowToNative(LORG/as220/tinySQL/tsRow;LORG/as220/tinySQL/tsRawRow;)LORG/as220/tinySQL/tsRawRow;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+116: @checkers.javari.quals.ReadOnly
        local 1 #0+116: @checkers.javari.quals.Mutable
        local 2 #0+116: @checkers.javari.quals.Mutable
        local 3 #5+111:
        local 4 #8+106:
        local 5 #19+86: @checkers.javari.quals.Mutable
        local 6 #30+75:

    method getColumnDefinition(I)LORG/as220/tinySQL/tsColumn;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+61: @checkers.javari.quals.Mutable
        local 1 #0+61:
        local 2 #47+7: @checkers.javari.quals.Mutable

    method getName()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+8: @checkers.javari.quals.PolyRead

    method getAlias()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setAlias(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+20: @checkers.javari.quals.Mutable
        local 1 #0+20: @checkers.javari.quals.Mutable

    method setCurrentRow(ILORG/as220/tinySQL/tsRawRow;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11:
        local 2 #0+11: @checkers.javari.quals.Mutable

    method next()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable

    method nextNonDeleted()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+53: @checkers.javari.quals.Mutable
        local 1 #5+48:
        local 2 #7+46:

    method refresh()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+9: @checkers.javari.quals.Mutable

    method loadRow(I)Z:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+49: @checkers.javari.quals.Mutable
        local 1 #0+49:
        local 2 #35+14: @checkers.javari.quals.Mutable

    method beforeFirst()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+37: @checkers.javari.quals.Mutable

    method isBeforeFirst()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+29: @checkers.javari.quals.ReadOnly

    method absolute(I)Z:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+65: @checkers.javari.quals.Mutable
        local 1 #0+65:

    method relative(I)Z:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11:

    method last()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+11: @checkers.javari.quals.Mutable

    method afterLast()Z:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+14: @checkers.javari.quals.Mutable

    method getColumnCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

    method getRowCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+25: @checkers.javari.quals.ReadOnly

    method getColumn(I)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+26: @checkers.javari.quals.Mutable
        local 1 #0+26:

    method getColumn(Ljava/lang/String;)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+61: @checkers.javari.quals.Mutable
        local 1 #0+61: @checkers.javari.quals.Mutable

    method getCurrentRecordNumber()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+22: @checkers.javari.quals.ReadOnly

    method isReadOnly()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+25: @checkers.javari.quals.ReadOnly

    method deleteRow()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+29: @checkers.javari.quals.ReadOnly

    method equals(Ljava/lang/Object;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+72: @checkers.javari.quals.Mutable
        local 1 #0+72: @checkers.javari.quals.Mutable
        local 2 #12+58: @checkers.javari.quals.Mutable
        local 3 #17+53: @checkers.javari.quals.Mutable

    method setIndex(LORG/as220/tinySQL/tinySQLIndex;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.ReadOnly

    method getIndex()LORG/as220/tinySQL/tinySQLIndex;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL:
class tsColumn:

    field COL_DATA:

    field COL_EXPR:

    field COL_INVALID:

    field expression: @checkers.javari.quals.ThisMutable

    field physName: @checkers.javari.quals.ThisMutable

    field displayName: @checkers.javari.quals.ThisMutable

    field fqname: @checkers.javari.quals.ThisMutable

    field datatype:

    field decimalPlaces:

    field defaultVal: @checkers.javari.quals.ThisMutable

    field notNull:

    field bytePos:

    field tablePos:

    field resultPos:

    field size:

    field coltype:

    field table: @checkers.javari.quals.ThisMutable

    method <init>(LORG/as220/tinySQL/tinySQLTableView;Ljava/lang/String;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+134: @checkers.javari.quals.Mutable
        local 1 #0+134: @checkers.javari.quals.Mutable
        local 2 #0+134: @checkers.javari.quals.Mutable
        local 3 #0+134: @checkers.javari.quals.Mutable

    method <init>(LORG/as220/tinySQL/tinySQLTableView;Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly
        local 1 #0+8: @checkers.javari.quals.Mutable
        local 2 #0+8: @checkers.javari.quals.Mutable

    method <init>(Ljava/lang/String;LORG/as220/tinySQL/sqlparser/LValue;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+104: @checkers.javari.quals.Mutable
        local 1 #0+104: @checkers.javari.quals.Mutable
        local 2 #0+104: @checkers.javari.quals.Mutable

    method <init>(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+99: @checkers.javari.quals.Mutable
        local 1 #0+99: @checkers.javari.quals.Mutable

    method <init>(LORG/as220/tinySQL/tsColumn;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+180: @checkers.javari.quals.Mutable
        local 1 #0+180: @checkers.javari.quals.Mutable

    method <init>(LORG/as220/tinySQL/tinySQLTableView;LORG/as220/tinySQL/tsColumn;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11: @checkers.javari.quals.Mutable
        local 2 #0+11: @checkers.javari.quals.Mutable

    method setAll(LORG/as220/tinySQL/tsColumn;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+73: @checkers.javari.quals.Mutable
        local 1 #0+73: @checkers.javari.quals.Mutable

    method getPhysicalName()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getDisplayName()Ljava/lang/String;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getFQName()Ljava/lang/String;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+13: @checkers.javari.quals.Mutable

    method setPhysicalName(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+16: @checkers.javari.quals.Mutable
        local 1 #0+16: @checkers.javari.quals.Mutable

    method getDefaultValue()Ljava/lang/Object;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method setDefaultValue(Ljava/lang/Object;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6: @checkers.javari.quals.Mutable

    method setType(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method getType()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method isNullable()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+13: @checkers.javari.quals.ReadOnly

    method setNullable(Z)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method setSize(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+25: @checkers.javari.quals.Mutable
        local 1 #0+25:

    method setSize(II)V:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+68: @checkers.javari.quals.Mutable
        local 1 #0+68:
        local 2 #0+68:

    method getSize()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getDecimalPlaces()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setResultPosition(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method getResultPosition()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setBytePosition(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method getBytePosition()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getTablePosition()I:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+37: @checkers.javari.quals.Mutable

    method setTablePosition(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+201: @checkers.javari.quals.Mutable
        local 1 #8+193: @checkers.javari.quals.Mutable

    method getColumnType()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getTable()LORG/as220/tinySQL/tinySQLTableView;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getExpression()LORG/as220/tinySQL/sqlparser/LValue;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method equals(Ljava/lang/Object;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+140: @checkers.javari.quals.Mutable
        local 1 #0+140: @checkers.javari.quals.Mutable
        local 2 #12+126: @checkers.javari.quals.Mutable

    method isValidName(Ljava/lang/String;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+47: @checkers.javari.quals.Mutable
        local 1 #0+47: @checkers.javari.quals.Mutable

    method formColname(Ljava/lang/String;LORG/as220/tinySQL/tinySQLTableView;)Ljava/lang/String;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+48: @checkers.javari.quals.Mutable
        local 1 #0+48: @checkers.javari.quals.Mutable
        local 2 #0+48: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL:
class tsPhysicalRow:

    field data: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field coldefs: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    method <init>(Ljava/util/Vector;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+80: @checkers.javari.quals.Mutable
        local 1 #0+80: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #31+49:
        local 3 #33+46:
        local 4 #46+25: @checkers.javari.quals.Mutable

    method <init>(LORG/as220/tinySQL/tsPhysicalRow;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+44: @checkers.javari.quals.Mutable
        local 1 #0+44: @checkers.javari.quals.Mutable

    method get(I)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.PolyRead
        local 1 #0+7:

    method put(ILjava/lang/Object;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable
        local 1 #0+8:
        local 2 #0+8: @checkers.javari.quals.Mutable

    method getColumnDefinition(I)LORG/as220/tinySQL/tsColumn;: @checkers.javari.quals.PolyRead
        parameter #0:
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+7: @checkers.javari.quals.PolyRead
        local 1 #0+7:

    method getAllDefinitions()Ljava/util/Enumeration;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+12: @checkers.javari.quals.ReadOnly

    method size()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+66: @checkers.javari.quals.Mutable
        local 1 #8+58: @checkers.javari.quals.Mutable
        local 2 #17+37:

    method refresh()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+83: @checkers.javari.quals.Mutable
        local 1 #5+78:
        local 2 #7+75:
        local 3 #16+58: @checkers.javari.quals.Mutable
        local 4 #29+21: @checkers.javari.quals.Mutable
        local 5 #40+10: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL:
class tsRawRow:

    field cache: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field converter: @checkers.javari.quals.ReadOnly

    method <init>(Ljava/util/Vector;LORG/as220/tinySQL/tinySQLConverter;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+27: @checkers.javari.quals.Mutable
        local 1 #0+27: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #0+27: @checkers.javari.quals.ReadOnly

    method <init>(LORG/as220/tinySQL/tsRawRow;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+30: @checkers.javari.quals.Mutable
        local 1 #0+30: @checkers.javari.quals.Mutable

    method putNative(ILjava/lang/Object;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+18: @checkers.javari.quals.ReadOnly
        local 1 #0+18:
        local 2 #0+18: @checkers.javari.quals.ReadOnly

    method getNative(I)Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.ReadOnly
        local 1 #0+10:

    method clearCache()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+12: @checkers.javari.quals.Mutable

    method get(I)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+52: @checkers.javari.quals.Mutable
        local 1 #0+52:
        local 2 #7+45: @checkers.javari.quals.Mutable
        local 3 #17+24: @checkers.javari.quals.Mutable
        local 3 #42+8: @checkers.javari.quals.Mutable

    method put(ILjava/lang/Object;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+28: @checkers.javari.quals.Mutable
        local 1 #0+28:
        local 2 #0+28: @checkers.javari.quals.Mutable
        local 3 #13+15: @checkers.javari.quals.ReadOnly

    method nativeGet(LORG/as220/tinySQL/tsColumn;)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

    method nativePut(LORG/as220/tinySQL/tsColumn;Ljava/lang/Object;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL:
class tsResultRow:

    field prototype: @checkers.javari.quals.ReadOnly

    field row: @checkers.javari.quals.ThisMutable

    field myColumns: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field cache: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field translationTable:
        inner-type 0: @checkers.javari.quals.ThisMutable

    field evalStack:
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <init>(Ljava/util/Vector;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+26: @checkers.javari.quals.Mutable
        local 1 #0+26: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #19+7: @checkers.javari.quals.Mutable

    method <init>(Ljava/util/Vector;LORG/as220/tinySQL/tsRow;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+11: @checkers.javari.quals.Mutable
        local 1 #0+11: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #0+11: @checkers.javari.quals.Mutable

    method init(Ljava/util/Vector;LORG/as220/tinySQL/tsRow;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+97: @checkers.javari.quals.Mutable
        local 1 #0+97: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #0+97: @checkers.javari.quals.Mutable
        local 3 #5+92:
        local 4 #23+48:
        local 5 #37+25: @checkers.javari.quals.Mutable

    method <init>(LORG/as220/tinySQL/tsRow;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+45: @checkers.javari.quals.Mutable
        local 1 #0+45: @checkers.javari.quals.Mutable
        local 2 #12+33: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #14+24:

    method <init>(LORG/as220/tinySQL/tsResultRow;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+49: @checkers.javari.quals.Mutable
        local 1 #0+49: @checkers.javari.quals.Mutable
        local 2 #9+40:

    method setParent(LORG/as220/tinySQL/tsRow;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+20: @checkers.javari.quals.Mutable
        local 1 #0+20: @checkers.javari.quals.Mutable

    method lookup(I)I:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly
        local 1 #0+9:
        local 2 #7+2:

    method get(I)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+106: @checkers.javari.quals.Mutable
        local 1 #0+106:
        local 2 #6+100:
        local 3 #58+48: @checkers.javari.quals.Mutable
        local 4 #69+28: @checkers.javari.quals.Mutable
        local 5 #76+21: @checkers.javari.quals.Mutable

    method getColumnDefinition(I)LORG/as220/tinySQL/tsColumn;: @checkers.javari.quals.PolyRead
        parameter #0:
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+7: @checkers.javari.quals.PolyRead
        local 1 #0+7:

    method size()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly

    method refresh()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+16: @checkers.javari.quals.Mutable

    method toString()Ljava/lang/String;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+91: @checkers.javari.quals.Mutable
        local 1 #8+83: @checkers.javari.quals.Mutable
        local 2 #10+76:
        local 3 #30+45: @checkers.javari.quals.Mutable
        local 4 #68+7: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL:
class tsResultSet:

    field ROWS_NOT_KNOWN:

    field rows: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field fetchsize:

    field windowStart:

    field level:

    field rowsMax:

    field dbengine: @checkers.javari.quals.ReadOnly

    field type:

    field eof:

    field hasReadResults:

    field rowPrototype: @checkers.javari.quals.ThisMutable

    field resultRowPrototype: @checkers.javari.quals.ThisMutable

    field whereC: @checkers.javari.quals.ThisMutable

    field tableColumns: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        inner-type 1: @checkers.javari.quals.ThisMutable

    field tables: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ThisMutable

    field resultRow: @checkers.javari.quals.ReadOnly

    method <init>(LORG/as220/tinySQL/tsPhysicalRow;Ljava/util/Vector;Ljava/util/Hashtable;LORG/as220/tinySQL/sqlparser/WhereClause;LORG/as220/tinySQL/tinySQL;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
            inner-type 1: @checkers.javari.quals.Mutable
        parameter #3: @checkers.javari.quals.Mutable
        parameter #4: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+118: @checkers.javari.quals.Mutable
        local 1 #0+118: @checkers.javari.quals.Mutable
        local 2 #0+118: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 3 #0+118: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
            inner-type 1: @checkers.javari.quals.Mutable
        local 4 #0+118: @checkers.javari.quals.Mutable
        local 5 #0+118: @checkers.javari.quals.ReadOnly
        local 6 #54+64: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method <init>(LORG/as220/tinySQL/tsPhysicalRow;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+50: @checkers.javari.quals.Mutable
        local 1 #0+50: @checkers.javari.quals.Mutable

    method setType(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+27: @checkers.javari.quals.Mutable
        local 1 #0+27:

    method getType()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setFetchSize(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

    method getFetchSize()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getMoreResults(II)Z:
        parameter #0:
        parameter #1:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+148: @checkers.javari.quals.Mutable
        local 1 #0+148:
        local 2 #0+148:
        local 3 #89+11: @checkers.javari.quals.Mutable

    method isEOF()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method createPhysicalRow()LORG/as220/tinySQL/tsPhysicalRow;: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+12: @checkers.javari.quals.Mutable

    method addPhysicalRow(LORG/as220/tinySQL/tsPhysicalRow;)Z:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+97: @checkers.javari.quals.Mutable
        local 1 #0+97: @checkers.javari.quals.Mutable
        local 2 #17+80: @checkers.javari.quals.Mutable

    method getLevel()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method getWhereClause()LORG/as220/tinySQL/sqlparser/WhereClause;: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getColumnCount()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+8: @checkers.javari.quals.ReadOnly

    method findColumn(Ljava/lang/String;)I:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+9: @checkers.javari.quals.Mutable
        local 1 #0+9: @checkers.javari.quals.Mutable

    method getTables()Ljava/util/Vector;: @checkers.javari.quals.PolyRead
        inner-type 0: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getColumns()Ljava/util/Hashtable;: @checkers.javari.quals.PolyRead
        inner-type 0: @checkers.javari.quals.ReadOnly
        inner-type 1: @checkers.javari.quals.PolyRead
        receiver: @checkers.javari.quals.PolyRead
        local 0 #0+5: @checkers.javari.quals.PolyRead

    method getCacheSize()I:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+8: @checkers.javari.quals.Mutable

    method getResultRowAt(I)LORG/as220/tinySQL/tsResultRow;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+58: @checkers.javari.quals.Mutable
        local 1 #0+58:
        local 2 #33+25:

    method getColumnDefinition(I)LORG/as220/tinySQL/tsColumn;: @checkers.javari.quals.ReadOnly
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly
        local 1 #0+9:

    method close()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+81: @checkers.javari.quals.Mutable
        local 1 #46+35: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        local 2 #59+12: @checkers.javari.quals.Mutable
        local 3 #67+4: @checkers.javari.quals.Mutable

    method getResultSize()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL:
class tsRow:

    field colcache: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly
        inner-type 1: @checkers.javari.quals.ThisMutable

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+16: @checkers.javari.quals.Mutable

    method <init>(LORG/as220/tinySQL/tsRow;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+13: @checkers.javari.quals.Mutable
        local 1 #0+13: @checkers.javari.quals.Mutable

    method findColumn(Ljava/lang/String;)I:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+81: @checkers.javari.quals.Mutable
        local 1 #0+81: @checkers.javari.quals.Mutable
        local 2 #12+69: @checkers.javari.quals.Mutable
        local 3 #26+55:
        local 4 #29+50:
        local 5 #40+30: @checkers.javari.quals.Mutable

    method getColumnDefinition(I)LORG/as220/tinySQL/tsColumn;: @checkers.javari.quals.PolyRead
        parameter #0:
        receiver: @checkers.javari.quals.PolyRead

    method get(I)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.Mutable

    method refresh()V:
        receiver: @checkers.javari.quals.Mutable

    method size()I:
        receiver: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL:
class tsWeakPhysicalRow:

    field views: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field viewPositions:
        inner-type 0: @checkers.javari.quals.ThisMutable

    method put(ILjava/lang/Object;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+27: @checkers.javari.quals.Mutable
        local 1 #0+27:
        local 2 #0+27: @checkers.javari.quals.ReadOnly

    method get(I)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+32: @checkers.javari.quals.Mutable
        local 1 #0+32:
        local 2 #9+23: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.PolyRead
        local 3 #20+12: @checkers.javari.quals.PolyRead

    method refresh(I)Ljava/lang/Object;: @checkers.javari.quals.Mutable
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+31: @checkers.javari.quals.Mutable
        local 1 #0+31:
        local 2 #6+25: @checkers.javari.quals.Mutable
        local 3 #11+20: @checkers.javari.quals.Mutable
        local 4 #21+10: @checkers.javari.quals.PolyRead

    method <init>(LORG/as220/tinySQL/tsPhysicalRow;)V:
        parameter #0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly
        local 1 #0+6: @checkers.javari.quals.Mutable

    method <init>(Ljava/util/Vector;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+6: @checkers.javari.quals.ReadOnly
        local 1 #0+6: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.Mutable

    method setRowPositions(Ljava/util/Vector;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+51: @checkers.javari.quals.Mutable
        local 1 #0+51: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 2 #20+30:

    method refresh()V:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+34: @checkers.javari.quals.Mutable
        local 1 #2+31:

package ORG.as220.tinySQL.util:
class ArrayEnumeration:

    field objectarray: @checkers.javari.quals.ThisMutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field counter:

    method <init>([Ljava/lang/Object;)V:
        parameter #0: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+34: @checkers.javari.quals.Mutable
        local 1 #0+34: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method hasMoreElements()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+16: @checkers.javari.quals.ReadOnly

    method nextElement()Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+22: @checkers.javari.quals.Mutable
        local 1 #20+2: @checkers.javari.quals.ReadOnly

package ORG.as220.tinySQL.util:
class EmptyEnumeration:

    field singleton: @checkers.javari.quals.Mutable

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method hasMoreElements()Z:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method nextElement()Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly

    method getEnum()Ljava/util/Enumeration;: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.Mutable

package ORG.as220.tinySQL.util:
class Log:

    field logSystemOut:

    field ERROR:

    field WARN:

    field INFO:

    field DEBUG:

    field levels: @checkers.javari.quals.Mutable
        inner-type 0: @checkers.javari.quals.ReadOnly

    field debuglevel:

    method <clinit>()V:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method log(ILjava/lang/String;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+40:
        local 1 #0+40: @checkers.javari.quals.Mutable

    method log(ILjava/lang/String;Ljava/lang/Exception;)V:
        parameter #0:
        parameter #1: @checkers.javari.quals.Mutable
        parameter #2: @checkers.javari.quals.Mutable
        local 0 #0+53:
        local 1 #0+53: @checkers.javari.quals.Mutable
        local 2 #0+53: @checkers.javari.quals.Mutable
        local 3 #43+9: @checkers.javari.quals.Mutable

    method debug(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable

    method debug(Ljava/lang/String;Ljava/lang/Exception;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable
        local 1 #0+7: @checkers.javari.quals.Mutable

    method info(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable

    method info(Ljava/lang/String;Ljava/lang/Exception;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable
        local 1 #0+7: @checkers.javari.quals.Mutable

    method warn(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable

    method warn(Ljava/lang/String;Ljava/lang/Exception;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable
        local 1 #0+7: @checkers.javari.quals.Mutable

    method error(Ljava/lang/String;)V:
        parameter #0: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable

    method error(Ljava/lang/String;Ljava/lang/Exception;)V:
        parameter #0: @checkers.javari.quals.Mutable
        parameter #1: @checkers.javari.quals.Mutable
        local 0 #0+7: @checkers.javari.quals.Mutable
        local 1 #0+7: @checkers.javari.quals.Mutable

