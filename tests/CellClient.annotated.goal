import checkers.javari.quals.Mutable;
import checkers.javari.quals.ReadOnly;
public class CellClient {

    public static class Cell<T extends java.lang.@ReadOnly Object> {
	public @ReadOnly T val;
	public @ReadOnly T getVal(@ReadOnly Cell<T> this) { return val; }
	public void setVal(@Mutable Cell<T> this, @ReadOnly T val) { this.val = val; }
    }

    public static class Day {
        public int day;
        public Day(@ReadOnly Day this) { }
        public Day(@ReadOnly Day this, int d) { this.day = d; }
        public int getDay(@ReadOnly Day this) { return day; }
        public void setDay(@Mutable Day this, int d) { this.day = d; }
    }

    public void foo(@ReadOnly CellClient this) {
        /*readonly*/ @ReadOnly Cell</*readonly*/ @ReadOnly Day> c = new Cell<Day>();
        /*readonly*/ @ReadOnly Day d = c.getVal();
        int day = d.getDay();
    }

    public void bar(@ReadOnly CellClient this) {
        /*mutable*/ @Mutable Cell</*readonly*/ @ReadOnly Day> c = new Cell<Day>();
        /*readonly*/ @ReadOnly Day d = c.getVal();
        int day = d.getDay();
        /*readonly*/ @ReadOnly Day e = new Day();
        c.setVal(e);
    }

    public void baz(@ReadOnly CellClient this) {
        /*readonly*/ @ReadOnly Cell</*mutable*/ @Mutable Day> c = new Cell<Day>();
        /*mutable*/ @Mutable Day d = c.getVal();
        d.setDay(3);
    }

    public void quax(@ReadOnly CellClient this) {
        /*mutable*/ @Mutable Cell</*mutable*/ @Mutable Day> c = new Cell<Day>();
        /*mutable*/ @Mutable Day d = c.getVal();
        d.setDay(5);
        /*mutable*/ @Mutable Day e = new Day();
        c.setVal(e);
    }
}
