import checkers.javari.quals.Mutable;
import checkers.javari.quals.ReadOnly;
public class CellClient {

    public static class Day {
        public int day;
        public Day() @ReadOnly { }
        public Day(int d) @ReadOnly { this.day = d; }
        public int getDay() /*readonly*/ @ReadOnly { return day; }
        public void setDay(int d) /*mutable*/ @Mutable { this.day = d; }
    }

    public void foo() @ReadOnly {
        /*readonly*/ @ReadOnly Cell</*readonly*/ @ReadOnly Day> c = new Cell<Day>();
        /*readonly*/ @ReadOnly Day d = c.getVal();
        int day = d.getDay();
    }

    public void bar() @ReadOnly {
        /*mutable*/ @Mutable Cell</*readonly*/ @ReadOnly Day> c = new Cell<Day>();
        /*readonly*/ @ReadOnly Day d = c.getVal();
        int day = d.getDay();
        /*readonly*/ @ReadOnly Day e = new Day();
        c.setVal(e);
    }

    public void baz() @ReadOnly {
        /*readonly*/ @ReadOnly Cell</*mutable*/ @Mutable Day> c = new Cell<Day>();
        /*mutable*/ @Mutable Day d = c.getVal();
        d.setDay(3);
    }

    public void quax() @ReadOnly {
        /*mutable*/ @Mutable Cell</*mutable*/ @Mutable Day> c = new Cell<Day>();
        /*mutable*/ @Mutable Day d = c.getVal();
        d.setDay(5);
        /*mutable*/ @Mutable Day e = new Day();
        c.setVal(e);
    }
}
