import checkers.javari.quals.Mutable;
import checkers.javari.quals.ReadOnly;
public class SimpleCellClient {

    public static class SimpleCell<T extends /*readonly*/ @ReadOnly Object> {
        @ReadOnly
        T val;
    }

    public static class Day {
        public int day;
        public Day() @ReadOnly { }
        public Day(int d) @ReadOnly { this.day = d; }
        public int getDay() /*readonly*/ @ReadOnly { return day; }
        public void setDay(int d) /*mutable*/ @Mutable { this.day = d; }
    }

    public void foo() @ReadOnly {
        /*readonly*/ @ReadOnly SimpleCell</*readonly*/ @ReadOnly Day> c = new SimpleCell<Day>();
        /*readonly*/ @ReadOnly Day d = c.val;
        int day = d.getDay();
    }

    public void bar() @ReadOnly {
        /*mutable*/ @Mutable SimpleCell</*readonly*/ @ReadOnly Day> c = new SimpleCell<Day>();
        /*readonly*/ @ReadOnly Day d = c.val;
        int day = d.getDay();
        /*readonly*/ @ReadOnly Day e = new Day();
        c.val = e;
    }

    public void baz() @ReadOnly {
        /*readonly*/ @ReadOnly SimpleCell</*mutable*/ @Mutable Day> c = new SimpleCell<Day>();
        /*mutable*/ @Mutable Day d = c.val;
        d.setDay(3);
    }

    public void quax() @ReadOnly {
        /*mutable*/ @Mutable SimpleCell</*mutable*/ @Mutable Day> c = new SimpleCell<Day>();
        /*mutable*/ @Mutable Day d = c.val;
        d.setDay(5);
        @Mutable
        Day e = new Day();
        c.val = e;
    }
}
