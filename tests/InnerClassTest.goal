package checkers.javari.quals:
annotation visible @ReadOnly:

package checkers.javari.quals:
annotation visible @Mutable:

package :
class InnerClassTest:
    bound ,0 &0: @checkers.javari.quals.ReadOnly

    field d: @checkers.javari.quals.ReadOnly

    field in: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        inner-type 1: @checkers.javari.quals.ReadOnly

    field initializedField: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    field staticInitializedField: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+17: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method foo()LInnerClassTest$AIn;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        inner-type 1: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+7: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #5+2: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
            inner-type 1: @checkers.javari.quals.ReadOnly

    method factory()LCell;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+9: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly

    method staticFactory()LCell;: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <clinit>()V:

package :
class Cell:
    bound ,0 &0: @checkers.javari.quals.ReadOnly

    field val: @checkers.javari.quals.ReadOnly

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly

    method getVal()Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly

    method setVal(Ljava/lang/Object;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
        local 1 #0+6: @checkers.javari.quals.ReadOnly

package :
class Date:

    field day:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method <init>(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable
        local 1 #0+10:

    method getDay()I:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method setDay(I)V:
        parameter #0:
        receiver: @checkers.javari.quals.Mutable
        local 0 #0+6: @checkers.javari.quals.Mutable
        local 1 #0+6:

package :
class InnerClassTest$1:
    bound ,0 &0: @checkers.javari.quals.ReadOnly

    field this$0: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <init>(LInnerClassTest;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method initializedFieldFoo()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly

package :
class InnerClassTest$2:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method staticInitializedFieldFoo()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly

package :
class InnerClassTest$3:
    bound ,0 &0: @checkers.javari.quals.ReadOnly

    field this$0: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <init>(LInnerClassTest;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

    method factoryFoo()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly

    method var()Ljava/lang/Object;: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+2: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly

package :
class InnerClassTest$4:

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

    method factoryFoo()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+1: @checkers.javari.quals.ReadOnly

package :
class InnerClassTest$AIn:
    bound ,0 &0: @checkers.javari.quals.ReadOnly
    bound ,1 &0: @checkers.javari.quals.ReadOnly

    field f: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    field sf: @checkers.javari.quals.ReadOnly

    field this$0: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <init>(LInnerClassTest;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly
            inner-type 1: @checkers.javari.quals.ReadOnly

package :
class InnerClassTest$Inner:
    bound ,0 &0: @checkers.javari.quals.ReadOnly

    field c: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    field this$0: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <init>(LInnerClassTest;)V:
        parameter #0: @checkers.javari.quals.ReadOnly
            inner-type 0: @checkers.javari.quals.ReadOnly
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+10: @checkers.javari.quals.Mutable
            inner-type 0: @checkers.javari.quals.ReadOnly

package :
class InnerClassTest$Nested:

    field c: @checkers.javari.quals.ReadOnly
        inner-type 0: @checkers.javari.quals.ReadOnly

    method <init>()V:
        receiver: @checkers.javari.quals.ReadOnly
        local 0 #0+5: @checkers.javari.quals.ReadOnly

